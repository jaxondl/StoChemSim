(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    586268,      10732]
NotebookOptionsPosition[    574276,      10512]
NotebookOutlinePosition[    580185,      10635]
CellTagsIndexPosition[    580142,      10632]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CRNSSA Demo", "Title",
 CellChangeTimes->{{3.8147292785447936`*^9, 3.8147292854487743`*^9}, {
  3.8242482560164833`*^9, 
  3.824248260176464*^9}},ExpressionUUID->"99313edb-9280-4a33-9415-\
fe73f5350fe5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "CRNSSA`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"?", "CRNSSA`*"}]}], "Input",
 CellChangeTimes->{{3.8121561693612485`*^9, 3.812156171593361*^9}, {
   3.8163745297158756`*^9, 3.816374532987081*^9}, 3.8163792638170104`*^9, {
   3.824248268170289*^9, 3.8242482684894447`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8acb8700-aa44-4b5e-a852-0474740d5f06"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["CRNSSA`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], " ", 
              StyleBox["CRNSSA`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["GetRuntimeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0475d24e-bbca-4107-8467-b9b2b5d2c815", {
                   "GetRuntimeInfo", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotLastSimulation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0475d24e-bbca-4107-8467-b9b2b5d2c815", {
                   "PlotLastSimulation", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["SimulateBoundedTauLeaping", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0475d24e-bbca-4107-8467-b9b2b5d2c815", {
                   "SimulateBoundedTauLeaping", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimulateDirectSSA", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0475d24e-bbca-4107-8467-b9b2b5d2c815", {
                   "SimulateDirectSSA", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.824248269310271*^9, 3.824249184979843*^9, 3.826674894618745*^9, 
   3.82667542333969*^9, 3.826675582227007*^9, {3.8266757286600094`*^9, 
   3.8266757432444677`*^9}, 3.8266771096601152`*^9, 3.826677140930062*^9, {
   3.826677298319602*^9, 3.8266773152396946`*^9}, 3.8266773654964895`*^9, 
   3.8266779256171227`*^9, 3.826677970960821*^9, 3.826678494272912*^9, 
   3.826821344299673*^9, 3.826824395181867*^9, 3.8268246274046707`*^9, 
   3.826824706461411*^9, {3.8272774320056696`*^9, 3.827277451738598*^9}, {
   3.8272775456385403`*^9, 3.8272775606225414`*^9}, 3.827277812963708*^9, 
   3.8272791077680216`*^9, 3.8272793292744017`*^9, 3.8272804798391075`*^9, 
   3.827280584686715*^9, 3.827280622044793*^9, 3.827283034252796*^9, 
   3.827283188478644*^9, 3.8272839970968523`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"638f9dea-e5f2-4572-95a9-a7c13a482e8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 0: f(x) = 1", "Subtitle",
 CellChangeTimes->{{3.8209417094500203`*^9, 3.8209417202266154`*^9}, {
  3.821202949424705*^9, 
  3.821202950563792*^9}},ExpressionUUID->"52ad3c2d-9e9e-48e6-8d6d-\
8ea980b00547"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rxnsys0", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rxnl", "[", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"{", "y", "}"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rxnl", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y", ",", "y"}], "}"}], ",", 
       RowBox[{"{", "y", "}"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"conc", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "y"}], "}"}], ",", "5"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys0", "]"}]}], "Input",
 CellChangeTimes->{{3.8209405871178603`*^9, 3.8209405988669605`*^9}, {
   3.8209406574982576`*^9, 3.8209407094906034`*^9}, 3.820940849034672*^9, {
   3.8209410857557325`*^9, 3.8209410908423715`*^9}, {3.821200285878623*^9, 
   3.821200286957405*^9}, {3.821202484758175*^9, 3.8212025179974904`*^9}, 
   3.8212883891020403`*^9, {3.822410910964633*^9, 3.8224109164136114`*^9}, {
   3.82667571411487*^9, 3.826675720146099*^9}, {3.826675761971161*^9, 
   3.8266757825622425`*^9}, {3.8266774116830683`*^9, 3.826677440218357*^9}, {
   3.8266778455235696`*^9, 3.8266778540291758`*^9}, 3.8268213110612884`*^9, {
   3.826824417124543*^9, 3.8268244173542194`*^9}, {3.8272772591228456`*^9, 
   3.8272772593541574`*^9}, 3.827277688227537*^9, {3.827279333236483*^9, 
   3.8272793333960066`*^9}, 3.8272830437193065`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"8b417677-a446-4ab6-80dd-94d45d2a2df6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8209407132668953`*^9, 3.8209409079220004`*^9, 3.8209410926254463`*^9, 
   3.820941755595992*^9, 3.820942123063661*^9, 3.820942203134418*^9, 
   3.8209423601303215`*^9, 3.821199377726633*^9, 3.8211994421561885`*^9, 
   3.8212002948100257`*^9, 3.821201282035832*^9, 3.821202114191646*^9, 
   3.8212024274327297`*^9, 3.821202490570396*^9, 3.8212025209742827`*^9, 
   3.821202736082944*^9, 3.821202959173526*^9, 3.8212031554974966`*^9, 
   3.821206487438026*^9, 3.8212878017882257`*^9, 3.8212884670704565`*^9, {
   3.8212885019069843`*^9, 3.8212885309824305`*^9}, 3.822411442154019*^9, 
   3.8224361159898233`*^9, 3.82363399796006*^9, 3.82424827661791*^9, 
   3.8242491890026197`*^9, 3.8266748962432857`*^9, 3.82667496519069*^9, {
   3.826675725043338*^9, 3.8266757451557083`*^9}, 3.8266757840341997`*^9, 
   3.82667711180444*^9, 3.826677143601319*^9, 3.8266773177079334`*^9, {
   3.8266778460012937`*^9, 3.826677854598053*^9}, 3.826678499847144*^9, 
   3.8268213467042494`*^9, {3.826824403347414*^9, 3.826824417689105*^9}, 
   3.8268246277407703`*^9, 3.826824706877803*^9, 3.827277563110794*^9, 
   3.827277689666816*^9, 3.827277816063834*^9, 3.827279335587428*^9, 
   3.8272806240381393`*^9, {3.827283036249439*^9, 3.827283044882655*^9}, 
   3.8272831943415637`*^9, 3.827284002894562*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"947b5f79-feb1-44a7-9e8b-3818876bdb5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys0", ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<States and Times Example\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8209407204450235`*^9, 3.820940728162553*^9}, {
   3.820940758475727*^9, 3.8209407697393293`*^9}, {3.820941031589341*^9, 
   3.8209410333386908`*^9}, {3.8209420287080917`*^9, 3.820942032733575*^9}, 
   3.8212884341016254`*^9, 3.821288506550565*^9, {3.822410924661095*^9, 
   3.822410925244051*^9}, {3.8224113343163233`*^9, 3.8224113469749775`*^9}, {
   3.8224355613377275`*^9, 3.822435595453456*^9}, {3.824248279393591*^9, 
   3.8242483382745843`*^9}, {3.824248390189535*^9, 3.8242483909006557`*^9}, {
   3.824248443254269*^9, 3.824248466614422*^9}, {3.826674904323457*^9, 
   3.826674905650203*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e01cb462-3bf6-45d3-aeb7-66e85bb61022"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0147827899862467`", ",", "0.017346373607595104`", ",", 
     "0.07043733944880073`", ",", "0.2522691768497191`", ",", 
     "0.3789463792009678`", ",", "0.4828349662565076`", ",", 
     "0.5258192157060902`", ",", "1.0717579397421924`", ",", 
     "1.0908716153764184`", ",", "1.2434313431818433`", ",", 
     "2.216157034563823`", ",", "2.9605388088183697`", ",", 
     "4.811735031781696`", ",", "6.434839488271489`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8212885315429316`*^9, 3.82241144249156*^9, 3.822436119417652*^9, 
   3.823633998758215*^9, 3.824248282200124*^9, {3.824248318104014*^9, 
   3.824248338722396*^9}, 3.8242483931656513`*^9, 3.8242484670312796`*^9, 
   3.824249189274899*^9, 3.8266748972001605`*^9, 3.8266749659136677`*^9, {
   3.82667578832016*^9, 3.8266758130339584`*^9}, 3.8266771139193974`*^9, 
   3.826677144132078*^9, 3.8266773183601894`*^9, 3.8266785001882324`*^9, 
   3.8268213475821266`*^9, {3.8268244058183737`*^9, 3.826824418720867*^9}, 
   3.8268246279721518`*^9, 3.82682470713811*^9, {3.8272776666092014`*^9, 
   3.8272776921380215`*^9}, {3.827283037431649*^9, 3.8272830468128357`*^9}, {
   3.827283100546358*^9, 3.827283105339142*^9}, 3.827283194673768*^9, 
   3.827284003249942*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"59e6be0c-bd8f-4941-a90d-69ec73a009f3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.0147827899862467, 5.}, {0.017346373607595104`, 
         5.}, {0.07043733944880073, 4.}, {0.2522691768497191, 4.}, {
         0.3789463792009678, 3.}, {0.4828349662565076, 3.}, {
         0.5258192157060902, 3.}, {1.0717579397421924`, 2.}, {
         1.0908716153764184`, 2.}, {1.2434313431818433`, 2.}, {
         2.216157034563823, 1.}, {2.9605388088183697`, 1.}, {
         4.811735031781696, 0.}, {6.434839488271489, 0.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.0147827899862467, 4.}, {0.017346373607595104`, 
         3.}, {0.07043733944880073, 4.}, {0.2522691768497191, 3.}, {
         0.3789463792009678, 4.}, {0.4828349662565076, 3.}, {
         0.5258192157060902, 2.}, {1.0717579397421924`, 3.}, {
         1.0908716153764184`, 2.}, {1.2434313431818433`, 1.}, {
         2.216157034563823, 2.}, {2.9605388088183697`, 1.}, {
         4.811735031781696, 2.}, {6.434839488271489, 1.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"States and Times Example\"", TraditionalForm], 
     PlotRange -> {{0., 6.434839488271489}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x", "y"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8212885315429316`*^9, 3.82241144249156*^9, 3.822436119417652*^9, 
   3.823633998758215*^9, 3.824248282200124*^9, {3.824248318104014*^9, 
   3.824248338722396*^9}, 3.8242483931656513`*^9, 3.8242484670312796`*^9, 
   3.824249189274899*^9, 3.8266748972001605`*^9, 3.8266749659136677`*^9, {
   3.82667578832016*^9, 3.8266758130339584`*^9}, 3.8266771139193974`*^9, 
   3.826677144132078*^9, 3.8266773183601894`*^9, 3.8266785001882324`*^9, 
   3.8268213475821266`*^9, {3.8268244058183737`*^9, 3.826824418720867*^9}, 
   3.8268246279721518`*^9, 3.82682470713811*^9, {3.8272776666092014`*^9, 
   3.8272776921380215`*^9}, {3.827283037431649*^9, 3.8272830468128357`*^9}, {
   3.827283100546358*^9, 3.827283105339142*^9}, 3.827283194673768*^9, 
   3.8272840036232386`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5f774049-51eb-499c-a82c-c3384b712904"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys0", ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<States Only Example\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8242483722441106`*^9, 3.82424843977352*^9}, {
  3.8242486489403057`*^9, 3.82424865177876*^9}, {3.8266749090752788`*^9, 
  3.8266749098979387`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f6d49b94-9e8b-4a36-ae44-e2b1dcfd3145"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8242484146118374`*^9, 3.8242484695915246`*^9, {3.8242491633561277`*^9, 
   3.8242491899730473`*^9}, 3.826674968460503*^9, 3.8266757923645115`*^9, 
   3.8266771447864947`*^9, 3.8266773191331186`*^9, 3.826678500694618*^9, 
   3.8268213576406794`*^9, 3.8268244202290835`*^9, 3.8268246289401035`*^9, 
   3.8268247081334558`*^9, 3.8272830504827166`*^9, 3.827283201432562*^9, 
   3.827284006908234*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"f9019e5f-7d2f-4243-aa05-dc25aa9a7fab"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {1., 4.}, {2., 4.}, {3., 3.}, {4., 3.}, {5., 3.}, {
         6., 2.}, {7., 2.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 0.}, {12., 
         0.}, {13., 0.}, {14., 0.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {1., 6.}, {2., 5.}, {3., 6.}, {4., 5.}, {5., 4.}, {
         6., 5.}, {7., 4.}, {8., 5.}, {9., 4.}, {10., 3.}, {11., 4.}, {12., 
         3.}, {13., 2.}, {14., 1.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"States Only Example\"", TraditionalForm], 
     PlotRange -> {{0., 14.}, {0, All}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x", "y"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8242484146118374`*^9, 3.8242484695915246`*^9, {3.8242491633561277`*^9, 
   3.8242491899730473`*^9}, 3.826674968460503*^9, 3.8266757923645115`*^9, 
   3.8266771447864947`*^9, 3.8266773191331186`*^9, 3.826678500694618*^9, 
   3.8268213576406794`*^9, 3.8268244202290835`*^9, 3.8268246289401035`*^9, 
   3.8268247081334558`*^9, 3.8272830504827166`*^9, 3.827283201432562*^9, 
   3.827284007015832*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0b3d0b56-bc3b-463b-8cbd-bec9095a8051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateBoundedTauLeaping", "[", 
  RowBox[{"rxnsys0", ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"epsilon", "\[Rule]", "0.5"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<BTL Example\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.827277272090618*^9, 3.827277279042055*^9}, {
  3.8272775681873703`*^9, 3.8272776419943657`*^9}, {3.827279355323676*^9, 
  3.827279378996049*^9}, {3.8272804948533373`*^9, 3.827280532644278*^9}, {
  3.8272806394693604`*^9, 3.827280745981558*^9}, {3.8272807832773695`*^9, 
  3.82728081951659*^9}, {3.8272830639914975`*^9, 3.8272830778724766`*^9}, {
  3.827283149206915*^9, 3.8272831561993265`*^9}, {3.827283211014696*^9, 
  3.8272832612459917`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"30b5d26f-07c3-4eda-8fd7-31726095345b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.14315627068525213`", ",", "0.15239306051728493`", ",", 
     "0.3938457412739089`", ",", "0.5907069260977028`", ",", 
     "0.75423061805558`", ",", "1.0336315257241315`", ",", 
     "1.7233237554588108`", ",", "1.9850088988040926`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.827277283999254*^9, {3.8272775756806183`*^9, 3.827277651758015*^9}, 
   3.827277697135647*^9, 3.8272778188027215`*^9, 3.8272791105830517`*^9, {
   3.8272793399901285`*^9, 3.827279380398554*^9}, {3.827280483077561*^9, 
   3.827280533143568*^9}, {3.827280580893858*^9, 3.8272805888739843`*^9}, {
   3.827280635460825*^9, 3.8272807462514286`*^9}, {3.8272807855594993`*^9, 
   3.827280809095829*^9}, {3.8272830518257103`*^9, 3.8272830789234185`*^9}, {
   3.827283109621592*^9, 3.8272831124405756`*^9}, {3.8272831524690895`*^9, 
   3.8272831627223797`*^9}, {3.8272832043990993`*^9, 3.827283277769423*^9}, 
   3.8272840087548966`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"7c9fbdf5-cf1b-4069-947b-74cc0ac86b3e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.14315627068525213`, 5.}, {0.15239306051728493`, 
         4.}, {0.3938457412739089, 2.}, {0.5907069260977028, 1.}, {
         0.75423061805558, 1.}, {1.0336315257241315`, 1.}, {
         1.7233237554588108`, 0.}, {1.9850088988040926`, 0.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.14315627068525213`, 2.}, {0.15239306051728493`, 
         3.}, {0.3938457412739089, 4.}, {0.5907069260977028, 4.}, {
         0.75423061805558, 2.}, {1.0336315257241315`, 1.}, {
         1.7233237554588108`, 2.}, {1.9850088988040926`, 
         1.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTL Example\"", TraditionalForm], 
     PlotRange -> {{0., 1.9850088988040926`}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x", "y"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.827277283999254*^9, {3.8272775756806183`*^9, 3.827277651758015*^9}, 
   3.827277697135647*^9, 3.8272778188027215`*^9, 3.8272791105830517`*^9, {
   3.8272793399901285`*^9, 3.827279380398554*^9}, {3.827280483077561*^9, 
   3.827280533143568*^9}, {3.827280580893858*^9, 3.8272805888739843`*^9}, {
   3.827280635460825*^9, 3.8272807462514286`*^9}, {3.8272807855594993`*^9, 
   3.827280809095829*^9}, {3.8272830518257103`*^9, 3.8272830789234185`*^9}, {
   3.827283109621592*^9, 3.8272831124405756`*^9}, {3.8272831524690895`*^9, 
   3.8272831627223797`*^9}, {3.8272832043990993`*^9, 3.827283277769423*^9}, 
   3.827284008846603*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"69196d00-e2b1-45c7-8a1a-8a94eecc96d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 1: Demonstrating functionality", "Subtitle",
 CellChangeTimes->{{3.8147293084016476`*^9, 3.8147293236251154`*^9}, {
  3.8147294485535164`*^9, 3.8147294551377077`*^9}, {3.8147294940728483`*^9, 
  3.8147294946413283`*^9}, {3.8147300945293055`*^9, 3.8147300953690586`*^9}, {
  3.8147305699453588`*^9, 3.8147305706335526`*^9}, {3.820942126937954*^9, 
  3.8209421278581905`*^9}, {3.8268246701952696`*^9, 
  3.8268247003791895`*^9}},ExpressionUUID->"26cee006-515b-4511-9df5-\
a84f93ecb4e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rxnsys1", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"2", "x"}], "+", 
       RowBox[{"3", "y"}], "+", 
       RowBox[{"8", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "-", "k"}], "]"}], "[", 
         RowBox[{"j", "+", "k"}], "]"}]}]}], ",", "3"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"revrxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"j", "+", "k"}], "]"}], "[", 
       RowBox[{"j", "-", "k"}], "]"}], ",", "1", ",", "4", ",", "5"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"rxnl", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "+", "k"}], "]"}], "[", 
         RowBox[{"j", "-", "k"}], "]"}], ",", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "-", "k"}], "]"}], "[", 
         RowBox[{"j", "+", "k"}], "]"}], ",", "x", ",", "x"}], "}"}], ",", 
      "10"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{"a", ",", " ", "10"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "}"}], ",", "1000"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "+", "k"}], "]"}], "[", 
         RowBox[{"j", "-", "k"}], "]"}], ",", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "-", "k"}], "]"}], "[", 
         RowBox[{"j", "+", "k"}], "]"}]}], "}"}], ",", "2000"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys1", "]"}]}], "Input",
 CellChangeTimes->{{3.812156221317891*^9, 3.8121562223571997`*^9}, {
   3.8121565321899853`*^9, 3.812156636184914*^9}, {3.812158087830205*^9, 
   3.812158090086171*^9}, {3.8121582194104958`*^9, 3.8121582195062714`*^9}, {
   3.8121586616070833`*^9, 3.812158662749466*^9}, {3.812158724346055*^9, 
   3.8121587491227446`*^9}, {3.8136902494857635`*^9, 3.813690293866238*^9}, {
   3.813690325675309*^9, 3.8136903534044065`*^9}, {3.8136904686793365`*^9, 
   3.8136905470523114`*^9}, {3.813690759774906*^9, 3.8136907808301764`*^9}, {
   3.81369180465316*^9, 3.8136918059147563`*^9}, {3.8136958192970276`*^9, 
   3.8136958287362013`*^9}, 3.814408563951381*^9, {3.814408598103632*^9, 
   3.8144086220944853`*^9}, {3.8147258847932034`*^9, 
   3.8147259087758307`*^9}, {3.814729346482357*^9, 3.814729374177208*^9}, {
   3.8147294727465734`*^9, 3.814729479738203*^9}, {3.820940476595192*^9, 
   3.8209404795634985`*^9}, {3.8224111527245684`*^9, 3.822411153342013*^9}, 
   3.8266750014990063`*^9, {3.8266750624270916`*^9, 3.826675080553746*^9}, {
   3.826675119434166*^9, 3.8266751558661647`*^9}, {3.8266774868753557`*^9, 
   3.8266775743793073`*^9}, 3.8266776538433204`*^9, 3.826677860355669*^9, 
   3.826678505739359*^9, 3.8266785474193554`*^9, {3.826821326236198*^9, 
   3.826821326240182*^9}, {3.8268244953107843`*^9, 3.8268245190603533`*^9}, {
   3.827283367958497*^9, 3.827283388959013*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4ac59a20-336b-40bd-8b3f-f93ee47e266c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "3", " "}]], " ", 
    RowBox[{
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"3", " ", "y"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"j", "-", "k"}], "]"}], "[", 
       RowBox[{"j", "+", "k"}], "]"}]}]}]}], " ", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"z", "[", 
      RowBox[{"j", "+", "k"}], "]"}], "[", 
     RowBox[{"j", "-", "k"}], "]"}], " ", 
    UnderoverscriptBox["\[RightArrowLeftArrow]", "5", "4"], " ", "1"}], " ", 
   ",", 
   RowBox[{"rxnl", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "+", "k"}], "]"}], "[", 
        RowBox[{"j", "-", "k"}], "]"}], ",", 
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "-", "k"}], "]"}], "[", 
        RowBox[{"j", "+", "k"}], "]"}], ",", "x", ",", "x"}], "}"}], ",", 
     "10"}], "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{"a", ",", "10"}], "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "}"}], ",", "1000"}], 
    "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "+", "k"}], "]"}], "[", 
        RowBox[{"j", "-", "k"}], "]"}], ",", 
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "-", "k"}], "]"}], "[", 
        RowBox[{"j", "+", "k"}], "]"}]}], "}"}], ",", "2000"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.813690624906864*^9, {3.8136907606148233`*^9, 3.813690782168937*^9}, 
   3.8136918133487988`*^9, 3.8136958301231513`*^9, 3.813699945633653*^9, 
   3.813777915630871*^9, 3.8137779859428535`*^9, {3.8137792360494165`*^9, 
   3.8137792632449865`*^9}, 3.8137820928263764`*^9, 3.813944103855402*^9, 
   3.8144028436751347`*^9, 3.8144081083192215`*^9, 3.8144082771910286`*^9, 
   3.8144085704883857`*^9, 3.814408629290242*^9, 3.8144093130514326`*^9, 
   3.814409760515033*^9, 3.814457945869589*^9, 3.814458696603682*^9, 
   3.8144591187200966`*^9, 3.814724627919652*^9, 3.814730099494031*^9, 
   3.8147305729224005`*^9, 3.8147308015701776`*^9, 3.8147323799692*^9, 
   3.8147354422319083`*^9, 3.8147506691070185`*^9, 3.8163730855178356`*^9, 
   3.8163745389032745`*^9, 3.816378339477339*^9, 3.816378694186903*^9, 
   3.8163793938844385`*^9, 3.820940429280677*^9, 3.8209404814228983`*^9, 
   3.82094177190296*^9, 3.8209421306166477`*^9, 3.8209422220656633`*^9, 
   3.8209423799023027`*^9, 3.821199395948637*^9, 3.8212030140196595`*^9, {
   3.8212032176712947`*^9, 3.8212032354329515`*^9}, 3.821203701599944*^9, 
   3.82120648854568*^9, 3.8212878161212955`*^9, 3.821288532152301*^9, 
   3.822411447232175*^9, 3.8224361327649746`*^9, 3.823634002617035*^9, 
   3.8242484980655437`*^9, 3.8242491903221283`*^9, 3.8266749840512743`*^9, 
   3.8266750507513857`*^9, 3.8266751571592374`*^9, 3.826677146240513*^9, {
   3.8266775716386847`*^9, 3.8266775747575493`*^9}, 3.8266776545099993`*^9, 
   3.8266778610229006`*^9, 3.826677933463395*^9, 3.826677975124313*^9, 
   3.826678506421739*^9, 3.8266785477939286`*^9, 3.8268244858394065`*^9, 
   3.8268245195213594`*^9, 3.8268246295075884`*^9, 3.826824708632636*^9, {
   3.8272832996168337`*^9, 3.827283312462165*^9}, 3.82728339066426*^9, 
   3.8272840119735804`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"53942cb4-8189-4ff8-8848-0e3b86fab1cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "x", ",", "y", ",", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "-", "k"}], "]"}], "[", 
    RowBox[{"j", "+", "k"}], "]"}], ",", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "+", "k"}], "]"}], "[", 
    RowBox[{"j", "-", "k"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813690624906864*^9, {3.8136907606148233`*^9, 3.813690782168937*^9}, 
   3.8136918133487988`*^9, 3.8136958301231513`*^9, 3.813699945633653*^9, 
   3.813777915630871*^9, 3.8137779859428535`*^9, {3.8137792360494165`*^9, 
   3.8137792632449865`*^9}, 3.8137820928263764`*^9, 3.813944103855402*^9, 
   3.8144028436751347`*^9, 3.8144081083192215`*^9, 3.8144082771910286`*^9, 
   3.8144085704883857`*^9, 3.814408629290242*^9, 3.8144093130514326`*^9, 
   3.814409760515033*^9, 3.814457945869589*^9, 3.814458696603682*^9, 
   3.8144591187200966`*^9, 3.814724627919652*^9, 3.814730099494031*^9, 
   3.8147305729224005`*^9, 3.8147308015701776`*^9, 3.8147323799692*^9, 
   3.8147354422319083`*^9, 3.8147506691070185`*^9, 3.8163730855178356`*^9, 
   3.8163745389032745`*^9, 3.816378339477339*^9, 3.816378694186903*^9, 
   3.8163793938844385`*^9, 3.820940429280677*^9, 3.8209404814228983`*^9, 
   3.82094177190296*^9, 3.8209421306166477`*^9, 3.8209422220656633`*^9, 
   3.8209423799023027`*^9, 3.821199395948637*^9, 3.8212030140196595`*^9, {
   3.8212032176712947`*^9, 3.8212032354329515`*^9}, 3.821203701599944*^9, 
   3.82120648854568*^9, 3.8212878161212955`*^9, 3.821288532152301*^9, 
   3.822411447232175*^9, 3.8224361327649746`*^9, 3.823634002617035*^9, 
   3.8242484980655437`*^9, 3.8242491903221283`*^9, 3.8266749840512743`*^9, 
   3.8266750507513857`*^9, 3.8266751571592374`*^9, 3.826677146240513*^9, {
   3.8266775716386847`*^9, 3.8266775747575493`*^9}, 3.8266776545099993`*^9, 
   3.8266778610229006`*^9, 3.826677933463395*^9, 3.826677975124313*^9, 
   3.826678506421739*^9, 3.8266785477939286`*^9, 3.8268244858394065`*^9, 
   3.8268245195213594`*^9, 3.8268246295075884`*^9, 3.826824708632636*^9, {
   3.8272832996168337`*^9, 3.827283312462165*^9}, 3.82728339066426*^9, 
   3.8272840119805193`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"524625e3-9622-4dc7-8790-733376c2d87b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpeciesInRxnsys", "[", 
  RowBox[{"rxnsys1", ",", " ", 
   RowBox[{
    RowBox[{"z", "[", "_", "]"}], "[", "_", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8136907285561438`*^9, 3.813690790361905*^9}, {
   3.8136958054154396`*^9, 3.8136958077033677`*^9}, 3.814408566863628*^9, {
   3.8144093756226687`*^9, 3.8144093865816298`*^9}, 3.8147292055696926`*^9, {
   3.8266785157713623`*^9, 3.82667853861833*^9}, 3.826821314816223*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"6b802521-abe5-46a6-a500-e567ba56f44a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "-", "k"}], "]"}], "[", 
    RowBox[{"j", "+", "k"}], "]"}], ",", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "+", "k"}], "]"}], "[", 
    RowBox[{"j", "-", "k"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814729206049425*^9, 3.8147301009764967`*^9, 3.8147305741416564`*^9, 
   3.8147308020169835`*^9, 3.814732381076254*^9, 3.8147354427012987`*^9, 
   3.8147506694909925`*^9, 3.816373087342509*^9, 3.816374540068579*^9, 
   3.8163783415019236`*^9, 3.8163786965149107`*^9, 3.8163793942504597`*^9, 
   3.820940431505563*^9, 3.8209404855072975`*^9, 3.820941776106171*^9, 
   3.820942132272545*^9, 3.8209422223779488`*^9, 3.8209423802053537`*^9, 
   3.8212030173318343`*^9, {3.82120321916004*^9, 3.8212032370779667`*^9}, 
   3.821203705701233*^9, 3.821206489383441*^9, 3.821287818418151*^9, 
   3.8212885324564877`*^9, 3.822411448330711*^9, 3.8224361335458574`*^9, 
   3.823634003441637*^9, 3.8242485001589985`*^9, 3.8242491907749233`*^9, 
   3.8266749849600058`*^9, 3.826675053103543*^9, 3.82667515902936*^9, 
   3.826677146939413*^9, {3.8266785079684453`*^9, 3.8266785516238127`*^9}, 
   3.8268245235947995`*^9, 3.8268246298893623`*^9, 3.826824708836093*^9, {
   3.8272833062499247`*^9, 3.827283315334114*^9}, 3.8272833924974995`*^9, 
   3.827284013618841*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"f28fa932-ec13-443d-b612-230902ff2796"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys1", ",", 
   RowBox[{"iterEnd", "\[Rule]", "15"}], ",", 
   RowBox[{"useIter", "\[Rule]", "True"}], ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81472914943776*^9, 3.8147291765769897`*^9}, 
   3.820941860800666*^9, {3.8209420429675617`*^9, 3.820942047947171*^9}, {
   3.8212036980547934`*^9, 3.8212036994600697`*^9}, 3.8212883184625483`*^9, {
   3.8224111641894903`*^9, 3.8224111645610967`*^9}, {3.822435608261158*^9, 
   3.822435668086137*^9}, {3.8224361429875937`*^9, 3.822436146895141*^9}, {
   3.8224362721789675`*^9, 3.8224363030583563`*^9}, {3.8236340075244684`*^9, 
   3.823634009235863*^9}, {3.8242485040796123`*^9, 3.8242485407604446`*^9}, {
   3.8242485849304686`*^9, 3.8242485902413697`*^9}, {3.8242486412746162`*^9, 
   3.824248644498046*^9}, 3.8266749459084034`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"77c1fb6b-12dc-4da7-a958-5c5a4452f187"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "2000"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1999"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1998"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1997"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1996"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1995"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1994"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1993"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1992"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1991"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1990"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1989"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1988"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1987"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1986"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1985"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147291780350904`*^9, 3.8147301016307487`*^9, 3.814730574646409*^9, 
   3.814730802388991*^9, 3.814732381613818*^9, 3.8147351001328497`*^9, 
   3.81473544306411*^9, 3.814750669706415*^9, 3.816373087978814*^9, 
   3.8163745406915913`*^9, 3.8163783427646523`*^9, 3.81637869723997*^9, 
   3.8163793945596333`*^9, 3.820940442724416*^9, 3.8209404879689474`*^9, 
   3.8209418768896704`*^9, 3.820942138008053*^9, 3.8209422287339983`*^9, 
   3.8209423869083867`*^9, 3.821199406805237*^9, 3.8212030184831886`*^9, {
   3.821203219855632*^9, 3.821203237738504*^9}, 3.8212037062391667`*^9, 
   3.821206489850192*^9, 3.8212878198084345`*^9, 3.821288532667448*^9, 
   3.822411449590663*^9, 3.8224361345651255`*^9, 3.822436209409894*^9, 
   3.8224363044985323`*^9, 3.8236340097582474`*^9, 3.824248517422267*^9, 
   3.8242485533850007`*^9, 3.8242491915897646`*^9, 3.826674988879505*^9, 
   3.8266750562229414`*^9, 3.826675160527723*^9, 3.826677147635498*^9, 
   3.826678552208644*^9, 3.8268245312531033`*^9, 3.826824630073928*^9, 
   3.8268247091233244`*^9, 3.8272833213717556`*^9, 3.827283397742605*^9, 
   3.8272840148441715`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"84bf887e-dc6c-4689-be65-cc421db2e1a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimulateBoundedTauLeaping", "[", 
  RowBox[{"rxnsys1", ",", 
   RowBox[{"iterEnd", "\[Rule]", "15"}], ",", 
   RowBox[{"useIter", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824248570912603*^9, 3.824248596361162*^9}, {
   3.8242486332598114`*^9, 3.8242486390026054`*^9}, 3.8266749498339815`*^9, {
   3.8272833316076355`*^9, 3.827283344239098*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"727dc939-bc19-45b3-a825-77595faf5284"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1930"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1896"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1862"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1829"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1797"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1765"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1734"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1703"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1673"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1643"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1614"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1585"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1557"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1529"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.006020153918258338`", ",", "0.01011893597434756`", ",", 
     "0.01521385636267161`", ",", "0.018971824890287488`", ",", 
     "0.02383121383291171`", ",", "0.027083563012318703`", ",", 
     "0.030764824964365247`", ",", "0.035720226494913965`", ",", 
     "0.039849225425421915`", ",", "0.04500281024315337`", ",", 
     "0.0504586930711697`", ",", "0.053920809959721115`", ",", 
     "0.0581125278543108`", ",", "0.06197375047457056`", ",", 
     "0.06708511678492447`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.824248573486785*^9, 3.824249193446846*^9, 3.826674990040995*^9, 
   3.826678593744368*^9, 3.8268245324451947`*^9, 3.826824631027895*^9, 
   3.8268247093051987`*^9, {3.8272833243568745`*^9, 3.8272833451348157`*^9}, 
   3.827283400118695*^9, 3.827284016121971*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"b5e4e4bc-9644-41b8-9f6f-f9a1dfbf0a1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 2: A deterministic CRN", "Subtitle",
 CellChangeTimes->{{3.814729433809305*^9, 3.8147294355456643`*^9}, {
  3.81472950289729*^9, 
  3.814729513665765*^9}},ExpressionUUID->"cac518be-760f-4e04-892e-\
7b19f51723f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rxnsys2", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"x1", ",", 
      RowBox[{"y", "+", "z1"}], ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{"x2", ",", 
      RowBox[{"y", "+", "z2"}], ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"z1", "+", "z2"}], ",", "k", ",", "1"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"k", "+", "y"}], ",", "0", ",", "3"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{"x1", ",", "5000"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{"x2", ",", "15000"}], "]"}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys2", "]"}]}], "Input",
 CellChangeTimes->{{3.8144085881445637`*^9, 3.8144085949750285`*^9}, {
   3.8144086415345135`*^9, 3.814408773526466*^9}, {3.8144579679866905`*^9, 
   3.8144579724018903`*^9}, {3.814458753761915*^9, 3.8144587621056166`*^9}, {
   3.8147258972328653`*^9, 3.8147259108556476`*^9}, {3.814729528665941*^9, 
   3.8147295295857563`*^9}, {3.8224112980189466`*^9, 3.822411312097892*^9}, {
   3.8268213148222055`*^9, 3.8268213262431736`*^9}, 3.826824674660168*^9, {
   3.827283458055205*^9, 3.8272834674380693`*^9}, {3.8272836209282804`*^9, 
   3.8272836240790577`*^9}, {3.827283664671192*^9, 3.8272836648221917`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9fe609a4-5ad6-46db-842b-92f8411dd608"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2", " "}]], " ", 
    RowBox[{"y", "+", "z1"}]}], " ", ",", 
   RowBox[{"x2", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2", " "}]], " ", 
    RowBox[{"y", "+", "z2"}]}], " ", ",", 
   RowBox[{
    RowBox[{"z1", "+", "z2"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "k"}], " ", ",", 
   RowBox[{
    RowBox[{"k", "+", "y"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "3", " "}]], " ", "0"}], " ", ",", 
   RowBox[{"conc", "[", 
    RowBox[{"x1", ",", "5000"}], "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{"x2", ",", "15000"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeJzm754ZGS/cWy4G9oDos81KBwB0TfW+ng3AGmnnFJ/
EJ34XGUliH74YPcmED3BUuQeiBZ9tKaJKeeN4xv/b3qsQPrhB4EsEK3GUNwG
olemvvBmA9Jl0jmn2IH0FK7jlvxA+jDn3X+a+W8cteqWaWoBaQEeXVsQLaee
2gCi2R/nzrpb/sbx5I2A9HtAOiwhtQxEy7bltYHoOVuPPYuteON4bTtzbTyQ
/vFYzKIdSM/qZ2gG0ftWre4C0Z0v3W+srnrjKBJx8td2IK22UPsMQ+0bx5ur
sh/r1L1xPL8uTlcXSNd933DsbNMbR5OFrVvOAenfdxMzzgNpYzam1WLNbxx3
s/NvB9EfX+ftAdFSFhsPgOiT3TP3fwPSAvoJx0F0hLHwVTBf5ArbdyANAMMQ
tTY=
  "],
 CellLabel->"Out[16]=",ExpressionUUID->"e8139a95-b37b-439a-a318-9a9d5443b14d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", ",", "x1", ",", "x2", ",", "y", ",", "z1", ",", "z2"}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeJzm754ZGS/cWy4G9oDos81KBwB0TfW+ng3AGmnnFJ/
EJ34XGUliH74YPcmED3BUuQeiBZ9tKaJKeeN4xv/b3qsQPrhB4EsEK3GUNwG
olemvvBmA9Jl0jmn2IH0FK7jlvxA+jDn3X+a+W8cteqWaWoBaQEeXVsQLaee
2gCi2R/nzrpb/sbx5I2A9HtAOiwhtQxEy7bltYHoOVuPPYuteON4bTtzbTyQ
/vFYzKIdSM/qZ2gG0ftWre4C0Z0v3W+srnrjKBJx8td2IK22UPsMQ+0bx5ur
sh/r1L1xPL8uTlcXSNd933DsbNMbR5OFrVvOAenfdxMzzgNpYzam1WLNbxx3
s/NvB9EfX+ftAdFSFhsPgOiT3TP3fwPSAvoJx0F0hLHwVRD9yu4K23cgDQDL
BrY6
  "],
 CellLabel->"Out[17]=",ExpressionUUID->"cd960a72-9179-4177-bb5f-72033fcdc42c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", "rxnsys2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<Maximum Computation with Time\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8121608648864627`*^9, 3.812160882763273*^9}, {
   3.8144084175118294`*^9, 3.8144084184224854`*^9}, 3.8144085678788805`*^9, {
   3.814409394391098*^9, 3.814409394766097*^9}, {3.814409814502433*^9, 
   3.814409816717512*^9}, {3.81445878639508*^9, 3.8144587884096975`*^9}, {
   3.8144588828344636`*^9, 3.8144588829052424`*^9}, {3.814725928632921*^9, 
   3.8147259288562293`*^9}, {3.816378354103325*^9, 3.8163783551196084`*^9}, 
   3.8209420140522723`*^9, {3.820942053226987*^9, 3.820942055614102*^9}, {
   3.8209422554994326`*^9, 3.8209422561547284`*^9}, {3.822411354994705*^9, 
   3.8224113559451585`*^9}, {3.8224114649193974`*^9, 
   3.8224114655807977`*^9}, {3.822435755449415*^9, 3.822435755947051*^9}, {
   3.8224358244467916`*^9, 3.8224358578444777`*^9}, {3.823634020791829*^9, 
   3.8236340211252356`*^9}, {3.8242486104657955`*^9, 
   3.8242486289298873`*^9}, {3.8242486615788345`*^9, 3.8242488078868566`*^9}, 
   3.826674953161434*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"b6268b37-be13-4b8c-a833-d45a91bc13ff"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TimeSeries", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5.1135362829606725`", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5.1135362829606725`", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3.877590193379632`*^-10", "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TimeSeries, 1681360, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           TimeSeries, 
            6252189759604442958000783786128990823782122119325041168464, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("TemporalData[TimeSeries, <<1>>]"& )],
  False,
  BoxID -> 6252189759604442958000783786128990823782122119325041168464,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8163788595526867`*^9, 3.8163792709010954`*^9, 3.8163793967168627`*^9, 
   3.8209422709446316`*^9, 3.820942401045331*^9, 3.821203256005368*^9, 
   3.8212065053897867`*^9, 3.821287874644139*^9, 3.8212885343938427`*^9, {
   3.822411459249213*^9, 3.822411469025836*^9}, 3.8224363112324967`*^9, {
   3.823634018365156*^9, 3.8236340220223603`*^9}, {3.824248704866758*^9, 
   3.8242487107003045`*^9}, 3.824248827985618*^9, 3.824249195694889*^9, 
   3.82667525430187*^9, 3.826677157856151*^9, 3.8266785958057575`*^9, 
   3.8268245370262804`*^9, 3.8268246334516096`*^9, 3.826824709797413*^9, 
   3.827283516047195*^9, 3.8272836301846037`*^9, 3.8272840237939367`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"debc924c-03e3-450c-9a33-117bf9a0f29c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13lUjXv0P/BmU0gyhFshlZShoiR6l1uGRCVzbkWDBhpMJZEmRfM8d6rT
fDqdISQhohI3mZKISMUVJSEJP7/vs63v+j7/POu1zl6fae/9edaZvcfDylFM
RERkUFRE5P+//88TJkT6fz2V/ty1hv/jYCFaBANx02K2Mz4hhOm35QYVF//X
PzxNVkZ+cGB8VIjT/yx17vRyZXxAiEVflK89H/lf+96eHdE0w5PxPiEE3fUT
n17wZvyPEFpsjTC7z+TdQvA0d650Cz3MeKsQYkdzTW9J+TK2EkJ+yq+2lkUn
GJsKYWZ7pdHU9RRjAyGMvYKqRs4GMV4iRMyejgQDpxDGqkLc72xtjtI9zXim
EBU/pi2/tiGcsawQXzeKiezpOcNYUoisWd5/HX4SwfiXAMZn3pSMmEUzHhQg
uT45I4Qbw/itAM0ZA7GbubGMXwigLvy+XyUxjnGLABMP5i0oDYpnfEeASGlN
voJDAuNaAaoS+It7TRIZXxKg/lt61/KIJMZCAVSCtPRM2cmM8wQY+VoTtTEz
hXGWAPMqMq9WuKQyjhHgxadwt0GbNManBWg/U7AiwyOdsb8Aqfrz3x7JzqB8
CiAyJuLxtKZMxh4CzP07LS+qLYuxrQAWQboFlm+yGW8TQPb5yHhdRxZjMwH+
W6ivE/2FvFqACp/YqxVnchjrCbC1p+7jNIlcxhoCRP+cfl+qhDxXAOelu5wm
meYxlhdg3YGIm4c/kscLIJ4St7HKn81YQgAvN3np63/lM/7OR8i7C5mSF8h9
fNzOPiB20bKAcRcfn0UU3ie1kZ/yccdv7Yu+1YWM7/PRoB+eeOQ+uZGPGTzp
sAPORYyv86G6vfzlpefkyt/jZR1ljwotZszhY5711OO+4iWMc/j4aDljDILI
cXxcXnBgt6xCKeWDjxVfOvJsGsiBfGxt2fjKegeH8SE+FEyb1sW8I3vw4TZf
za1zTxljBz7CEx4FW30gb+VDZ80LV1Yul/EmPuTnrBXVXFjOeA0fN7UD9T8K
yeDjQXEoN9ecx3gZH5G1e+QKysiL+HBU5ecVDpKV+RhImjjJbxmf8Qw+2hZF
doz3IsvwkXxnkuuMarIkH8LTOUtniAoYD/NQc+PMo5tLyf08OKUrWYsdJnfz
MOjL87QVkp/x8DMsvLLqO7mNB9b7lP3CDULGTTxomQXwe8+Qa3m4eOTAeMu7
5Ms8SHu/GxevX8H4HA+dzfmBttnkEh6MZ23Q3jlIZvHA1l8aLqdzjnECD3qz
HIv4meQoHhyu66taDZGDeZh51D6qWe884+M8zG3S1LLmkL15qFwTYmDwi+zK
wxiVnYO7LS8w3suD6iGfutAC8g4ehmctEq0eV8nYnAc5vsDtoSPZiIfsXWMG
+rPJujzsXTTTw7qDvIiHqWlLT+1edZGxOg9deyyumEeQFXk4X5orZ9RFnsqD
nWzlo81qVYylebg8LW19tz/5Zzn+ytxX1niJ/KYc/ymMeuoy7hL1Sznk7SxE
/zlIrimH38xNL0tbySXl0Pmm/NpFtZrqvxxbn4zSGnuQHFyOGlZP+ekbZPdy
7M05GjpD/jJjm3Kk99m3XN9LXluOpL+etwoukZeVg3tDOSRE8QpjhXLcMm0a
32FDHl0Oq6FthuYZ5GEuojI+rPoyQG7lIoh7rVRszVXGDVxI1efxcsPJPC7u
nPuw42onOYH7O59xZm9laxgHcBHibTbNZBnZjovvhmuux9uTTblwnld/amoo
WYsLvpno2+t88hwu4o896KztJk/gorTrQO7IpGu03jL03PbaJL+E3F2GK2KJ
yombyc1l+Gg7diQ+mHylDIVGhuZ3qsicMuja1q3s7CEnleFiZFWDttx1xmFl
iA8WHpED2bsMJTs27bzkSXYqw0Itwfv6XPLGMpzlNuxNuEnWKkPsv22tLZ/J
c8pwu9habaVyLdVTGUxtrOQ9LMhiZegcO2eSdCD5AwceEZ7GpkXkhxy8XLnD
5VgT+TwHq4Wf9TQHyGwOJq1gTQ5ccoP6kQPVVV9X9G0j+3Ag16rTqhhA3seB
2TK95Jhqsg0HAtsnzvdekcHB4ybeTOGEm7QfDiauD886pU2exYExR33RQnuy
FAdcbt+oxWHk/lK89atLX15NbitFhrz4BffX5MZSDIWyDcLk62g/pTBTL1mQ
b0zOKoVwf5CrogM5qhQjrmtsLePJgaVodX/tue4C2b0U6RmjpKWHyNa/5980
IddtRj1j/VL0Tmk99tcqsnopYG+letCPLFOKvp2qThpFZLFSLBspV1B9S/5Q
gtRJyd9bZRtoPyV4u7sko8aQXFmCgLlNoTXuZE4J7tp4ZfoVkFNKIKmRNnrs
A3JACSK1xp1ukb/F2LMEUsZSI3KWZJsSDJ7krB/tR95QguCKoT6FcrJWCewC
7b2MWsgKJaiTfvFOdEwj9XcJZm83OTp5PXm4GPVsnkqqD7m7GGEIic0uI98p
Rlnap17pNvKVYsytX2C+XPo21VcxbOxsZt/8m5xWjKw71R//PUIOLIbsD6kP
XRzygWIofGtOW/WCbFOMGx0mMxyk79B9VQxb/2PpmvpknWLcPHjwxuT95FnF
WFT9uUE7nSxVjNKwhRvcaskDRVDse2N9uJfcVgS5cyOTg7T/pfu3CI1DF8uF
LuTKIjxqbdx1LYdcVASBp0NE92tyWhF6lE/aV8k1UX6KoOHzq+H2KvK+Ivge
uf3ooyfZqgjx0mdDzhSTUYTZUjoGrP/Ii4vwQqVi0z2lu5SfIuT6LZv+Yzd5
QhEkb3c5GSWShwqhbTswLukeubsQN94c3Fo4upn6vxDx7yy0lZTJNwpxd5Tc
w5r15POFEOjKOOo4kDMKgY/nAx4dJUcUoutWtPOGBLL37/ncJXOfCck2hYjU
tawXbyZbFELH31Cla4CsX4iqU2OM5CfcY6xSiIcBSnZ7F5DlClHYdC+dY0QW
KYTPRe3oICdyfwG+RT6ZbxlKbi2Aj9tg23w2+XoBXhS5irXUkAUFUM3zuc1+
QE4owNtXh6ca9JIDChDHGbWoUeo+1VsBdD6PiCgrkq0KoGDyX/C8RWSDAnB6
Lhw7bkVWKUDnfY/PVzzIUwvw+O/tbk5JZJECHDNgL9Dnk9/kQyl8coZnM7kl
H3v33HXo6CNfzwdfIcWrYfwDxhX5qNVJ8zykSS7Ix66v8U8uW5Cj8iGT0Xzo
7SHyiXyM91p/5UE62SkfazJF55ZVkK3y8bNMtD38Lhn5cKz555fra7JaPuLn
BY51G/OQsWw+Pn+QVlXRJI+wUe2WJq5qSe5g42i0s/9qJ3IdG/LbFR5ODyRz
2JgfqW82toCcxIayiiZP6RY5lA2NHToeaj1kdzbul1ifvCr2iO5fNlYtnTd5
mTp5LRtDXVOc1M3IemzcibZQ3edBnsPGwCVBY3woWZqN9oimqk9Z5IE8tNpd
nlxVTW7Nw6Of2wL028hX8qBz+ZP/8p9kbh6eGZddNFZqoX7Iw4YVETvvm5GD
86B0T5c1z5V8KA8JQb5SL1LJe/J+/5+a8Cy9grwxD8ULNRqn3CNr/V7Pqo4v
UX3kWXmoGzZ0CZF4zFgiD68D31aMzCT35mJMa6+H+QpyWy62mxZGGDmQm3Ix
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
/wASKWaL
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13lYjWu4BvBVKRsZyxCpkArFplJC3aFIomzTJgoNKpQhJJEmogFRaSCV
SuNqnsfVGprIUCoikgyRCCEc57zP/uOsf9b1u+77eb9a7/q+91rTdjmvtxXn
cDj9YhzO/77/v9eaBkS+6S7wSF9l8H82aEBz1sdLEy9sYdZsgPG3RUtyCpk9
FzTgp4vR0sD3NswqDTizQ9u+84Aj609twLwvypVPBsnyDXCrmxZwe7IL649p
QNZL4ehH+QdZPqwBC+LVz1p/Zvb8qwFcja1LnfxcmX/VQ/xorHGNlBvr99dD
bvzvtuZ5J1neWQ9Tq7JaY8fTzPfqseyAd9HgeW/m6npc2NVxeYmdL5vPr8e9
zpbGIJ0zLE+tR87PiYsq1/izPKYeX9eKc3Z1n2N5eD2uyR+c6toawHL/P+uf
e5U8aBrMcvd6hAnDonzTLzA71aMx6uPFf9IvMlvWY3b2j30qVy4xm9Vj9KG4
OSneIWy9JfUIlNbIVLC5zDyvHkWXM//uMbrC+tPqIfwW2bUoIJTlsvVQ8V6g
axwfxixZj8GvFUFro8NZv78OM3Oiy3McrjJ31eHpJ3+nfssI1m+rQ/u5hMVR
zpHMdXW4qjfr9ZHrUaxfXAfOsICHE29HMyfXYcaKiLigtmusH10Hc2+dBItX
15mD6zDuyeBIHdsY1vepw5u5elrBX8hH6pBz7GJ5zrkbzA512NQt6Js4JJZ5
ax2Cf026J5XMzFldB3vtbXZjjeOYF9XBZH8A37WPPLsOEuGX1hZ5xLN5+Toc
cJKTrpp6k1m6Dr5v86Ml85n//IOou75fvNAigeXva/GZo/AutI2Z01GLevdV
T3uXJzLfqYVIz//KkXvkslpM5kqf3W+fxOa5tVDdkvGs+Akz5/qf9a4djR/q
d4v5Qi1mbphwwk0imdmnFn0Wk4fBm+xai9I5+7ePU0hh69nXYvGXjjhLETNn
Sy02Na99vuHfVGaTWigY3za58Ja8sBZOs9ScOnelsXm1WvhfbvJZ/54sXwut
lU8dY2LTmUfWQm76KjGNuRls/nsN+Jpeen3ZzJ7dNbh/yy891ozL/LAGgbxd
sglpzJzqGtiqZsYl9pPza/AxdPRY94WZzEk1aJsX2DHyADmsBmH1Yx0nlzB7
+tYg+8wN7cliWcyuNaioPtfE12bm2NfALlJpg7gr5Vtq0O/GdbHKJq+uwa+z
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
9D5wGFkP3S8H2pYdliVzOP8DthzW1A==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
nMsd/KyYSb6WAxtfWw+jRnJuDmokWz+KjhUwFuRg1g6TE3LryH054CWyVW94
kqVzcQH+V2/dIy/Jxb2obz2SzeT1uVDhLdywXLKO7p9cWNlYzeL+R76Si5vC
kq8PjpNTciH7W6K3I538IBeKP+ujDFrJfbmobjOZZi8pZDw+D9Y+J6M19Mjz
8sA9cqRa7iB5fR40Swb4WtFk5zykXVi03rWK7JsHpc/vtx7rIcflQT5vWM5P
6wHjqjwIBgszc5zJHXloaBLsrrhNFr+PbHf7oM535Pn30TXnjG2R/EM6D/eh
7jnCrzMgW96H1/G6hq/u5BP3ESp5yf/iXXL4fcyS0NaP+0AuvY9W1dxNj5Uf
MW69j3jvZVN/7yGL5mN0XYejUThZJR9a1n3jIx6TV+aj+v2R7cn/1DO2z0fo
R3Mt5Tnk8/l4NEb+GWcdOTsf2TrSDtr25Ef5wNf7rIYT5A/56Ki97LQ+jCxW
AK0Do+Nf5ZDnFSBYx4InXk9eWwBtH0PVjj6yQwGKzo41Upj4mLF/AZ6xlG32
LSTfLUDyw8fR6UZkTgE8C7Uu+zmSOwrwM/jFfIsAslghPF37m+cnkpUK0Zri
ItbIIZsUQi3Bsy7xKXlnIbrfHpus30M+UYhr6WM0BRJP6H4ohPbAsMgcJXJW
IRRNPpybq0muLER6V/7JU5vJLYVof+I2UOZGFinC8/92uDpGkJWKcFI/caFe
FlmvCMqBcjHu9WSrIuyze2Tf9pl8pghZitc9+BOe0vOhCFXaUe5HNcg1Rdj9
I/RFqTm5tQjSMfVHu4+SxxVjgse6sqfRZJVirI4VVbmXS9Yvxp97oi2Bj8hO
xXDg7B1xeUc+WYzQub7jXMc+o/NYjIFeSTVVDXJOMUpco8TVLMiCYpy47OSz
ypHcUgyFHYrPpvqS+4sxP1jPbFwSeUIJ5qhqsJVryZolUN+p7Tavi7yuBE9S
t54pF2tg7FgCg6Vz5ZYtIAeWYLBjkuMCM3JGCYSXzdX2u5GflqCvOFsQGkDu
LkFL0MOibzfJo0rRZFMqV1RCnlSKhj+WLL1msnYptEu/+Sz/Q95WilfG9wqN
lRsZe5Ri/YqgXU/MyFdKofxYJ26uC5ldijA/L4nWG+QnpX//T018FZ1L/lqK
u4vUBZMek8eUocmg7XvIZ7JqGWqGDJ39Rz1nvLwM73y7c4enk7eWYWxTj9uG
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
o/KM1z/A/wDCHs34
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZOo08zSCY1ykd/41bIR6urphC+UgMCFhNLsluBnz8u+OZxM2NuHfo3FdCR4+
dOMGtrZizSboT5dhMpc0a4L3Q8x8cGu/hfXDNf6WJ16gJa7SxXzNaIL36yuj
V0XThLmkq5LA8Cw678EmZY5tzbCvzY3H2PQAOqGhOTxZGUy6nSvh72GBXvTt
EtLz+j+5zVy3UFwzvq+31tQdxThPMPZ2XVwreuybE7vCRDM83/PkDWK19C0w
T3J+hcTH3QLfm0v1x0N+sRaYnzyafeeuPtYPttjOF9qiPx87b2MRjPV3FOIO
yKWhebxZI+ya0KaXG836p1rgnjSuUPvqra1wb5lkmN0NUTDp0p/ArgJdNFNE
042xG1i/1V6zsDUcrR5Jxfs+E+tX31P1eDe2wj7z4n/XrIda4Z5AfvfNNpva
oH5+kkFQQBSdbxNGI6gHJm75W7oetWiDfo7zXG073TEX8pXT2hyPOZ+AKJmn
BueJXJC03T+KeUvi6ftF1O3QryjFzyotDCYtDG+3ENZC1/vrCl6xbYfnmf2Y
Xhvo1Q7zenwa8n5F4bxO4wLWvHzM21fPucl1t8P3liz45Xp4Feu/qrzPVeHp
gH0n5H0utmiBCZ5mmWh+6w6Y98LDmb7vJZomdNvX8Ez0u4Mitdubsb9Tsf+3
31QH3F+5pGTlSfsZ6ofcxzJXdqM3dU7Yasujz6sl+CibfYb7tv2Juzzsjq7W
Eg02TsV63dWFN3OfMFd2M/ybNIk5d9Zdp1vbOvH/gy0lkz2HOiFPCtE4Y3IR
TeW91S3ODepJ49NFPcLpaLnuz90JX9DGZ+y0TEhd8LxWMtbflPahbcWHc5RO
dUE9A5W2h7s1OuaVGNfS0y7Yr6S2fNUyH939n99VkSGoJ9Zonp1tp+0Gh0p8
OHlGFEy6Z8Mv3avbDf1p/L5rIjfR5uwJVD3xaCHiV5FZFbq6/9GK8AT665lz
0tKsX8BSSWa9rhJfYL/BBnM6IwvMBdM4/jkWhbnL/Zpgl2LMzVlrd2vPo+0O
HM3i4/0K93e70i+e1EN35P9aMXNBrzUxWN6N+gr9a42FtV01mD/7KWzp8hN9
p2jW2oChB+rPbcmtnpFAs3kPqgiboltDwpiOPUUb1QXKGBf1wDzbqym+KQPo
vizqXCGWXjDrI6s+BlkwsaDmRXvSqBfmuXn12PI9QWeqdJsk5mF9qtpqgNUg
zkvmZlH0Zu4D09hqDP062gf9e6tG8sct0NNV/f4DUejnekG/2yrQrIe/q/fM
oRvMbpo/3NoP+48Usxi28/dDrl3JFT2ugB65K/B500WoJ+nJcSRrXEfvDCvr
7HTHeQGejZG0oZg//Mvi2pWJeVjnhfZTtZhLuKRaJ/Sg7Vb39fQuo2/4BmSP
7hnAv0dl1iPCEgMw7ydNsfCoJphk5WHcqmqKecHhI1rOdzCnkft94GAImtOV
rignE33AS+W9xCfct3uvpH7OCJpT2sXtKs038G2XzfoDXN+gv0ZW9T7vEcwn
XOYrfc9j7plRtevpDcwN6U839fuhyfVemd+SoJ5I6XjRo1eD/dvJjkKTI1jv
lFNa8P4vWkXVql+WeRBsdv7z7cj9aHN+9bd8RwdhvkVE+2YhMzBpi7de973b
WD+q4tS77znmpcNzRbRJ2B/50nA2sQLzU09VBTkH0PsNaRzLFrHegXferWPj
EOTBBhyMDw+BiXtS7EHM2pgragwL+Figjy4r+kV6oUv88qt0w4fgXhYnIcOr
eehPjGlaod1Y7+fqrCu/hPuul2ieq2QbhtzZQaI/V2QY+vV1LRfYdTF/4ODL
QXbCvP4q73mRMMw1TM8m0OWhz5AThIe/oWUvhFQurKDZe6b85dlGwOQ6TkNm
0RGYT2eTccriKOZl3vdkc8ww323+Un7FE/O5czqWA2R0tHip8XQz1vttEB8R
WcS8ydfkrBL3KHjQQsTVUhV9o8lPgPs62vUFLVOjH9rea3TnQhm6Ir7gisPw
KOxLfXsvQnzzd3z/28P9xw+gd7fd3MZ09DvUn+d+LHPNCHONm8szV4MxP2xG
e5o2C/Oprn301V/QsTw+ZzxWsZ58bn7UUmAMclNBsdYVnTHIXa6EMV1xgpy4
5LbjGlcU1meP9NofKUOT0wZzByfQl2SW7m1m+AHzqDMS/8hI/oC8d01cfrsZ
utM3ibH6JZrs/ftuaD5aRHbnr5oeNKf2mqg86zjYII5DhlUWHT3BreptPw77
U6o2BDkHYD5FNim6W47O20CYMC6gl3Y+yaCTnwCT7Dx/pxqgBaKVC374TcB8
iy8HtvF8QmeqHqy2WMX6NwWrjxolf4K7RkPYGKzQ9+4qybUGoM2yeF9bVaPD
6W292tbAxFOrLjvykUnIGT+GC8Q5TML+fMnIvoFszH8HdhBME2jtfX+nnQ9N
gX03/uvReG0K+rmZqpdlYjEv3HHGR3EEXTWXfdWfcxoco3htq6Ma2vn+jAvZ
BH2efF9J5DFa+WDzlurYadhX+/bb9ddFmH/3ldJlG0R/WVqksiPNQP2zrFal
m0IzkJfnOERZnUFrvKvk2u+GtpGn2awTg6bPYr/VUoFW2idTkzKCnjW+IfSR
bRb2jblSGd+WQZdNu3syms9C/a6gBR6+AMztLskcuvYBLeIpSmsziPV+g6FL
e6h+4b0Kf1I8BdGFGhPadAbomQfuSd8foit2HL8+mvwL5jvzNrYpdGCu363M
f3YZXXacpj1WbA5Mu7NAs+cKOu7itqXqeHSlzqIy8xhaMbh0/4nd83j/sIJu
1iV0VNaHhyR/9GnyvrOThWjuMimHvUtgorZbhl1T7TfkqiyX2Vcfo00dfSSi
e9D9nMoxS4f+wPN+lrhLw+jxB3J364ajHF3ozu9KOtZSC/g8oq+2ZjujMxT4
fjFMoVNZebnpNRfBgmd5z3jko1+7pLHRHVqC/fvV7ry1i0fT6b72EmFeBi/e
MusdTliGfn5r/9ss+1fATi+972TmozPmpGvN7/0FNxccSlRTXgWHjnbQs51Y
A1u506VOM5GIdX9dSaNuO4N+tPU5ff1PtEMbS6KIPRVYx9WkZ2ht3dNKJfoL
aYz51JCrTVtlbAuiAZdwd+Wnv6AF/0wx1jISpQfLkoJVJ303gUdHFrpVbrCB
/wdty6FY
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k0lG38P3BLtGmlRfVQWRP1FEUSb3po0UKreniiLFnKUilJiShlqazZ
smVfZszYBzOjkEpaSEopoUVpoSTp6/e7P+d8z/nOP3Ne531d9/25r+u6P3Nm
wX7XbXZiIiIi/aIiIv/v+/9+4t73lPrkrzdgpIuWwq9XZ122IG+Ayc9Vetwy
su8G/HYzXhPyyZYxfxvO/7fCodPdiTF2Y+l3RcGLYTJ/N7zuLAhunONGuRUK
u+umPCvxIFtjeZr6BeuB/zVLY+8a58BjdL/9EDueYnJb0otxhy1kZ/xpa1l6
muo7CNN9VQ0mTmfJzjBy9y8fvuRP411weX9HhJ59APkwHna2NoVqn6f6XMH9
PWuVYFMQ3c8NP7aIiezvucjY2g2J8zz+OvY0mMa7w+ji2+xh0zDGTR6IrouO
D8i/TPUfRVP81yvb86/Q/GNQ4/w6pBx5lXGSJ6YcSV2c4x9O408gREqDLWcb
wXi+F8oj2H/3GkdSvV6o+xnXtSo4inwSyv7LdUzSohmbncLwD37oloQYxpd9
oMRNqOY6XqP1OIOX34Kc+y1jGbudQfvF9NXxrnFUny+u6S5653k9nvG4sxAZ
H/xkVmMCPe9ZKPwTmxralsjYwg9m/trp5m+vU+6H6S+GJ2nbJTEe9MP7Jbpa
Yd/Jvv7gnrhSzb2YzPitP3b11H6ZNSaFccw5hI3MfiiZTbYIgMOKf+2nmaQy
Vg3EhsPBt459IdcHQjzm6pZynzTGOufh7iwrJfzrBq3PeQR8KEmQKCFbXMCd
64fFyszT6XpBGBCR+xjVRi4Nwl3v9S/71mYwvnAR9bpBkZ4PyesvYQ5L6sJh
h0zGrEtQsSh4VfGCHBOMgcTjaWMDs+j6IVDaMfOUl3g27UcIvpjPGQ9/sk4o
Khcftpoul0P3D8Xq7x2plvVkszDsatnyeseeXMafwyBn0rjh8gey22U4L1J1
7tyfR/VcRlBE87ltn8gdl6G17qVTUko+1XMFsgvXi2osKWCcdgW3NP10v3DI
867iUVZgfspmFuMTVxFSs18mPY/cfxV2KuzUjH6yaji+Rk2Z5r2STePD0bY0
pGOSO7kjHNF3pznN4ZE3RYBzPnnFHNFCun8E+DcvNt9aQf4cAfu4+TvEjpG1
ItHvxXLbxyGfiMTIhaDS8l/kcVFI+hhziLOJQ+crCstNfdm9F8msKJR5Hp5k
fp8sEw0pjw8Tw3W5tL/R6Gy64bfvOnk4GkbzNmnu7SebxSBNd0WQjFYR46Mx
0Jlnl8lOIL+Nga1QV2XbINnsGuYetwlt0immfnANCo0ay3fkksfEonRdgJ7e
H/K5WIxX3ttvZV5C70ssVI6eqA1MJ++Iw9C8paK8iaX0PHGQYRc6P7Yjj4vH
9X/Hf/18nawVjwNL57ru6CCnxWNm7IqzVvpl1E8S0LXfrGpzMNk3AcU5KTKG
XeS7CbCeXtq8XbWcsV4iKmfFbuz2Ibsk4q+Eg3kNFeSIRLyXG/vMcWIF7Xci
ZK3NRP87Qta5Du+5W1/ltJJjrkPrp+IbRxUePe917Ho6dvmEI+SFSeAn9RSc
v0len4QDyccD58hWMvZLQlyfTYvwADk3CVF/vWgtrCA3JCH/pmJAgHwV9btk
3DZpnNRhSZ6ZjG2Duw02x5P1khEa/0n/+1fyf8nwzxfkiK2rpvOWDMm6VFZK
EPlqMu4WfdpT3UlOSR7dz6um76bzaf2SEeBhOst4JflhMn4ZrBOG25A7kuGg
VHd2ZiBZKgVsU9F3QjZZNQXhJx911nSTLVOQ03U4ZXiagHFoCnruuG+VXUZO
T0GVWKRi5HZyYwq+7JswHH6OPDUVGYYGm++Wk/VSob2vdk1nD9klFWUh5fWa
MkLaz1SEn+N4yoAsTEX2nq17K9zIYmlYsrzwY10KWTkNl/LrD0TcIi9Jw5V7
ba0tA2TrNNzJ2qG6RrGG8cU0mFhuk3U1I99NQ+eEhdOk/MiDaXANdjMyySTL
3MCrNXscTzaS1W5gLWdAR+MreccNTFudJO237CadjxtQ0f+xum83OfAGZFq1
WuV9yfwbMF2pE32ZR56QjsJ9Tx0evCarpuNJI2suZ/ItxrvSMWVjUOJZTfKp
dBjlqi1dYkNOT0d+ft/Yvy+Qb6bjnXdt3CoeeSgd8bLiJS5vyLMzMBiYpndB
tpbqz4CpWvbiG0ZkpwxwDvk7yduS0zIw7LRun3k4uS0DrS5v3DaUkEcyEBc/
VkpqkLwyE++2Tk5xnlNH708meme0nvxLn/xfJmCzTeWINzkwE317VezVM8nF
mVg5XCCn8o7cnYlr06J/tU6vZzw5C++ssuP5BuSFWfBVaAzku5DXZ+G+pXuC
dzrZMwsS6rHjJjwiB2chZPnE8y2ytxnXZkHSSHJYxpw8lIX+M7kbx3mTV2bj
HHewT66AbJINaz8bd8MWsls2aqVefhAd30DXz8YCC+Pj0hvJjdmoS2MpXztB
7s/GBQRcuZ5Hnp2DvNhvvVJtZJMcKNQt3rxK6g5j2xxYWlsuuPUPOTsHiXd5
X+55kvk5mP5b8lNXLvl7DuR+NsXqvyQvycXNDuM5tlJ36fcvF/t8TsZp6JKP
5uLWkSM3pQ+RU3KxlDdQrxlHrs9FzoUlm5xryN25kO97u+NYL3lcHmSKhqX9
Ne/R+uehYbCsgONI9shDc2vDv4JkcnweCt1sg7vfkJ/noUfxjE25TCPjr3lQ
P/Gn/o4+eUw+vDzvNH9xI/+dj3CpSwEXs8gW+VggqaWX9J4ck4+XytytD+bf
p36cjxTvlbN/W5FH8iFxp8veMJKsXgDNfV8nRj0gmxXg5tsjuzLGNVG/KED4
BzPN+YpkYQHuj5V5zN9IlmChUHuqnZYtWZoFfCn2bT5OVmWh63aYw6YI8nIW
NF0kUp5zyFtYCNE2rxNvIh9kQcvHQLnrK9mLhfKz4w1lJz9gfJmFx77zrQ8s
JmezkNH4IC7XkFzKwokyzTB/e3IzCz9Dni4yDyS/Gc2d+9sWpZF/sPAy00ms
hU+eyYZK6ok7aY/Ismy8e31spl4veSkbV3PHLm2QfMgYbGgNDIsoypPN2ZAz
fn9OaSnZgo3cnpKTp7aRHdjofOg6UOVK9mfjyT8WzvZR5Gg2TuqlLdZlk2+w
MT9IOt6tiVzFxoH99207+sitbLDlYtzrJz2i889GjVas21EN8rRC/Psj/Gml
GVmuEFPjm46+O0o2LMQk941Vj+LIWwqxLkFUIY9LtirESJ5oe9B98plC2PH/
++P0hhxYiHAlvwnO4x8zjizEwCcpFWUNckYheM6x4irmZHYhjoc5+Ky1J5cU
QtZC7vFsP7KwEItCdE0npJObCqGorMGaf5v8vhDqe7RcVXvIPwrxMHvHmWqx
ZsZjOdBfoSS9Uo2sxMFg1wx7NVOyEQd3w8xUDrqSLTn4WlHYEB5IduCgPbix
/Fsi+SgHrdaV0uU8shcHzSO7fXXbyJc40Kr85rNqhJzKwXOjvDKj+S3UzznY
tDp470NT8m0O5j/QTlJyIr/mIMLfS/LlNfIvzuj/qcnP47jkqVxkLVFvmPGA
PJuLVv2O76F9ZHUuaocMHAPGPGGsycUbv3fc4blkQy7Gt/a6bl5N3sOFhUlG
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
1OB/ACHMogM=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Maximum Computation with Time\"", TraditionalForm], 
     PlotRange -> {{0., 2.0190223031274215`}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"k", "x1", "x2", "y", "z1", "z2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8163788595526867`*^9, 3.8163792709010954`*^9, 3.8163793967168627`*^9, 
   3.8209422709446316`*^9, 3.820942401045331*^9, 3.821203256005368*^9, 
   3.8212065053897867`*^9, 3.821287874644139*^9, 3.8212885343938427`*^9, {
   3.822411459249213*^9, 3.822411469025836*^9}, 3.8224363112324967`*^9, {
   3.823634018365156*^9, 3.8236340220223603`*^9}, {3.824248704866758*^9, 
   3.8242487107003045`*^9}, 3.824248827985618*^9, 3.824249195694889*^9, 
   3.82667525430187*^9, 3.826677157856151*^9, 3.8266785958057575`*^9, 
   3.8268245370262804`*^9, 3.8268246334516096`*^9, 3.826824709797413*^9, 
   3.827283516047195*^9, 3.8272836301846037`*^9, 3.8272840280068502`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"614871ec-4b54-43f6-a350-d7a19b2cadd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys2", ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{
  "PlotLabel", "\[Rule]", "\"\<Maximum Computation with Iterations\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.824248743764718*^9, 3.8242488223425684`*^9}, 
   3.826674955137864*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"9a3e4e57-79bb-40b2-aee2-7bd46ea02ae9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TimeSeries", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30000", "SummaryItem"]}]}, "RowDefault"], 
                    "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30000", "SummaryItem"]}]}, "RowDefault"], 
                    "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TimeSeries, 1441216, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           TimeSeries, 
            6252189759604442958000783786128990823800568863398752723456, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("TemporalData[TimeSeries, <<1>>]"& )],
  False,
  BoxID -> 6252189759604442958000783786128990823800568863398752723456,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.82424882313247*^9, 3.8242491965706034`*^9, 
  3.8266752555663214`*^9, 3.8266771601651254`*^9, 3.826678596621211*^9, 
  3.8268245395833197`*^9, 3.826824634414349*^9, 3.8268247105489235`*^9, 
  3.827283517129117*^9, 3.827283634667631*^9, 3.827284028224049*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"cd72b360-0045-4578-8070-2e6f88340ce4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxtlHt0j3Ucx7+Ycos5uSzmNCzmJBajQjxUqMYpl4xTuW5diJlyi/nKpZli
Ltsil13CsBtmZhueuWwLm9mWu3EqElNuZSp06vl8n877fXr++ZzXeX9en8/n
eX47azlm0qDg6kqpO9WU+qf+/9PTQh6IrInVMGTrXeFaTrWJrbHCnpKHCDdy
qs97yGo88qiJwq2kTpHq49SSqcL+To2bKdzBqaHhyD5zhX2dWmuecHun3pgv
7OfUUwux347AfUmRwm2cGvUF3jt9ibB8D/8oYW+n+i7D3Gu5sJdT660QlvdV
K3H+nZWYX4lG/1wMzi+JFZbf4+BXwvK9s1YhJ6/G/rivkVeuwX0Ra4WVU2et
wzx0Pfqd4ky/8yTHYX+beJwXR9wsQfhGL+cew/K+9RNxX4Rheb/q32A+y7DM
/504dAPuu7oB83EbcV7FRsyDNqFfugn7A5NMv/Pku+xUazNytmF534At6Kdu
wX6/rcgJxN7JeF9MMuaeKciRKdjvkYr3hBuW712Viv1hadhfaViezunC8n1C
0zFPMWx+Dzd3attt2D9uG+bxhsWvMCz7mm9HP8hlp0YblvtLqb/BDuwPNCz7
FhHnU3+NDJxnZWD/bMqzKb9LHLATeTJxKvE1Yr9M3BeciXkC5Rco996F+fBd
mMcQl1G/Z5Zhpw7IwjzSsPgFlHvsRr/3bszDiXMMy7wqyrtk47ywbMzTDItf
Sf3tcrA/JAfzRMPiXyRukYv+COLYXOwvJ264R1j+fgcalmfxHuwvJK65F/v7
uOzUOXuxP5f4HvV33YfzpuzDPN2w3Hud+hvbwLqzy04dRHkoslpKeYphufco
sr5Kfu08zNvmYd4XWY/DfjXPzf+tOp5ym+ZXYL+6T37z/bi/G7IOMizzp1Ee
TXkG5aU0/yblDQ7gfR0My/2BB6BfjUfWiyhPIj/fsPw9XCK/xkH0WyFry2Wn
jkTWs8lfY1j2ZyOr05TfJb/JIcwDDmE+GFlPpjzKZee+VGRVRP41yuvko+9n
WO7v5+aOH0z5fPITKM9D1hcof0DzvQsw716A+XCXnTod+3UM+TspL8N56hbN
9yxEv6Nheb8BhdCvJmC/jiR/M/brAvIv03yPb9Fvjax7G5ZnFLIOp3wt5Tku
O/UMza8iv+lh9LsgqyEuO/eHUb7MsMxPo7yY8krK6x7B/e2OQL/qT3kI5QuQ
dSL2q/3kX3TZqQ/Jb3EU/R7IegTlMyiPpTyT8nLKb1PesAjuUf5FmA80LP//
PqJ8MflbKC+k/CdkXbMY7/MtxrwP5aMpn0P5OmSdS/lZ8u9R7nUM/a7Iaijl
Uyhfbljmp1N+jPzrlD9SAr7VuAT7fZHtztivXsLcGkT+aOy3QzFXmvyl2K/X
0f4U2r+H7j9K+8+Sf5X2/0H7ax/H/V7HIbfbuuzU5zC3+pI/FNkeh6w+Jn8e
sl5O++OR1TbybfKPkV9B/i94j3Uf30/XK8X7mxuW52nMrW6Y61eR7SDy3yd/
GvkLyY8mfwOylUH+AfJLcZ/6nvyb5Ksy9Bu47NQnMbc6GJbf/0XyA5HV2+SP
J38m+YvIX0V+Evm7yM8n/wT5l8i/Q36NcvQfL4d+qxXm+llk2yL/DWRrJPkT
yZ9N/pfkr8F79Fbys8k/TP5p8q+Qf5f8R79Dv4lh8Z/C3A5AVi+TPxhZjyF/
MvlzyY+i/euR7VTy95JfRPvP0f5r5P+J8606J9B/Atn2Q1bPGxa/H/lvYW4H
k/8J+fOR9QryE8jfjmzl0f4Suv8CzlO/kv+A9j92Evd7n4R+1R5zqzvm+jVk
ezj5HyBb08n/nPbHkL+R/J3kH6T9ZThP/UD+LfKrncL9nsjK5xT0Wx2RdU9k
ewCyeof8CeR/Sn4k+avJ30x+FvkF5J8k/zL5v5HvcRr9Robl92+Nue6Eud2b
/DeRrVHYrydhboeTv4T8tbQ/mfwc8o+Qf4b8n8mvIr/WGfSbIus2yHYXZPUK
+UPIH0t+GPmfGZbvv4z8OMztNGS1j/YXY67P0/5K2v8X+XXP4v5myHY7ZPUC
stXfsOwfRn4I+VPJX0D7V5KfiPPVDvL30/7j5F+k/TfIf0j7659DvwWyegbZ
6oGsXyd/BPkfkj+D/AjyY8nfRH4m+YfILyf/R/Jvk1/9PPoNkVVLw/L364+5
7kX9gf/x3xwqGNY=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
uysjrR3nP/+bBg8=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
spv3Uj8IO13Ub+ceH6wZ5tqy/gOHym1G
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxt13uUznUeB/Anl6gUtZFES8R0VlImqVQPSbbUiVI43SOKGEpo0c81d0ND
d40RUS5TomLoSTUkhlC5Z7tYIdtVFLVnz+c1f7Rn/fM5L+/v+/f85vc8v1ud
e3u371omlUr9dFwq9d/5//9dmf7zvPHPM/mfmbotZvpW886YmdtNTt9h3hcz
/x75/bbTNWbtbjHv5lQPLv3/XrbzoPxhs3fMDY/avz4+57GYN1mXMyTm7kd8
3tCY3+lVHG57A/3/COtsZ8so+SD7Pzpm48Ex54z1eT4nd7z9ejzmgIkxCxO9
3Jhv2Y96k2OOHhaz+pSY3e1XpSd9bul+5sVcbT9/4t0jY+6danv2e8c0+/eE
/XoqZkd/x/tP268x9uuZmFX8XfOejZkeFzP/uZjN/J15z8f8jke/YH8nxBw0
3f46Djkv2t6kmBflx2zluMzjr7j+jJhZjlM+v8Q1Cuy/45bH4/mUmfqO42jO
4zIvxazoOA7i2/kQb+GcWbbnOO/jDdxldsyGjvsuLuSOL8ds7nvYyKXfS9s5
+r6XYs7n9NyY5XxPSzmHs1+JuZsXcE/fY9arMSv5Hgs4j2vOi9nM9zqNi7jK
fPvnex7L+VxuQczavvchnM+H+XS/g74LY87jA1zD76BJYczunMO5PJ+38D4u
43fS4LWYrbgLj+UZ/AXv4tMLYp71esw23JFLf2dTeQ1v5NLfXeVFMW/htpzH
Y3gLF3NFv7uyb8RsxmkexYN5AS/lXfwLV/E7zV5sf7gPP80LeC/v54Z+x1lL
YnbmrlzABbyDP+fqfuc134zZhTvxRJ7GpefFJj7eeVDlrZit+QYexGN5Ba/i
w1zu7ZitnDcteBQP4RW8jPfyYS49zy5eGjPhvlzEC7mc8+wAp/m8ZTGH8f28
hGfyId7NaedlrSKfz535dX6Kj3eebuZmfOrymD35Rn6ax/FuXs1nO4/Lr4jZ
kVvyeH6c13IRn+g8P8Jtuek7MYfxw1zChVzRef4t1+OqmZitw0kT7i1vzxPk
ObxYPolL5PN5j3wtnxLXiWQfn+u6ccK7Ma+QN+DO8tY8Ut6FF8qH8zr5DN4n
z3AqrjPJLq7nunOM0/KzVvq75Zdxd3lHHi/vz7PlU3mV/A3+Ub6RT3Pd+p6z
wknl98It5Y34dnlbHijvwTPkY3i5fA5vlxfzb/KvuUZc95Ky74ebug6ew+3l
ae4rv4vHyQfzbPnzvEK+lLfJt/IR+S98putotQ9iug4n2dxGfjN3k/fh4fJc
zpcv4JXydfylfD8fk59YHLNmXJeTLG7iOn0tXyvvyt3lI3iSvIDnyd/lEvnn
vE/+O1eI63pSc5X9cZ2/nBvLO/Gt8gH8kHwaj5Ev5lnyTbxS/gN/Ja+yOlze
feICrhtObuAW8p58r3wsD5DP5UnyVbxAvoc/k5f7MJxyX6nLZ4aTFtxcfjd3
lA/hwfIXeJp8GS+Sb+NP5Yf5kPyMNTGrxn0quZgbuW/dwjfK+/ID8sn8hHwh
T5eX8CL5AV4nP+mjmO6TyXlcwX2vDdcLJ/dzc/lIbi+fyf3kKzlPvpsXyP/g
j+W11ob3y5tzhbiPJp25vvvqQG4jf4q7yZfwGPlmLpD/yCvkp64L75A35iPy
G7mq+/JDnB1OxnEH+SvcT76ac+X/4nny8iXhjfJ6/K28JZ/sPn4PZ4eTx7md
fDrnyIt4knw7F8qP8CZ59fUxD8ibckXPAR24QTh5mFvLp/Cd8kLuK1/PE+Xf
8iL58RtiloTTVfmg9fW4fDwXZJqEk9LnkqvlZ4fT7eWNw8k98hb6OdxOP+F7
9SdxL/3ptjdQfz6P1l9u/VT9tfK5+tt5qf4+69fo/8qf6J/wcXiXfvVwckC/
gfx3/UvkJ8VzSro11wonHaw/P5zpIr/Uc80j8uv1h8s760/hHvozrO+n/xqP
0s9YP0V/Pefr7+LX9A/qv6N/jEv0K210PPTP4u/1/8ZlV0b/Mq4WTv7ODcKZ
juGkaTjVXX6dfn++Q38U99Kfqj9Yf5Z8rP4b8uf135PP1t8oX6L/hXy1/vfy
bfqpTTEP6lcOp47p/5VPi+e0dCOuE06u4Oxwpq3tXV363Ci/Sb8H36X/GPfW
H6M/VP8ZnqI/x/qZ+m/yfP1i64v0P+U1+l9bv13/J/k3+mU3R35U/y/hpFI8
F6bP4Wrh5ELr64Yzac72HHmT9a317+J2+r2s76I/mPvqT7B+hP7zPEH/Ves9
52aW8nz9Nda/rb+VV+vvtX6z/i/8hX6FTxwn/WrhVJl4Tk3OlZ8czmTLa3uO
bSVvGE7fLL9U/175Nfp9+Fb9odb31M+VD9J/UT5Gf4E8T3+FfIb+Onmh/g75
e/r75Rv1f5Pv0T/x08gP6p/JR/SzwqkTPDc3k1cLp6/l+sX+Tm4WznTVv06/
H9+qP4K76T/J/fQLeJj+65yr/67Pe1F/A8/X/5yL9P/Nxfq/8xb9kz+LdXv1
a/LP+g3DyR/6l3PleK5PruPa4UwnbuS5/wFuGU4PsP32+k/wPfrTuI/+bH5c
fzHn6r/P0/U3caH+lz5/hf4PvF7/uC0x/6lfJZz6Xr82HxfvEekLrPcek1zJ
Z4czN3BD7x136F+l35Ov0/+H9bfrj+WH9J/lAfpz9Ufrv8XP6K+yflbpew+/
rb/H+g/1f+Zt+uW2xv9/o396OPWrfl15xXiPSS6S1wxnWvAF3nPacTqcvps7
6PfmrvpDeKD+RJ6g/wI/pz/P/rysv4zf0v/I+g/0t8k/0/9G/q3+YflR/Yrb
YlaK96b0GVwjnNTnrHDm4nCS7T3rGnkr/Vu4g/591nfT7yt/RH+YfKj+ZHmu
fj7P0l9o/Zv678iL9Uvk6/R38k79A7xf/ygf0T9pu+MR721JjXBSPZw5T57l
ve5S+SXhdBv59fq3yTvp3y8vfc98lPvrj7R+uH4eT9Sfaf2L+ot4of5K64v0
P5Z/pL+bt+p/x/v0/9A/qn/KjphV4j0yUyucquu98ny+MJxuzi3DyfV8k35n
27tL/0F5T/2B3F9/tPXD9Z/iyfovW/+S/hJ5of4H8uX6m+Xr9b+Sf63/Ix/S
L7MzfFy8x2ZO3el4eK+tI68TTjeWXxROrpK3tL4tt12X/g+lC2Ra
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mtll/Mf/AIvUOtY=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxt2HuclXMeB/CRkEKxohu6yWTbDF2EllNCm0oiXZZKt0251GhVaHpUqFxK
xkRbmSaSVDOopMJRoyzTRbUkVC+66WKTWUUr+9rX9z1/2NfOP9/X+3zO5znP
OXPO8zy/p06f+zr3L5eRkVF6QkbGf+f//7s6FbOp2TFmcp3JGdebXT3eKWaq
p8e7xEz/j1N9Pd7NHKB/R8zaf/mtMwabvWP2vjdm/p0ev9/sH3PDA3LbzX9Q
766YQ3Ji7rDd2o+Y98WsMNbzhsQ8NE4+NOaWx2wv2/6P93yeO9Hz7dfkJ72f
YTFHPG1/7WfWZPvD9Z/x+IiY1abY3siYpz37W2fken3vs5QzHo659zkeFfPL
vJgpn8OGqTGLRscsfj5m2yTm0hdsh+dPi/mhzy3/bzF7j4mZO13O42fIfa4P
z7S9ss/5Rfvjc74s3+OPej2u5nNvMCvmQM7njMdj1iiImeZcbuH/dMbsmId4
PCcTYpZ7yev5Pz7M4/lHznrCfr5sP3gfj/B/7zfH6/E2zn8qZrdXPN/3YiNn
TorZfm7MIl7Nmb43qVdj3s7LOJebzou5lxdyJ9+zzNdilnABt/S9qzU/ZjHn
cabvYZUFMXvzRF7K5RfGLPue5nBbPspLObswZn3f2wOcy02KPM5DOMv3egFP
5n1cxBe9HrO2730/HsezuLzfwTZuyjXfsD/cjQ/xc5zld7OR53PlN23f76g9
D+QJXMyruZRPXBSzhd9dip/kUVzEy3gnH+HafqdNF3v/PJR38kIe4Xe8n0s4
c0nMDL/r/jyMC3gpb+cKfve13opZdhzoztM5j/fyJq7luFBlacy23IEH8UTO
5TVczOXfjnmUW3Ejx5Uc7sTLuScf5WncbFnMdZzNx7mQGxXEPMDduOFy+80D
uIBn82bewWXHtfNWxGzJPbgHT+XneTO/wWe+E7OEO/JufoLPdxz8kNvwSe/a
b27NY3g0L+IV/CX/xKc5jjZ/L2YW388DuIin8EFeylXTMQ+HkybcwHG4M/cM
J0N4mnwSL5Iv4BJ5CZeP43ayjy92HD/1/Zgt5RdxH/n1XCTvx9/Jx/LZcdxP
ZnEL54E0d5Rv4zHyX3imvObK8Dz5ley8knTjw/LhXCPOK8lz3Np5ZhFPkW/k
d+Xf82Z55VXh3fLGfHKcl5L23Nh5ajAPk0/gyfK5vEy+mrfJd3GFOK8lJxaH
s5zn6nJneYqHyXtxnnwUr5BP5w3yZVwq/5zPj/NmcoTbOY+e80HMPvKm/KD8
Fs6XD+V35ZN5p3whn+U8vJbbhJP93FNecXXM8fJMLpDfwAvl/XmHfBzXiPN4
UsCtndff52Hy7ZwnP87L5LXWhFfLr+Kt8u5c0XXBCG4QTvK4nXwxD5Jv4jz5
YS6WV/kwXCq/hCvFdUTSgeu4rribm8snciv5q9xBvob7ynfzGHn5v4dfktfj
N+WteL28N2+X5/Ax+QyuENcxyXKu7rpmKzeTH+Ub5ed+FLOXvBnfK7+VE3k2
Pyt/hl+WF3KhfB0vlh/gNfJKH9tPeUPeL2/Lx+UDuKLrrkf5rHAymy+Rr+Rr
5Tu4o/xXHiw/ryQ8Ut6SJ8p78IvykbxUPpXXyZfwbvlmLpX/wCfHdWBy5trw
Oa4Ls7ihvCNfLr+Hb5I/wQPl83i0/EN+Sr6HZ8pPWhd+R16fS+Steaf8Ti4X
153JaK7qOnQmN5Kv4FbyL7ir/CfOlldbb//lzXmSvAvPkd/Pb8uncLG8iEvk
6/kr+UE+Jj95Q8wKcV2cqsp1wkl9vjScbsI3uI6+ltvrd+aB+ndyjv4Qnqqf
cKH+JH5bfyav1l/An+m/wzv1S8reT1ynJ1+UvZ9weh83dx3/M18TTp36Sbi1
fjXuon8R36N/OSf61/M0/S5cqN+PV5StM3iL/lg+oD+FT4h1Q3oWV7KOeJ3r
hlNpzgon67mV/jYuW6d8x3fp/8IP6Z+2Mfysfk1+Xf/3vFb/Sj6o/yc+KdYt
6W5c0zpmIF8RTg3n7uHkMc7Wf44f13+Zc/UX8UL9VbxEfyN/rP8179H/vmx/
Y12UZGwKXxhOV+Zm1k0X8O3hVGO+V/+P/JR+e56tfzsX6g/mlfoP8lb9CXxE
/wWuHOuw1FyuH07e4sbh9Gpubd32Kd+qv4sH6Zdyjv6Jm72u/u/YujBVl9/W
v5RX66d4u34nPqbfi8vHujC5l+uG06P4MuvGp/imcGo6d9Z/ja1D08s4R/8j
flL/c56pv5fn6R/h5fqn/CPmFv1zeJf+hXxIvymfbt3ahmuFU7dww3DSh5uH
00P5Jv1HeJj+ZJ6o/yJbN6cXcoH+u1ykv5aL9b/kr/X384/6x7hqrKNTFT8N
Vw8n1bluOJ3Jl1t3t+Dr9G/gP+vfxsP1+/MU/b/ydP1xvET/WV6jX8Cf6r/B
e/Tf51/0N/AZsa5Pb+cLrPP/yZnh1HFuFU5O/yzcVb8WD9BvxPfoX8WP6rfj
mfrdeaH+XbxefwTv0n+cj+jncWX3GeZw7XBqMV8eToq5XTi9ifvqf8PD9Q/z
ZP0TtoRf06/C7+nX5i36l7D7IMnV/It+Bz7FfYo72H2S1N3hpEY4eYgzw+mJ
3LTsPglfof8qt9Ffavs366+Rd9X/TD5Qf7c8W/9fnKNf/vPwBP2zOVe/Hs/U
vyyc4b5NupX8Hf2b5R/p9+Yv9O/jPfo5+kf0n5ZXiPssqRnyKuFkPp8TTi/n
eu7LfKx/sf5WeQv9b7md/lHuol9ha7iX/rk8UL9BOGOofjP5cP3r5GP0b5U/
rd9XPkM/Wz677D4Tz9N/hhfp5/MH+oW8Sf8923ffKrWOv9L/ir/VP6D/vf6/
5T/rV/oi8gorY9YIZ1QOpxvKq4czrpDXD6fachP9rp7fUn+A/Fr9B7iT/qN8
m36ufg/92fIB+m9ytv5KHqn/CY/V38FP6B/i5/V/9Xpz9M/4MvK39M8LJx/o
/0G+Tr+lfKv+jfJv9HvID+oPkpfqj+Sj+uM9/7j+VD7FfblXuGo4tYRrrbKf
tlcvnN4sv1R/J1+r/wN30i/3VTyvi/6Z3Eu/TjgZpJ/FI/Sv8fyxnt+ex69K
/QeZfDZR
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Maximum Computation with Iterations\"", TraditionalForm], 
     PlotRange -> {{0., 30000.}, {0, All}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"k", "x1", "x2", "y", "z1", "z2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.82424882313247*^9, 3.8242491965706034`*^9, 
  3.8266752555663214`*^9, 3.8266771601651254`*^9, 3.826678596621211*^9, 
  3.8268245395833197`*^9, 3.826824634414349*^9, 3.8268247105489235`*^9, 
  3.827283517129117*^9, 3.827283634667631*^9, 3.8272840337112007`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"29f9a8d9-b982-4546-b41c-e13ef3d616ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateBoundedTauLeaping", "[", "rxnsys2", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<Maximum Computation with BTL\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8272836934622297`*^9, 3.8272837143027277`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"be71b19d-cc4d-4d67-b562-c1e6cc4e2114"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], {FontFamily -> "Arial"}, StripOnInput -> False]}}, {}},
              AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4.902201695913144`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15224", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], {FontFamily -> "Arial"}, StripOnInput -> False]}}, {}},
              AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4.902201695913144`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15224", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2.451264830005684`*^-9", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
HxRH7nNWxP/G7yXvXipyz/uvZ5SOvBXrhnwTcc0Hb1lC/h7xYvG7I//L/JCo
v0j8nsj/ND/Y/D7Zr/sf+P2y32K8kfmD5MO5/W7e0Pxh8pXx3/BHOP/gv+KP
8hwrs1/3BuZrJe/+C/5YlP8Zfzwn+3m7Muep3o45Q76e+Tq8CvMEfzzynyTf
Hi+F1zV/ooR8bfMn8Wr4j/h6eoLvN69lviEn+/OX6px/8KfEiyMPPSFfU7w6
9z/4+sh/kLyu634Q87SXdd1rmD/NvqpzDu7VzZ/heQXfZ17FfCP5mvS4Vxav
xbrBnxcvjryt9Hwf9dSkx71SCf3f4S+wr+Df4i9yDrU4n28lH7xAfGMJ+YpR
f8hXEK8t+fKs2w4P+XLidXjfDv6CeJ74RvFc8ecj/0by7fGM+PPiafHnxFPi
z0b+tXlZevx86tKjruuqh3MI+TLR/KG/tHhd/CvzUnLO9ehxLzTfRL6B5N1f
Eg/5AvJt8Qyea76F97dGnKe6vx82jPKbI/8y6mlIz5dRTwP8C/wV8g147u4Z
81cl7/45/lqU32ueNn+DfTXkXrmnzLfKPAV40vxNmb8w8lb0a35r5Huingb0
7Il66vN6VG/JcyzGc8y35WQ/X9WTfA75FiXk3ZtzT9w/M/+3UyLxFvn6vF+5
/2P+Nvn6kv+HfHOZM/h28UL8b/FwDu5/iYdz/hQP84Tn8qnkg+eJb4v8f+Z/
ML+fW2N61FtwbzX/lnjI/y7noPnfxBtzP4O/Ffkn5r+a76D/YPxj81/M32XO
Q3hduP8s3oTXY/B3xEP+J/ItxD/C34vyH+Lvc9+C7zb/wXw397M5vst8n/lH
vC5aiH9lvgdvx77Uvact5+b+pfle1m0r+c/NP8fb4zvxL+hpz7o7Ja/+geTb
4Gl8j/mXeEfJB/eeDvj7+FfkO9DzftQT57+UeXLxz+hpJXMG/1I89H8qrv3B
W5aQ/0I8E3kLnovmPxdP4f8T956k+F7xVOTNpec984/YbwvOOSn+pXgq8uZy
zurNZL/vSn9z2a96M9mv+27zr/EOrBv8K/F05E2j/vfNv8vJ/ny8E/6O+bvm
P5DvwnNX93xnye8w3493ZV33t8x/xLvhO/Cf6A/+tvl281+Yvzv96iXlfxZP
4dvEu+Nvmb9p/iv9PXiOwX8Rz8G3ih8m+a0yT5z/uQTfYv4nfgS+3Xyz+d/0
96HffZP5v+SPxLeZv2Sek8zmj6IneEI85F8k3xRPRd4k6n/OPI33k/yz5plk
9vtO+3H+7s+Y5yaz39faj+fl/rR5XjL7fbCaf8o8Hx+Av4kX0BN8q/mT5sWs
O4h5ghdF/obkm+DpyD0/MMoXiacj13lej3qCv2b+mHk51j2Gc1D3/OAoX1Y8
hT9sXgE/Fn8Vr0h/8FfMHzKvzPM9Dt9ifq/5QdyH4fhm87vNayf5Plv8ZbxO
Mvs+NpL78LLkW0T528wb0DOGfan7uqMlf6u45oM3Je++CW8oPe4v4Y1YN/iL
5reYH8ycof8F/JBk9utI8I3ma8ybJrNfj8Yyp/sq8+b4BMnfYN6Knkn483hr
8pPoeV7yrUrIh56J3BP36+lpgedG3px53J/D25AP/izelv7gz5ivNG/PPN6f
h19r3lH2lY9fY96JfveCyJvTU4hfbd6Z5zVR8leTb1ZCvhPP3ecswlfQ0wQv
FO8kHvJXmnfh9TIRfxrvSj74BvPl5t1YdxL+FN6dOSex7lOSbybnEPzQyNdL
vrn4k9LfQs7Z/QrxyZIPrj1P4D2kpzDy5nL+T0Q9wddFPeG5rIt6wjm7X27e
U56j++N4r+g+uC8VnyT5y8x7y7kVR96UnlKRh+deGr/E/Eie+2TJu/cRLx35
waxbBr+YnsZ4afE+JfgC8wH4NOkJ7r9PxP+9YtnI/febTIny/cW1v99/5N39
97OcGuX7Rv6Y+Xkl9K/Fw5xTOLe1kg9ejJ8j+Wk8R/f55gPxGTz34AMif1Ty
jfEC8QGRP2J+lvlgntdp9Kh7fmaUHyReGLnO83DUE9Z9OOqZwevUfY7kT+P9
M/gg8VzxgeIZfJb0zMIfwo9hv8EfxIdwn2fR7366+bHkz5S8+1DxtPiQ/8gP
kXlC/jTxM/m65j6ddd3nSn6a+XGcc/AH8OOj/P34CcwT/D7zKebD2e881nU/
xXwEfrbkg3vPfMmfLK75SeajmOcczkG9EXn3e80nmo+WfG7kIZ+HjzMfx+vu
XPwe87HmE8ifR4/7KPPJ+ELJjzA/hZ4LuYfqDci7320+zHwa+UX4Xfh0+hfR
f5fkg+eKT/2P/FT6L5L+E+hpIH4nPl3yeeLTop47o54Lo/xU8VzxKeIZ/Hjx
i/A7zI+LzieND5U5L5F8cO+5mHXdh5jPSGZ/H+LFkh9CPnhafJp4Cj9G/BL8
djysewk96tp/Gz5D5sxEXl+er/tA89OT2d+/eYnkB4gvxm8172d+Jj2X0uPe
13w2+Usl35d8vRLy7nUT2X/frvlZ4iF/NPk64rfgs6OeWyQfPC0+6z/ys+hf
LP1H0VNbzsG9D+vWln2p16I/L/Ka9LivweeQX8z9V6/JcynAe5nPT2Z/3/Sl
ku8pfpn0u8+LfLXka4rfjJ/NPJfR736Y+TmSL4hc53HvIR56VuHnRuuuknzN
EvLaH/Ldo/5c8bPFM+LzS8h3I18jyncjX6OEvHt1uefB54nnRl5N7lvwsyK/
ybwr81Rn3bT4fPFM5NVYV/PzxFN4Z8n7960kxeeJpyKvGs3TkTmrkA/zdOC5
VMZDvh3P3X2Z5Nuan5fM/rkNyyTfyvx8/ErJB/ffp7Ecv9G8hfmF5K/i/N2b
ml9M/mr8BvPG5peRX8m9Uvf8dfj1+FLywVfil7Ov67i36p6/Fr8OX0b+Wnrc
G5pfgYd5rjWvb34V53wDPeqevx6/xrye+dWSzxNfIZ4rflXkV0u+qvgK6a+G
Z/Da5tfiq3iOwa+J/CrJV8czkXv+JsnXNL8Ov1nywatKz5X4SlnXfbn5QeY3
sO7N9LvXEF8t+ermN9KzmnNwr2q+inXXSL6y+c34reKlze/E75We4H7+9+BX
mBea30f+AZ6juufv57m7F5jfz324n/dn93zzB7iHwZeZ55k/RP4BeoI/KF4Q
eegpjNxfL/dJPlc8rHs5/pD05Is/GPlSyYd95eGZaH73y/CHOZ+wL/XK0n8p
/kh0nkvM0+Zr5fzdF+OPcR/Cuu4p8QclH7xqlE+Kaz54FTl/9386JhJPMv/D
nL/7H+ZPc25rJe++IfJLJF8ZzxffIJ4n/lQJ+d+jfveL8aejnoslr75I8lXw
XPEN4nmRe8+jUf4p8Yz4+sgvknwVPI3/Jr5W8r9F/SH/a3Q+If9LdD7uF+JP
R/mF+DPRuhfgz3JP1rLuBZJXP1/y1cQXmP9kvpH3t8fpd//OfDP5pzhPde9f
z/mr+5xP4ufhW8g/Sc95UU+cDz1PRPmXIz836nmC+c+VfNUS8qFnHeuqV+Yc
Qv5r5q/MnBnxzeIh/7n5azzfDZLfK/405x/81cjPkXxlPBO59p9tvsf8Dcmn
8U/Nt+LPSj649zwj+d3mb+MvSn6X+Q7et19kv+47zd9JZn8frOZ3kq8Q5d83
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
/x6/UPqfEr8Ir4Pvoz94bfP15vuZZxH97k+a/0h+EfOoh/7cyEszj+b3R17L
/Anzn6Ie9ZB3r4n/LPvNiP8knhb/MTqf4PvFk+I/RH6Q+To5h3Bu6rqu+2PM
WTrKrxVfJPkHzP9MZX/eeileA/+L/KXs1/0e/4Mo0tn85ZyPuv96wlK8uvld
5inyy/h6536neZr8MsnfIX4FXs38dvNcepbjVc1vM89PZ+e8kjmD54mn8VvF
r8KrmK8xL0xnz/NqetQ9vwKvjBeRX0GP+yrzUvi1kg/uPdcwv3op1nWvhJcm
H+Zxv9G8DH6t5IOXoj/krzcvi1/HnO4rxVdK/jrzcpz/SukPXkRPyF9jXh6/
Hq9ovsK8Ej03sm7wiuIp/CrxmyQfvKiEfIXIK0Q9wcubLzOvxn5X4+Xw6pzn
atZ1X2p+EPk1knevIZ4Ur/4f+erMo/2X0VMUzXOpuPZfSk9R1L+YOf3XM2/B
y5pfYl6L/K14Gbw28wQvbb7IvB7z38667heJ38HXzeB1xZORF0tPqagneDFe
n/O/nX73heYN8Dslv8C8MT13M7+6r3sX56xeRI/mG0VeZH6u+SH0hP5CvIms
m8TnmzfD78ML8ObMHzwfb8H7w33s132ueSvcv18vgc8yb4s/iufh7dLZrwvB
c81PM++Uzn49fZx+95nmnck/zjzuM8y70P84+3WfZn4o86/DM3g38sHTeHf6
19Hvfqr5Yfh6PIX3ZM7gSbxXOvv5J3iO/eAU88PT2c+HT+EJ/Ih09vPnU8zj
Ptn8SPIb8H/LZf0o8hu4J+4TzPuRf0by7n3Fk/g4yT+H/2M+1nwA/c9z/u5j
xDdKfoT5EHo2sa66n8NLzKnu5/Yi77fqfs4vRPljxDORl2EezQ+O/O+oJ/hf
0Twbmd/9RPOhMmcSP9b8BHyL5IN7/+Yof7x4KnKf8+Uof5x4yA8yH859fhX/
Ex9BPvgf+EjWfZX9qnv+Ffx38wHmo8m/Ro97f/HX8d/wMZzD6/S49zUfR/4N
/Ffzo8wnkn+T56ju+a1RfoJ4yB9Jvoz4L/gkyedGXoZ53H/GJ8ucefgR5qdI
v/tP5r3Np5LfRk/wKZH/KPly4vvtBz3MT+N1sYP5g8+M/AfzbuZn8Pp6l/Nx
72w+G9/Jc3HvaD4H343vw+fy+t1Nj/qB7y9iXff25vOYR/PuZ4mH/raS/0jy
rc3P5hw+lnwr8U8k39T8fM5zD/49fgH5Pczp3sR8YQn5JuTVvzM/2Pwiej6n
x72x+SLyn0u+ofnF+Jf4t+YNzBfT8xX7cq9nvgT/RvLBvedr1lUvQ08uXsf8
Ml7vmq8t/g3+Db6UnuBfm9c0v4J1v6Nf3fPfcs/VQ3/IVzO/Ct8n/e5XiudG
7p8rvo/yy8XT4leIp8SXlZCvSr44ylclHzwpfnnkX0k+9OfglWTO/Xw+ca8g
+/pJ8uXMV9D/s/QHLyKfitw/9/6If2le1vwaySfxMuKh/wvz0ubXse4v+Of4
Sub8hX73UubXl5AvRb64hPzKaF33QvMb8N/wveYF5jfR8zvn4542X4P/I/mk
+a30/Ct591si3yP5YvHP8NvYb/BPzXPM7+B++qaS+L/t7XM2ef++vFTkxSXk
74z8f1GPew7+l/k9eCqVvT/uf5jfi2ck/7v5ffRnpD/4ge/DwT/B7yefZn73
38wfKCH/G/miEvL3cw9TUf4+8VTkB/7cZ/xj819ZV/Mfmf9i/pCsm448zv8s
rvngBVH+R/OH8Yzk95s/kubPy5b8D+K5+Ifm+8zX0pPHOQR/VDwH/148n+cb
/BHxkP/KfB3rFuO7zfeabyBfFt9lvsf8Gc6hHP3un4mXl3zwAvJJ/FPzZ1k3
+E78Ocnn4B+bb8QrSn63+Uv0VObc1P3rRyX8A3wT+Ur0fBD1BH9f8gXi75nv
NN/CfqswZ/DNkb9r/q7569y3Gvg75u+Yb+X1chD97jvM3yQffIf5dvO3ydfG
38Z38PqtzX7VD/w9Mfhb+Dvkg2/H3+V9qRb92yVfuoR86KmJbzPfZv6e5NP4
m+bvy7oZfKv5BzJnyL8hXlvywYuk5018Z9Tj/pr5LryO5IMXSf9W81fNP5R8
buQhn4e/Yv4Rz7225F8hXxj1u+/+j/xu7lutKL9LPC2+8z/yO7nPNaP8B5G/
EfWE5+i+Jep3fx3fxfzBXzN/mXMo4tyS4h9G/qrkwznn4JvE6+KvmL9k/gn3
px7vP+4vitfHt+D/4x7Wp8f9BfNPJZ/EN5p/xrr12Zf78+Z7mD/4ZvNnzb8g
3xB/2fwp82/pP4RzVvf8wVH+m8g3RT0HM+cmyZcqIR96Gkf5ryN/KeoJ/qKs
W1r8BfN15vvT/L19rKvu+SaSf8z8R7wZ5x98v3jIryVfCg/9j5r/xPzNOE/1
IubJRF7IPLmRF/BcNP+juPbvj3yj+SNRf0r8R/Gk+P7In5d8kfhz0l+M5+AP
mf8s5+D+LP6LnFsSv9/8d/ItJH+v+R94K8nfbf4X87TGn8H/Jh/8afwf1m1N
v/td4m0kf6f5v/S04dzc7zD3h1GEpyMvpN99g/nt5knJp8Rzoh7328gXRvlb
xdtKPnhBCfmcyJ+KeoKvx1MyT1I8nn991BP2uz6ap1WUz4n8SfPV5hnZl/sT
5qvM81m3Pf3qnm8n+ZvE2+PrzFeal6KnM/64+XXmZTL8Pbv0q4e8+2N4WfLB
15pfa14+w9/LS3/wcuLpyENPJnJft5PkrxEP6z5qfrV5BZk/g68wr0g++CN4
pWi/7leJd2X+4BXFk/hyyXfjdeR+hXh3/GHzZeZVOIce9KiHfApfal6N+Xvg
D+HVyfdgfvUietwfNL/M/CDJZ/BLzOuQ74U/gNcl34v3YXXP9+RzlLrft8NS
2c8p6gWsq/k64qH/IvN6eC/JB89nXc3XFc+I14n8fskX4Gl8oazbm3N2v0D8
cPw+8/PNG7DfI+hRLylfXzyJLxA/QvLnmjdk/j7SHzyvhHwD8XTkudE8Z9OT
S3+YZ774kZIPnikh30A8R7x+Cfl55NNRfh754Al8Duu6H43faz7bvDH9ffF7
zGeZN2H+/vSre74ffrf56ebNyQ9gTveZ5i3JD8TvwluRH8j5uE8zb0t+MH6n
+RTzDuSH4HfgHXleQ3he7qead5K8++145yh/G96FezKEe67u+WMkP8m8G34c
87hPFD8evxXvTn/wW8wnmB/GvT2B8wneI/I15uPNe/J6GYavxnvxfhL8Zrw3
7z/BV+GH8/4Z/CbzceZ9MtnPpSfiN+JHZrKfe09kfvfR5n3Jj8BvMB9lPoD8
KM5N3fMjJT9SXPPBS0X5EeKjmNP9BPPB+FjJB/dzGINfjx9Dfgzrqnt+dJQf
HPnKqCf4dfgQ9hX8Wnwo5zOaddU9fxL3UD3sNxc/zvw45tG8+7HiIX8s+SLx
a8yHmp8g+8qIHy+exgebD8PHsS/3AebD8Yn41fgI5g++Ah/JfifSr+75CVF+
hHhSfPh/5MM84yV/lPlJ+Mn4Vfhoek7m/e0qyZcqIR96JuNXRj3Bl5v3MR/H
fk+hP/jYyK+QfBk8ifc2n0h+Cr4Mn0R+Cj3uPcxPwWfwPh/8ZPGQ706+dJTv
Tl79cvMu5tPoOYMedc+fji/Fp5MPfhk+I5P992Kn0+/eyXwmPgu/1Lyj+emZ
7L/XO5Me9w7mZ5A/k/Nxb28+i3XP5J6ol6Zf82dEvsS8nfmZUY97G/M55Gdz
n9VLkXdfbN7a/Kwofwk+j/7gF5u3Mj+bfc3hdaoe8u6L8HPIB7/IvKX5eZzb
HPqDnxv5hZIvj6fwFuJzOZ/g54qHfHNZd670B9d9qYd95eLNzBfIuWXEz4vO
M/i5JeSbki8V5ZuSLxXlm5AvjuY5hHmK8Dy8kflCvl7Plbz7BeIZ8fP/I38+
nwf0fBrQ436WzF9ffJ7kg+dH+Xri8+R51RWfL8+3jvjZ+ELz2uYXsu45vB6D
L4z8AvMa5pew3/Px8/HFnOf59Kt7fkGUvyTyBVHPAt433KtH/f7PeeaVzS/n
+V6En2teyfwK7sMi+t3Lml9Nfgl+jnkp85Xkl9LjXmR+Pb5M8sG953L2q15E
j/vZ5oXmN0b5+eb55jfTfwXP0T1lfhv5FTx3de+/SvJJ8RXS739x3+34Ncwf
/DbxhPitkc8z/7udfa5nnpX4WfhdzB98rvlv5g/w+l3Fuuqev4k53X8yf4T+
1ZJ3fzjyOZIvhSfwb82fwO+UfHDvuSPKr4t8dtRzBz3uX5k/Rf4u/Ezzz82f
JX8v+1L3/D2S3yuu+T3mz3H+9/J81Qvp0fyz4qH/U8nfJ/lPzDfyur5f+oPn
R/mPzF/AH5D+jyQffJb5LvNN9D+Mn2H+jvnrzLMOP918h/lW9vsEfpr5m+Y7
OJ+n8Zn4O5xz8Bn4u9y3p5lf3fMb2K/76+Yf0P8MPh3fSf4ZXnfur5rvJv8s
78/qRSXkd4mH/lfEn8Wn4drvPhX/kHmeZV9TJV8qym8hrz1TzF82/4T888yp
7vnnJL9J/HnWDf5x5Keav2D+Gf0v4qfge3guL9LvvtF8bwn558Vfknzw4hLy
e8Rz8OfEX5J88KJonuB+P1+I8p9FfrL5s8xTJPNMNn/G/Ito3Un4l7Iv94n4
V5zPS8w/UfLqE8yfNv+az1eb6HHfYP4N+eDjzZ8y/478y+zX/UnzfeQ3S/5x
8/34q5J/zPxH5n+V++O+1vwn9qv5teSDJ8X3Rz5O8qXEx0q/zuP+iPkv5F9j
HvVimXMM/ms0/2jzh81/p/81+oP/Jp4U/7WE/EPkS4mfhGt/OnKdZ5T5A+Z/
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
j6HHfYL4EMmPN+9CzxDJjycfPCHeKfI15uPo8f6h+Gq8K/sKfrP5GPPu3PPj
8FXmo8x78ToaxjzuI817kx/G/O7DzI+kfwT3Td3nGY7fhB9Ffjg9N0U9wW80
P8H8aNYdwTzux4uPZP7gR0V+g/kx5gPZ11h61A/8+1z8enwQ+eArzQeaD+V9
bDxzuh9tPoz8ZPbrfqT5cPpP5nOF++Hmo9jvqZLvLT5F+t1HRn6deS/zk+if
il+Lj2aeqczvfpj5GHw65+Pe3XwsPlPy3czH0T9T8t3I55aQH8ucM6L8mMiv
iXpm0HNN1DMdvzqaJ8x/ddQT50PPNM5HPS3n436o+DTp72w+Hg/nsMK8k/lE
+k/DrzLvaD6ZeU6nXz3k3a80b2c+hfws5lT3/BmSbys+C19u3sp8Bj1z8CvM
W5qfxvOdiy8zb2F+Bvf5LPxyfBZfx4MvNW9uPjs/+/OOeezXvZn4fMk3NZ9D
T/DL8LlR/lLzxubn5Gd/HnQe/e6NxBdIvoH5efScz7m51zW/gHUXSv4g80X4
JZKvZr6Yc1jC61Hdz22x5KuYL8Evlf6K5pfhl8v85c2X4ldIvpz55TyvK6S/
rPkynm/wJfgVkk/hZcyXSz4duf94meRLi2t/afrTMmfwZSXki+nx3uXSHzwZ
zRM8J5qnSFz7C8yvxK+UefLFr+Kc3fPEV+CLzdPm1zDPtfgl5knzlcy/kn73
f1vb1xPyN0je/YbILzb/y/xmelbhi/DVnFvwi/A1PK9VrOv+p/ktJeT/EL8Z
vxC/lZ7gC/HbuCc306+ekf6FUU/wC6Ke4Oeb/2p+F/d5Db4Av5vXUfDz8Ht4
3QU/F7+X1+8a5nT/2fx+8rfg5+APkA9+Nv4g7w+3cH/Utf/sqCf4/KhnDT3z
o57VUf4B8ZD/wfwR5r9V8u4Pi4f8PvL5eAr/3vxRzlnz35PPi/Lfkc+N8t+R
z43m+Y551OdJPvQn8G/Fb5P8F+br6LlL8p+L3y35veZPcN/ulvwe8Xvws8w/
Mn+WnofwufhzzBN8jvlO85c4z7Ws6/6B+Sbyazkf9QP/flby74tr/l3zzcz5
GD4b30L+MXrcd5i/gq9jTve3xZ+Q/Dbz1+lfj59p/qb5VvJP0RP8jchnmb9h
vo39Pk2Puuc3ML96hh7Nvyke+l8X3yD51+hJR/2vmm/nfXID91Y9Sb/mt0V+
RtQT/HT8LdYN87tvMX8bf1rym8130BP8NPMXzT8g/zw97i+Ib8Rnmm8038U5
vECPekn5neIJ8f/q/4A5wzwzzJ+P+pORl5TfKR7yT5l/wjlvkrz7x+IJfL34
y/h08yfN/0f/Znya+TrzPcz5Cv3qnt8S5T+LfKr5WvMv6HkNn4J/yfm/Rr/7
Q+bfkt+Kn4p/Rz74KeYPmu/jdfEmfjL+A6+j4JPN7zf/ifeZ7cwT/EfxnMi9
Zxs+KeoJPtH8PvNf+HoR+t3vFX9L8sF13Qn4r9KTjDysm4o87Dfk7xHfJv13
mv+Ov82c7neI78DH43+wbvBx+J/MuYN+9Xz63cfif5F/mzndbzX/l/w7kr9F
/F18DO4lBXgycu1xX2Wewj9g/uDJyEdLvgDPwW8yT0s+Gbmf2/v4SXiGfPBR
eC797/Mc3W80zyshfyP5/Ci/0ryAdXfiI/FC8u7pyPOYX/MF4kn8uqjffQSu
/e7D8SL2tZNzGy559RMlXyg97teYlyK/Cx+Glya/i/nVC6RnWNQT1nW/yrwM
/qHkl5uXY18fSX/wPPLpyP39Z3eULyuu/WXEwzxXiH/IPXS/XHo+lvxS1s2I
n4CXj/LH4xWYP/hxeEX2+zFzqudxDu7H4pWi81HX81EP+81EnuE5ar6ieOi/
THy3zHMZ+8rIeQYvL54QL1dC/lLyafGheNw/BK8YPcdj8HAOYU71XPYV8hea
18A/xQebLzSvSc9n9LhfYF6L/GeSP198j+SDZ6RnkPkC8zqST+Hnmdclv4fn
op6mR/N1xNORp9iX5muLJ8VrieeI1xRP4GdLz17JB08yv/tAPMyzh56BUU/w
AZJPS4/7fM4hJd4frxfl+5mfZd6Q8/yc/brPNW9EPnhfvHGUP9p8jvkhPK8v
6HefLf4l8wc/OPKjzGeat+RefY8fibfidf09/e5TzduR3y9597biIX+qeXvW
/VHyJ5t3wH+W/GTzjuz3Z8lPJp+J8hPNO3Fuv+B98M7kf+Hc1NPS4z5BXPPj
zbvwfH/h3qon6dF8Z/Ec8U7iCfGO/5F39x//hB9hPi7qT0Ye8u6Hm4817yr5
VORxfox4mMf9JPND8V/x3ng3+oP3Mh9pfhjn9jv7dR8h/gfeE+/J+f9Bj/uJ
5r3J/yl5916RHyb5tHgP8xPM+3Af/qbffYh5P/I5udl9qHu/X9KQH2zeH09K
fpD5AM4hKflB5IOHeQaKp/Du5v3NB9Gfocf9aPMh5PNY172P+XE8lwLJux8b
eTfznubD6SmNH4qPYN3gXfGRnE/wLuY9zEdznmWZx72b+Vjy5STvPkY8GXmK
npDvSo97ec4n+JjIO0s+Ld7JvJP5ROasRL97G/Mp5Kszj7r3+59HmIrcc1Wj
/KniId+afE6Ub01evaN5K/Op9FRjTvcW5tPwGngHfDpz1qBHPcm+ND9NPOSb
ms9knoMk30S8Jt4eP42e4O3w05kneFv8DM45eBt8Fs+lJvO4H2J+puTdW+Oz
JZ8jfqZ4QnxW5K3M65mfzdedBvSoe74+67rXNT+HeepLvi754Anx+f+Rn8/5
1MNbRj316HGvE/XnRK49Lcxrm58r+SRe03wB+QaSdz9PPBl5UtZ1r0GPe0Pm
dK9mfj7eGG+OX0B/8GbmVcwvYs5D6HevaH4J+abM417BfDH9TSVfgXzw0F9e
vBneFF9Mf/Am+BLmaUa/e6H5leTbSj7PfAXeAT/EPNf8Gno60uOeMb+WfPCD
zZPmN5Dvgjc2zzG/iXvYlXNQD/lU5P7jzrnZ/7/6gfcdvBG+irx7Bk+Y31xC
PkE+eEpc+5PiN5aQ/6dVtieHOZPiN0Xe0PzvVv83Txe8Ab6a+cO5NZC8en3J
p6WnftTTmTnVdV/1o3k6Rf2rIq9n/qf5GpknIb468rrmf5jfwpxd8TrmP5nf
zX3oSb/7fvN7yfdiTvUU+VTknjssyt8Tee2o5zDWrS354AnxuyOvZf69+f3M
2RuviT/AvoIfhD/I+3Nv1nX/3Hwd+b54DfM95uvJ96cn+JORV5d8Hp6Df2b+
lOTdq5l/av40+QGcj/tO85fIH8s5u79v/jJzHid5903iIb/D/BXOZ5jk3beI
h3m2m7+Kj2Bf7lvNX8dPkvzr5lt5LqMl7/5G5FXNN5m/Q88kvAr+LvNPot/9
JfP3JJ/EnzH/iP6p7Ffdc1N4n1E/8Ov7Uf5D8dC/QfJTZZ4Nkg9eWfJJ8Urm
683/x5zT8YrmT5p/xr5mcA7uT4jPlPw68z30BK+A75V8An9c/DS8PP4553wa
PeqhJxl5ijk1vzfyclHPDHrKRT3To/zeyMuaP2z+DT1nMH/wr8VD/iHyKfEy
+LdRTxnJq5eWfEZ63B80/y5atxT+fZQvxvfx+g1eZH6/+Y+83s9k3eD7Iy80
v9f854Lsr5PMoUfd87PxAvwX8rM5f/XQ756P/0r+TF4X7veY/1ZC/m7x2ZIP
nltC/lfxVOR+brMkf5e45oOno/wdrJuWcwj+q3jI32b+O/dkDp5nfqv5n+Tn
sq77LeZ/kZ8r+TXiZ+G5+N/0nMU8uZJPl5DXfs3/GXkm6gnzuK9m3Ti/OupP
4DdH8/s/aTye332V+T8l5FfJupq/0fxf3g/nSf5GetRTkk+JJ82vN08WZuc5
m371A9/XEuVzIs8xX25eRM+FeAIvLszet+D/lkkkLjcvW8ifB4L/Y36ZeYVC
vt8P/9v8UvNKhXx/IHOqh7z7X+ZLzKtIPhl5yLv/iVclv5j7qe75SyS/WDys
G7xKNH/wyiXkL6YnV/b1B16NfJhfPVfmVM/InH9If3Dtr1JCfhH5dJRfRD5d
Qr4K9+FiyV8krvngSfL+37+bLzSvTj6cT/Bqkf8m+bT4r+YXmB/EvpZw/sFr
RP6L+fnmNTnPS+lRj/PnmdfCL5P8uea1mecyyZ9LXv1nyWuP+9nmdckv5Xzc
55vX4xyWSn4++eAJ8Tol5OeYN+D8r5D+2eYNC7O5K7hX6v7PsijfIPKfop5l
rPuT5IMnxOv/R74+/ZdH+XqR/xj1BN9vfoZ5Y/a7nH71sN+Qn2HeBF+B/2A+
zbw5PdfQ4z7VvAX5ayQ/RfxafJ/5yeZt6Lke/958gnlHntcq/Du8E/ch+Ld4
Z+7PKuZxH2t+KPnVPBd1779Z8qPNu+FrpH+05NdIfqR5D+a/VfLu3SP/xvxE
81703EGP+wnmh5O/U/LuvSP/2vx48yPouYse9+PM+5AP/pX5UPOjyd/DObgP
Nu9P/j7Ju/eL/EvzQeYD6LmfedwHij+Af4EP5PwfoMd9gPmgEvL9xR/EP8cH
0/MgPe79zI+RfDLypKzr3ldc+/vSr75X8jrPHnyIzOP/fIYP5R4G/9T8cPPh
vK8+xjzuvcxHkn+c+d17mo+i/3HJ9yQfPPQfJr5O8t3MRzP/k9Lf1Xws+10v
efcx4qG/s+Q3SL6T+The18H/Z97KfAr5F/FP8KnME/xjfBrzv8i6H0te/SPz
lubTObeX6HFvYT6D/EuSb2p+Gr5Z8oeYn8E8WyTf2HwW/ir+oXkj89n0vIbv
Nm9oPpd5XqdfvaT8nMh3RT3Bd+JncX+Cf2DewHw+n4vCuuol5eeJ50SeYb/J
yA98nyT+vvRn8BzxeeLJyNOcc8jXNj8Xf4M5g58T+XvmNcwvoH87Peqe3xbl
zxfPidyf75uSr2J+If625IP7ft6K8gvFQ76S+UW8Lt6WfEXxHfi75uXMF9Pz
Hj3qB36Mv4MvIR98h3lZ88uY/z363cuIv4+/bV7a/HLO5wP8LfNS5ldwzjvp
dy82X05+p+SLyaejfBH5VJQvFN+FbzcvML+Knt34NnwF8wR/E7+a+7ybddUz
9LtvNc8zv478h9xP9Yz0BL9WPOQz5iuZ80PJZ+gJnsBTkv8YfwO/nv6P6VH3
/EdRfmXkr5snzG+i53/0qHv+E+Z3/6elfe7h/DXvviry18z/Nl9Nz6f4q/ga
1v2Ufve/zG8pIf+H+a34HuZ3/118r+S/M3+AefZJf3D/8fdR/v7IX4l6vqfH
/Rvzh8jvk7z7g+Ih/5X5w7wef5D8l+L72Zf7F+I/4lvM95qvpf9netQPfO6X
/B7xn/HN+GPS4/+8bP6p+RPs91f63f9n/iT54JvMPzR/hvyf9Li/Z/4CnpP3
f/l3zF+iJ4m/hG8i757Ed5i/LPkDnwvwzZLPEX9ZPCG+qYT821G/+wt43L/R
/C3zV7hvKfqDb4n8eclnxJ8z32b+Ou8nGfxZ/A2+LmdYV93zaclvNd+K50o+
eCbq30pPJup/1Xw78+dzzu6vmL/FOeRL/hXy6s9IPi3+tPkW8x2sW0C/+8vm
75IvlLz7O+LJyFP0hPxL9LgXsV/3F8WL8Q3mG80/oL80PeqeL4U/Zf6s+Yfk
y9Lj/pT5J3hFyQf3ngrM7/6Y+efct6r4evwL8u4pfK35l5I/8Hnc/FHzr8lX
o8f9EfHqzOP+sHgN/An8G+YPvs78fvMfeF616Vf3fC38cXw/+Vr0PB71xPnQ
U5N9ud9HTwpPiv8gHvrvFdf+4Enpecz8TvNfyNdlXfdbzP8k31Dyq83/whuz
bvA/I19rfrP53/QfTI96Sfm4/9GopzH37VHJqz8i+bT4w/g/nH/od7/ePFWU
zTfFHzK/zjy3KJtvjj9ofq15flH2faYF/e7XiLeUfPAM+WTkafpTkR/4vpQo
nxf5A1FPM9Z1X2FegIc5g+dHfr/kM+L3mV9hXpp9taHffZl5GfJtmMf9UvMK
9LeXvHt58YR4uRLyi+k58H01kr/YvCLeSfKLzCsVZecIfq/5heZVyXfB7zFf
aF6ddbsyv3qcv0Bc88GTUX6BeQ38UOYPXl085M82r1WU/XEP6Z9vXrso+7/v
Ifl54odJ/zx61O+WfI74XeZzzesxTy/8TvM55g3Yb2/WdZ9t3pB8b+Z0P9O8
Ef3B7zA/3bwJ+T70uM80b4ofhd+ON2Pd4LeZTzdvyfPqy5zuU81b4f3xW81P
NW/L/RyI34K34z4PpN99snlH8oOZX/3A71uI8h3EQ/8k8cGSD56SnjXmE8w7
kz+Gdd3HmXclP0Ty7l3EE/gYyR+LrzYfYd6T/hPpcR9u3ov8iayr7j8eJvkT
xUPPzebDzA+nZzg96iXle0e+yvwE8yOkJ4EfLz4Cvwnvw76C34gfyXMMfoP5
UPN+PPeTWFfd86Pw6/H+5EfRc33UE3yl5POkZ2XUMzLK94v8uqhnJD3XRT0j
OGf1DOeWwoeYD+B8hkt+CPngof8Y8RH4teaDzAfJ+SQjTzPngX+PYT7Q/Jjo
PIMPjnrU07Jf9wHioedq837mQ+kZja/Aj+V8RtOvnpHnviLqOSnKD5V13a+K
eoJfiR8n9yEH7yt+kuSDh55U5HqewY+Nzif4UPGE+JDIl5v3Nh/OuuPpce9l
PoJ88CvMe5qPIj8BX4afxL4mMKe69rsfJh56LsdHRz3qoScVuc8Z/jx7dc+N
jfIniWv/qBLyPcgno3wP8upLJa897t2ZJ853Ex+HX4aPoWcc5+N+qHg4z0vN
u5qP4xwm8HyDjxXPiVx7lkQ9wRfj4+X8E+Ljoue7OOoJ818S9YT9uncxnyD5
A//e3ryz+STpd1+ET+aehPugrv2Lop7gF0U9wS8072R+Cu+3oV89zncUD+cQ
/GTxBN5BfILkg+t5LsTj/gvwU2XOJN7efEp0Pu7tzKdGr6Pz8WmST0cezk3z
U6PzDD4l8gWS13M7z7yt+fTonNVzZd1zzduYz4zy55i3Nj+9KPt9NeF9I/hp
4jniM0vINzefRf9kybufIR7yzcjnRvlm5HNLyJ/B+UyK8qeLJyP35zFR9hs8
xfzpyJPR+TQV1/025XyS0fk05XyCJ/DGzO9+Mn62eSPzM5nnFHy+eUPzOcx/
Kv3qcb6B+Kn4PPP65mfRM4Ue93rm88hPkXxd8an4Wfh8eqb+P7ruOlyq8vsC
+Jwz9166U0BFQmIu+jURAQlRCekwUAERaaVBUgRESgkpRcoGFVAklAalkRBs
kBJQQcRAyd/e96z9sH77Ge8/88zH5Xr3ec+5NcydQY/6teKDkO+K/WEPY1fe
n0T9avEh2aL/n/PFyJ+i/qLkT8P7wZ9F/9OYU70IeTfKm3NPX/hQ16N+FXk3
eB/4czhe897ihcWHY3+6w3vBR+D6NO8pXkB8FK7zXpiHPeP5tPAe4vnFx1A+
dO7zecXHwnvDu4vnEX8RPX3g3cRzi4/H52lfzKmei7wf/GnxbOKT8XVgIHrY
NToAc6pnEZ+KdQfiemBPRT7Fud7v7/JTyK0/M/kAymdCT9zNk0Y+EP4UfBp6
7Lieojx7V8qnwmPkU513oXwaeWfxmPgs7Ntz8E7w2djn57Cu+sUb5Pdy5IfD
O8LfQH44jotd88OwP+oXxN/EPMMofwH5tCT5N3Bcz7n86+Q2z7/oVx+B41L/
h/x5ypunIG/9Z8XfwvkaQfOYh+54z6KHvYP43+JvU09A/pbz9pTnedT/EJ+H
/Ej4k/D5yI9Ez5OUZ29H+VTqUT8j/h7lM76fwN+nfED+nvO24qfFF+A8jsL+
m39AHjjPeN4p5U+KL4SPgT8OX4SeMehR/1X8wyT5E+KL4S/C24gfF1+Cnpfg
rcV/El+O63YCvBX8E1zn5o/BP80Wvc6M+aPwFdmi17GZgDnZNT/e5T8lD5xn
xpzqj7gem1/9iPhKmidwnhn9ofNMrv8I+jMl6f/UeUvK85wtXc+LWFf9oPhq
7P94fH6xp6In4/Ek+Bo6XyH5avK481Ra13wVueV/RD4FnuI84/fDTHichjzj
90CXX0Vu/fspb+s+BF+DfluXPcS6lv+BnPPmAfLqD4p/L77OrWu+ljwkX+P8
AcrbnAH8W/TH6bptAV+P/bTrjT1O54ud121B/ezNXY95M/gGOo8B+XrnTcW/
Fv8c14N9Ppp/Rm75r5BPcfnd4lvgkylvrnO+DG8C34r8y5ifXfOT4I3h25A3
bwTfjjnNG8J34PNiEvaZXfP2/mMN4F8gb14fvhOfvxPRX5/y5gH5jiT5Xa7f
8l+gPw37EINvF98FnwK/X3yz+D70v4Ie9U3iXyH/CtZVXyf+A453FuXVvycP
nWc8v9rlv3NeT3yt6w/ha8T3Iz+L8qvJZ8Prwg+gx7wO/Ecc12z0s9u6cec2
J+cPuPnVV5HPwj6b+/nZ49RT2/WY3yf+qfhhzDkHfi/8CI5rDta9l/JpSfKH
3f7cI/6J+FHXo76cfC68lvgy8WO4fl5Hj/pS8ePIv075pcinJckfwzxz4XeL
LxE/4fI14T/TuqFzmzPu3PaN8yfcfpofJ4/BF1Oe5zFPoflrwH+m44qRn3Be
Xfwj8V/c8bIny/v+aq7H5qnmemwf2O3zSP0u8ffFzyD/FvaTXfNv4vuj+nvi
f+B6Nq8K/5PycfI/yEP42+Jn4fMwv/pb5PMpP0f8AtZdQHn1886riM8Wv4ie
hehhT5bn/hh8JuUXwSvDL6F/EXrY41hX/U7x6eIp2aP8x+hRn0a+hPLm8ST5
OLnlp4inZo+O03oqwdOQX4J9UJ8snilJfjLyoctPEM+aPcotp7x6FvIY/CXK
fwq/A54N/eYVxceJ58ScK+G3i48Sz4f9WYt11UeKF0B+HeZUHyFeCP3rKa9e
kNz6h5NvgN8GL4T+DehRHyZemPLqt4o/J14E+c/gt4gPFS+G+T+H3yw+ULxE
djx/Huuq9xcvCd9O+Z7i5dGzB36TeHfxCsjvRY95OrnluyGfAg+d6/xf4vOX
PcS6nE8n5/6E8/9RPg6PkSec30j5FPIbxNuL347j+h5eQfxJ8Tuy43ndWFf9
CfE7kd9PefVK5IHzFOpJF28rXtnlE/AqWNf6E5RPc/nHkbee0Lmtq14eXhX5
H3Be1FuJV0f+AL4Os8fRn+o8RA/nq5Fz/13kNs+jlD9AefMA66qXE28pXhP5
H9FjXoM8gD9E+UPYT/MazsuKNxGvg+M9gR71huL3I/8LvAy8PvK/YB71BuIN
KK+318MbUj4gb+C8NOVTqEe9rnhT5E/BS8GbIX8K+6ZeW7wF8r9R/j7y01hX
/R7xB+BnsD/mLZyXFK8p/jDW/QteQryqeGtcb+fQz675f+HXiVcRf9zli8Pb
4vo/h/nZU9Gjfi38CeTNr4G3yx79HGh+tXhl8fbZo8dPbF31O8nPU948U5L8
k86LuR6bX72SeAfKx53z/OoVxTvCbZ6i4reLd0bPBaxr3onc8rchn+byt5Jf
pPwt4l2wzxcxp/qN4t1wHmOZr+TVn3ZeRPwG8e7oCTJH65p3I4/BK5CHlE9H
Twr5VfAelA+dp9C66mXFe8NTKW+ux5mC191n11yc8mXIU+CFxUuL90NPGtY1
70tu+VLIhy5fCnn2QuIlxZ9BTybsm/q14gPh2eAFxa8RH4zjzQ4vAB+CfcuO
fvWrxZ9Nki8kPgKel/Lmum4eyucVHwUvCM8PH40e83zwMZjHPC98LK7PgliX
XfMFsJ/qecTHob8A5fMgn+LyuZGPk+eBv+h68lDePAbPRV6Q8rlcP+fHOs8t
npPWtR52n89BznnzMEl+nPNc4lnFJ6CnMDyneGbxlzFPEfSzZ3yeuPwk5znE
Y+Iz0HMdetQvV4jFXkPePDt8pstng8/Ceb8O50v9kvjsJPlLyJvH4P+Kvw6/
Hp4V/gb6r0eP+j/ib1JePYv4WfG3kS+DHvW/ycvCM8PfwfVsnkn8tPgCfN2+
Af3qv4kvRN48TfyU+IfI34h9YE+WX0QeI/+v/oWYvwL1/yL+EfbB1k0VPyr+
CfK3ocd8ufMUyqeRx8WPiK/Acd2OfnbLq4fwlcibB+IHxdfi+6+9Xyi75itS
fr/4evidlDfXdSu5/DrnMddTCccVo7x5jHyt88s55Wdm9GTGPIFz7r8k/p34
58hXRo/6PvEt8OqUN9eeavCL8K3IV0OP+pfi2+A14Bfg27NH//5VAz3stm7o
3NaNO9f9vAt+Hr4D+bvQc9713IV11fe4/hh8p/gX8JqUN0+j+c+JfyG+i/Ix
8p2uh916LL+DnPPmqbTuv+LbxXe7/D/i28S/xLp3o199K3ktypunIR86T3X9
6nvIQ+cpmDPuPE7nV30LeQ3q34LjitP+mO9yflZ8M61r+/+3+EbxfZizFvwv
8c/Fv8bx3oN12S0fOk+h/flTfK34fuRrw/8QXyP+I/rrwM+IrxY/hP2vi/1h
t3yKc+vn/EG3rvoq8jo4LvWV5HWxD+Y/kgfOU9Bj+RXk1vM73PefFl8ufhTH
VR/96h+J/4J8E/hv8F+Rb4LjYtd8Y8p/SG49p+AnXQ8795xyPeYnXU9jHJf6
Itdv+YXip9w8v4p/IP478s3gv4jPF/8L18MD6Df/kzxwrj0tKP8uetQfhP8s
/o74WfQ8BD8h/rr4RXy9fQz97Jp/FPvGnvH3FLgO2TP+HgTXrfpc8Uu4TlpS
fi7y5iH5BfKA/Dy5zT+H/BHKm8ddfibWjbvjfUU8yBHN0YbmMddca5ePOT8u
Pl08pJ4YeeD8mPg08XiOaJ7H4T+JTxVPzYHnjcOPik8Rz5QDz/PHuuyWVz8i
Plk8C+Vj5JmdHxafJJ4tR3R+n0SP+kTx7Mg/SfmJyLMfonwa+UF4jhzRdWX9
6uPFcyHfHvvPnpokn5Pc8i8hnwKPO9f77XB9sofYB87nJOf+HM5/FH/R9Wc8
TgnPjXnM94uPFC+M+bvguMwLkcfgz5N3hf8AL4x964oe9RHiVyXJj6B1zb+n
fBr5d/AiOF/Wz56GOUPn2t8Z+8me8bxl+LfwosibfwMvhv5O6FcfTt6Z8sPE
r6Z1U5ynuP5h6Elx/cMwj88/h3zc5Z9D3jwgL0IeI7/K+dfiQ2ndzvCvxIeI
X+PO1z74te587YUXd+dLfbD4de46+RJewuX3wEvmiL4vWP8eyrPvpnwW6tnt
euw6UR8kXgrrdqH8QHLr2QUvTeuGzq0n7tyuE86XIrf+AeRdKN8fPfx5al6K
PHSe4vr7Yx/Yd4r3FE+gpwd62DOeNw7/Ap6OvPkOeAXM3x39OyhvHiNPON9O
+Uzk28S7it+C/e+LfnbN94Fvhd+KfB/0bHU9nO+CvPWEznXO3i5/C3noXPen
F3yLeEfxisj3xXXCnop1U+AdxO/A/vehfAfkU1y+PfJxeCq8nfidOaI5+lJe
vRJ5nPwO8pC8InkAf4K8H3wz3Obph/3fTPl4knxFt656W/QE5Jvgldw8myhv
HiOv6HyjeBvsT8bfgcA/h1fGPj+DfvVW4lWR7w//TPxR8erID8Sc6o+I10B+
IOUfQZ59g3hL8ZroGYR5zGs4X0/5VPJ18LtxvQ1Cv/qD4vciPwRzqjcXr4P+
ofC14s3E6yH/HHrM65LHyOskyTdBj/YPo3wT9LCvEW8sfj96hqOH3fKh8zit
a16PnPvrOl8t3lC8PvptXfY4zWl+P7nlGyAfkq8Sry/eEPnh6FGvK94YPhK+
UryOeFPM8wJ61GuLN0PefAW8uct/Cm+B/XwB/er3kY+CfyJeS/xhXD9j0cOe
8fx57L96TfFHsC7n1Vs6X075VPJl4jXEH8O64+BL4a3w9Xkc1mXnOdWrk3Pe
3NZVXyJeTbyNy38Mf5zWDcjbkMfIW/9HvjXNyXk/v3pV9Ke6/qroSXX9VZBP
cflK4m3h4+GL4U+gx/wjeDvMMx797BnPt3f5J8gtfwfyKS5fkZz7bxNvj+t5
AvZf/WbxTvg8mkR59Y7OPxT/n3gX9ExGj/qN4l2Rn0z5G5E3j5F3dr5I/Ab0
aP8U+EL4UziuKehn53nY9f7L8AXwp5E3/wDeDf0vo1+9Arkd1/viCfGeOC9T
4e+JlxfvjfM7Df3slo87t+OyfDly7lfvRR6DlyWfBp8Pt3WnoYede+a7HvN5
rsf8XXgfHK/NyZ5Kx8Vu+xl3zudFvQz5ZOovg3n4vKuXFu+L8z6F8qXRw/4O
5eM0p3px8YHIv0J59QHkMfi15K/C3xa/Wnww+l+DvwUfgn14Df3qxcSfpXwI
LyL+HPpnUl59qPM3xa8SH4aeWVjX/DnywLn1WL4wOefziY/MEd1/nfLqzzt/
Qzyv+AvoeQP+unhu8TGY5y30s2v+TeyDei7xseh/k/JZxCfA51M+s/jEHLi+
KR+IT4N/CJ8Ln46eDzGn+sX0WGwGfAl8jvhZ8dcx5wr4bPE/xd/Gca1GP7vm
V1H+jPg78DWUPyX+HtZdT/mT5Bvgs8R/Ff8APZ+hR/2E+CLkN8Jnwj9EfiN6
1A+LL4Vvp/wB8U/Rs5Py+8l3wV8T3ye+AT3fwGfAP8P+fIN+ds1/DX8V/jny
X6PnVdfD+b3IW08I/1J8I+bk/JfIs79CeZ5nOnwTrRs61/tfufxGcsvvFt/s
1lXfRW77Zr7J+TTK8z5PhW+hfdaPKeLbxHfi689++GTxLeJ78HX7R8zDnvG8
UMyvvln8S/QfwNdz9Y3i+zDPj5RX3+v8ZcrH4XHnIfpT4J+Lf4V9MJ8E/5ry
qc4DHK/lN4h/A7d1zb8mD+HryQ9if8y/Io/B11D/Ecqb68dhyq8S/xZ+FD5R
/BPxA+g5AZ8gvkz8EI73F/Sz6/2f4ePhh5E3f0l8qfhR7P8v6Ff/WPwn+EnK
m2vPr/AXxT8SP4H8Kfg4+M+4fk5hP9m5f5zrOYl5zI87H0v5FOoZ63pszjHi
H4j/hvzv6FGfJ34G/hd8NPwPfF6YjxJ/V/wv/PzzN/rZk+X/JLf8XPHzWPc8
9odd5z+H61N9tvhF7P95XM/sAfIZv6fCLyFvPS+4HvORlOd1nxefJR7L+f/n
NL9M81t+JvJxl5+JPPsIyltPQM796sPFZ4iHOfF8VOyzeeB8GOXTyJ+T+1PF
M+eMfq8M8T6H7JoP4EPl/njx3MhnzhL1mOciD5xrTya8D5j6OPG8mDML5dXz
kFv/WPKslB8tng/7lo36zeMuP4o8G/xZeH7qUR8CL4B1zQfL/RfEC+G4smNO
84LOB8n9keKFsT854APhV+WMHjfOgX72TNQz0PVkp/xQ8Wuwbh7sA7vOn5vy
z5LngQ+Q+0PEi6MnL9Y1v5bc8gPFS6AnP9ZVHyBeEvuZH+/zxq7381G+P3l+
6u+P/rjrNw/Rw/nryGPkxZ33l/t9xUuhvyB62DVfAP6M3O8jfj3lY+SlXQ+7
9YTwXuJlckY5zvdCv7nleyIfI+8HL+t61HuQF8Kc5mWc96V8SN5H7ncXL4/j
Kox+dsur95b73cTTXb6X3H9a/AZcD1dhfnbLx51bP+crkMed876Zp7v9MU84
70n5kM6veldatzC8h9zvKH4z5i8G7w6/BcdbDP3qbcUrIX8d5dXvILd8G/E7
sW4JeDd4ZeRL4HjZQ+rp5nquo3xr5AOXf0y8Crwk5R8RvwvXYSnKtyQvjeNS
f0i8GrwM/Gm530z8HvSnw5+C34s5zbvK/Ybi9+N4b4J3gdfHPt+EedTrizdE
/mbMzx4ir7ed5X5d8abI34oe8ybOO1E+BR461/wtLt+EPEbe2HlHuV9bvBn6
b0OPei3xB5G/A94B/hDyd2Ae9ZriLZGvRPnq4o/AK1O+sngb7E81yt9JXh3e
Hv44esyfhLfFPObt4E/kjL5fVMfxqlcir0F5c+7R+3ekR+twXte7PT3ap4zn
eeK42DOez0n5W9Oj85DxfEjKm6egx/K3kNfC/OYdneu+3JweXUfafw962FNo
XfY4rWveiZz7OzrX83RDevT5pP33oYdd8/fCW8v9RHr09Szj+ZDwVnK/fHr0
9TLjeY/wx+R+ufTo+4Ducz34o3K/bHr0fUZ/Prkfx8Xu82XI78f86qXTo+97
6g3ger1elx79nKX9TdDDnvE8RpcfRB441+NqhDnZdR8aUr44OefN40nyA8lj
5AOct6R8CvnDcr9YevRzq87ZFP3sKdiHEF40Pfr5PU77Yz6UPHQeYn/izgM6
XvNnybl/CHmMfHCSfBHkYy5fBHn2hyjP/fp1sFB69PtNiP3RjwfkfsH06Pcn
PZ5m8BZyv0B69Hue7ltzzMPu8/nSo98X1VvAm8v93OnR79na8xB61HOlR7+v
x+GWz5EePU6Q8bxNuH59z5wePa6jPa3Rw675Vi4/idzyaenR40wh9TSFT0G+
NXqaUj6eJG891q/ft1LSo8fbNN8G1wM7r5vxfY68DbwxfDr1xOCXEtHjpupP
whvJ/YuJ6HFc3Z/26GG3vLp+Xz+fiB631nwH9JjPIbf8mUT07zza0w3eQO6f
TkT/3qX5HnD9OeO3RPTvafr52BP96icT0b+/qfeG3w9fhK8/5vXgH+LrWG/0
qx9PRP+erPlnKP9TIvp3bPUBlDfXdfvjvLCnoEe9Lnw58s+gp67r8Xnr6efy
S53XcT390FPH9fR1+aXklj+YiJ53EKfjVf+RfCD2x/xTcssfQD50+QPIhy7/
QyJ6HoTeH0T57xLR8ykyHheg/NeJ6Pkm+jGU8uprnNeW+/sS0fNr9P8fhh71
PYnoeUD6MYLy6p85v0/ub05Ez6fLeFwSrj83b0xEz2fU45qAfvaMx0Oxz+qf
J6LnS8bgAfke5/dQPiCvBd+Lda2f3eZUvxu+D/mX8H1H/bNE9PxQn1+fiJ5P
GtBxmX9FHoOvpfwkeE34N1h3EnrU1ySi5+36/Gryl+E14N+hx7w6/Htchy+j
X31VInqess+vJJ8Mrwbfj57J6GHnHvVPE9HzsjP+nRd+F/xH9JhXlfvLEtHz
5fXzbjpcf99bkoiev6+fv69iXfXFiejvAzQ/g/Lqx8kD53Hqqex6XkWP+sJE
9Hck6rPgd8JPYp5Z6FFfkIj+rsXyoXNddyblPyC3nkrw39y6lSjPrr+fz09E
fyeU8fpR8IrwP/D1eS761eclor+j8vl5yKcmyf+BdefguNh1/tmUf5d8DvW/
iznNLf9mIvq7sYx/j6a8+l/klp+TiP4OT++/TfnZ5O/Ab4efQ8876FF/LRH9
3aTenwe/DX4J+XnoUX9FXP8eVP19+K3i08X171z1uD5AD7vl1W+Bx5G3nltc
j7k+jjMtEf09bgr1q09ORH9/rPmFlFdPIw+c6zwLXD7V+U3iLyWiv/PWno/R
oz4uEf0dueaXUF49h/P/UT5OfiM8F45rCfrVxyaiv4OPk+vjbmMS0esBaH4p
etRHky+jvHkc+dB56PrV87j5zXM7r0B5Pq50N4+5Pq43KhG9vkIq5gngwxPR
61Vo/lPKP5eIXldDfSW8PLwoeszLwfX1SNLggXPNr3D5os718dbB4sXRswZe
Bq6vB5OJ/Hq4vn5MZnjgXPOrsf/s2r8K32fZ7bjUS8NL0nGF5CXILT8gEb0e
TyrWTYH3T0Sv65MCt/wz5GvgpeBl0LMG66r3I1+L4zW/njwG70P59XD9d4Ve
ieh1lXT+z9Cj3iMRvR6V5j/HuuwpSfIJ8tC5Hs8Gly9PbvnuyIfwuPMA83O+
PHlAXo48Rl72P/Lq+rHO5cs4139f6eb6A/jTmCdG65qXc67/HtMV+xlg3/Sj
OLwC9sFc/52pcyJ6PTPdl43wa+A3Yf/NrxbvkIheTy7j7xMwp/qTiej18DS/
FV5M/IlE9Dp/mt+OfVZvm4hedzCFvCi8issXgVfFdbUd55Fd89vweaH+eCJ6
3ccUeJy8Krn1tyG3da+C3+XmKQyvRvME8McS0etoqu+EF4LXxNcN84Lwu/F1
xrwAXF9/NAs8dK75L3Bc7Nq/w+XvJo87T6PjKkBz8j6zp9K+qT9KznnzlCT5
Gu68sMdx/XC+OnlAXs15fsrbdRiDP0K+jfIPYR/i2J8YeU3ywHlI5z2f6zHX
f3d/IBG9rm0KzleM/B5yyzdPRK+nG6frIQ+8NvJ2PbDH6XpgD+m854bXoeMK
yWs71+cTNE1Er2ecQvOY1yWPkddJkm+MHu3fRfnG6DG3fCPkQ3joPHD9DRLR
6zfr/d3U34Dy5jnF6yWi18nW3r3oUa+biF5vOyDPAW9M+dC55r6kfB1y68ku
XjsRvV64/v/7MI95E+fZxO9NRK+DrvvzNXrYNf+VyzdznlX8zkT0fgjacxg9
7Jo/RPlK5IfhWeCPU49+6PNXKiai95fQ834Ungn+JL4+HMW66v9LRO9novlf
KK/ehdzy6YnofWMynvdFefWnyQPnOv9JnC/1BHoCuOXLJaL3sdH7v1F/Ocqb
p1E+JE8VL5uI3m9H5zmNfvXSieh9fjR/Bp4C74u8eRzeD/twBv1xyrOHlE+l
HvVSiej9jiwfOtd1f3f5fuTWX4Lyf8ADeH/0/4Ee9jityx7SugH1s8dcz+/o
Ub8mEb3/mN7/k/JFxZ+Fn6W8ueb+pnwR8rM4LvMhzvX5YYUT0fu2ae+/8Evw
YZjTXJ/3VjARvd9dxvPKsK56gUT0fnpx8gvwFygfg+dLRO/jp36R8ubacwF+
Hj4a+QvYB3ZeVz0vufWcg4+hHvV/xXMmovef1OsthvcDZ9f8ZcrnIOe8eRz5
ODx7Inrfy5D8H/hEyofwbOTaH8CzkgdZo/00n0Bu+bRE9P6l2ptC+VTyVMqb
B8jbPPFE9P6rMeQzrkd9HmQiel9ZzafhfdHVL5WP3i9XP7JQ/iJ5VqyrfoE8
G+Y0n+H8b/Gz5aP3N9b/Pzf8L/jrOC5zff7o6fLR+3LrfIXgf8Dfw3kshHnY
M56XhfnVfysfvW95CLf8KfJClD8qvgRzXov9UT8ivhTHZX4GvozyIfwweXH4
7/DlWLc45lE/KP4JvAT8NPxTHFcJ7IP6AfEV8FKUN8/4fRL+G3wl8iXR85vr
8fkVNA/nP3V+Snx/kv6T8FU4X9av/oP4arfur+Lfi69FvhR6zNeQB855XfP/
6l9N84fONXedy68i5/6VSfLfYJ4YrfuL+Nfi65C3+fV54V+Jb8A8pdGvvo/8
erg+z3uv+Oc4rjLoUd8jvgn5svDj8M3Il8Xxqu8W35Ikvxv50OV3im/F/OUo
vxM95jHyzf+R34z9sXWPiW8S3438/9Cjvk78K/jt8J/gX2PO29HDnvG4s8t/
5fyo6zE/Av8G+2Z+GP4trsPbsK76GvHvkb+d8urfOde/W1gt/gN6KqJHfZX4
fuQrUn4V8uwHKZ9C/iP8AL4/Wj97CuYJndvxqh+A/0jHG4evFD9Ieb3dDz/k
8j/AD2Me61dfQX475T8VP0Jzqn8PP0r5kPwIeUDO/TH4J+QVKW+e4vLLyW2f
v4MfoR79+Bauc6ZRPzvPqX8ns0z8GOVj5D85/5rymahf/SPxX5GvDNe/21kk
/hvyVbFv7JqvQvmF5FWxrvkpcssvQD7V5Rcgz65/7/SB+Gn03IUe9lSakz2F
5jT/jZz7TznfS/lUcv37rvfEz7h52Hl+89/JA+c85x7XUwXHxZ5C50t9Prn1
7Ib/4ebfTflUl5+HPPfsgv/p8jvhf9H1EDpPpTnV3xY/C7+L8uYptD/mf5OH
zuNunrexLvsXrsf2Qf0t12/5OeLn0VOD8rPJa1J+pvhFfF+4G74Dfgn5uzG/
+gzxWO7ofi18vWIPkM94fE78FfE48vegxzwkD8iD/8gH6K/l8jHyGPnlXP/f
t1E+pB716a4/dB6j/TGPOd8qPlE8M3rqYl3zTOSBc/2o4/Jpzre4HnP9e9EJ
4llwXLau/n3pePFsuaPzUQ/rsifLZ3Wuf+86VjwXehrAP4fnzh1dhw3Qrz5K
PB/yjSg/Ujw/vAn8M3gB9JhvgBfMHX3eNUG/+vPihZLkn0c+JUm+INZtTPkR
5NazHl7I9bBbTwgfLl4Y+9aY8sPIuX8YetjXiQ8VL4L+ZvC18KKYpxn61Z8V
L5Yk/yzy7GvE+4qXRs+j6GHX/CM4Lna935LyvcWvh1vPavGe4uXQ0wrrmpcl
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
D/9HPF38aRzXAfSzW179rHg58Z7IH0SPelnyQ/C/xa8X74N9PgL/C94XXzfM
/4T3w9fJI1hXvbT4M0nypZFPdfni4oOw7nHKqw8kt/w14oMx/wl8frGHSfKD
yGPkA/8jPxDn5Rj8D/GrXX/oPFl+EHmMfKDzM+JFxJ9F/8/oUS8s/hzyv1Be
fajz38ULig9Hz0n0qOcXfx75U5TPR/4b/DR8JHrMfxPPIz4a+/87/JR4LvFx
OF9/YF12zZ+BnxTPKf6Sy/8KH4/rxPwX+ARcb39g3V8on+byOZC3nhCeXXwi
rZux3/BJbt2fKZ9K65pPcH5CPKv4y5jnL/hx8SziU/Dzxt/oV88sPhX5vymf
Gfm0JPkpWPcv+DHXY+secz0+bz1/uvxk8sC57RvnX3bnkZ3P+0/imbAu54+K
p4pPp+OKkU9zx8ueQnMeEU8Rf8XlD8NfdftzmPJpSfKvuP0xn+78kOuxedRD
8Rk0T+jc5o/DY+IzsW+cV3+N3PovlbmSP0v5i+Kz8Pl7lvIXkTe3+S+Q/0N5
8yBJ/jXnB8XPic9Gz7/oYQ/Qb/l/xOfAz8F/FD8tPg89Yfbov7Nn/NyW/Ur+
lPh8eBx+QG5/EV+AnjT0qJ8QX4R8JsofJ89M+WPiH+L7e2bK/0SeBb4f/hF6
sqCHPUb9P8jtEfElyGdFj/nHzr+X28PiS3Fc2eDfwZfhesiGfvYQPerfwpcj
rx46DzG/3n4D/wR586/hn+J6tuNVP0Ru634ltz+Kr8LnRXb0sKdg/rhznlP9
AHk2+D65/UF8LXpywPfK7XfiG7BuLsyj/i15bviX8M/weZ0bPezWE3eu6+Z0
+Q3k3L+ePEa+7j/y63C8OSj/Dbn17IGvdz3s1hM6D3FeOL/O+W65/QrHG6fj
ZQ/Rz/kNznfJ7T7xz9386nvJc8F3yu2X4ptwXLnhX8jtHvEtOC950M9u+RC+
W3wr+nNTfjfycdevvvk/8ptxXHZd7ZDbneLbkLd5tsvtDvEvME8+9JvvcL6N
8qnwAL5NfBfy+SmvvtP5VrndKr4bPQXQw275jN8L5XaL+JeUD537/GbyAlhX
fRN5Qcqbx5Pk95AHzkM6LvPd5IHzgPZTfSO59WyG+/5NcJvTfKPcfi6+j443
gK8T/xb5wpRfS34V/HO5XS3+A3qKwj+D78f+m2+AH8DXJfP1crtK/CB+ziwG
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
8a8wz0L0s2t+AeXXk3N+nfjX+a487qy3reV2tfj3yH8E19/XV4nvx7qLs1/5
Pd7c51eIH4B/TPlPxA9i3SVwffxgmfgR5Jehx/wweYz80H/kD6F/qcsfdP6o
6zHXxz+WiB/F8S7PfuXxEnNetyX8J+Rtzpauh/MfI289oXOb0/ILxX+Gr6B+
9RPkln9f/Fd8nVlF+ffIV8P1ca+3xP9Az2dwfRzrDfG/MefG7FceDzPX+59n
v/L43Ovi/1A+Rn7W9bBbD+f/dq6PI84R/xc9m7JfeXzRPKB1zf9xro8vzhY/
53rUZ4mfR34T5WeSb4br46Cvil9GzzZ4M3gsf3Tet6GfXfNbs195XNZcc1tc
/nK+/+9NXc8WrNvUzcP5V5L0N4EH+f9/vjE8xPzW35jycZefjnzo8tP/o3+q
eBzzbIXr4/dTxFPzX9lP9YbwNLef+u8zk8Uz54++323HfrIny2cij8EnUX4H
vD48C/rN74dnzR/9/Gmu/041UTx7/ujn1S+wrvoE8RzIm+u/m40Xz4X8Tngd
eO780b8r7UR/HcpnSpLPRetyPqfz2q7H/D5aNzPNqf6ieF43j3ke5/rvmePE
86FnF3rYLR86530zz+tc/x11rHh+18Pu82PIOW9u5yXu3M57ivM4rjfLjybf
Qf2jcVzmAXled72Z50mSH4V86PIj0R/S9cAe0D7UgudH3s57Lddjrv9O/pz4
VfmvPJ8ygA8VL4L8l5Qfinzo8gPEr8U838Brwosj/w161PuJl4B/D68BL4l5
vkePei/xMsgfoHwP8bLwg5TvLH4j5jmG86XeUfym/NH/f5zyHchPUH978p/h
+jyFtuK3o/8UXJ+n0Eq8MuY5g371x8SrIH+G8o+IV4X/Cb9Lbh8Ur4mef9Cj
3kK8FvL/Ul79budV5ba5+D3oOYce9SbitZG/QPnG5BfhVeS2oXg99FyGV4bf
j/N1Gf3smr/k8vWc3+l6zCvB6+Pz9BL61euLN6R1Y+QN3Dzsoeuvj/7Q9dcV
b4R90L/rs3wd8gB+h3g18ZboyQbX59FUFX8M8+SA3y5eRbw1jkv/Pjlwbnn1
2+BtkLee21yPz1uP/n1y6Nzm5HwrN7/5Y0nyd4g/jn3ISfk7MCe7Pl+ponhb
9OSC6/OVbhVvjznzwvV5WLeId8Rx5cO67JYPnev9PC7fgdz6b6I896eLP4X5
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
mtnXRxPxv8RXYH8odtjD+uXGG4v/Kb7S7LDb/io591fEV+HjcSj1V9CzfyT+
m/hG7HyDHXZ9jDb9BuONzI7zhvBNeF7OG4j/Kr4Zr7u7LrvrI8Zf/Hcp9WfJ
R8Prw7eY66r/Qv4NvB58qzmP+hnxbdRH4KfFt9N9U68L30G9Dz9FPgbXVT8h
/iN8HLwO/Cecx3lt+E78uDEO++rHxXeF9MfRR4X0O3HdsfAPzc5YPC92d37u
d5JHjPP9qWV2nNeE7zb3v6Y5j3u9aprnxf0R8T30vNz+YfG9OM9Y6g+j901/
CL1n+oPi++Dj6Tz7xffDJ8JrwA9gfyJ21HeLH0Y/hXr1Q8ari+8UP4qdadhh
18dU0x8xXk18m/gp7MzCDrs+ZlK/WfwMfA78A/gv2JmDHXZ9zIa/L/6D+K+m
rwr/Da+X21ffRD6Xeue+6TeSz4VXgZ8zO+y8U8XszDH9b+Z5VTY7s7Gjvl78
vDnPe/ALdB59VBJfK/4H3p/nY1/9e/FL6J1XhF+mPmJc354HrwC/gn4eft5n
d+dx/Rryebiuc973yC8ZL099FO2UNztzqf8uZL+c+Grxq/R89VEW/id+PHT3
hz2KdtRXiF+DL4CXgV/HjvN34TdSB7//4/wd+M3UwdeHdP42/Fbq4Ot1L8B5
1JeL/019xLjuf4vXhd09L9cvI/+W9pfhus4jxvn9yvlNcz+d3wjpl6KPmPM4
9+n1dX6D3O0vIef9BeK38fG1kPpvyRfBS4vPEb+HnWXYYdfHUtP/a7yU2VmK
nVJmZwm8JPw+eucl4A9wf5ZgvwT1kZDe7SymfvZ/7M/CPp+nOPwh9RHjHvZd
P5PcnVN9uvgj+DJ4Mfhjc5/Vp4k/CemnoWd/i3qfvKj4FPHnuD8rsM+uby/H
82L36DzOn5nrqk8mXw4vAud9fbwpPkncT/O/51GfqJYmeHsF9RPRsxcWHy8W
CzursKM+Tiw2+lXUj0PPXoh63lEfKxZNfcS4PlaaPja52x8tFgf+Hbyg+Cix
uNhfgx31r8VeRr+eevUExgtQ75O/AU+I57Ue++z69jo8L3Z9rDX9y+S8n8B4
fvGvzL4+8okPFnsN59kEf118gFjyNPh6Mrguu/abcU527X4wfTJy3k/6H31S
nJ/P0w87Hq6rj7zin4ulws42eB54apxzG/bV+4ilRb8d52f3Qvo05B55auO5
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
/sj45ujga089xU4B+A/R+JpdWYL378LYV9ev8RXJgr9Ph/dzdu0Kmd4n98i9
/+jV9VHQ9M8z/69visbXOjM76iPF42GnBPXqcY1vFB8u/hJ2SmGHXR8lTR/f
+AbxYeIJzA6769XXw19G73bWmx3uv0bvmf5rs6+PddTzzjqzU8L0CYyvFf9S
PDF23oZ/Hx18bcMkeH94F/vq+rUNk6J/l/qB6P2QPgmu+w71A8jdzpro4Gtj
psFOJeyo69fYTIf+Pep7kleGfyfeQzwDdqpgR12/tmcW9B9Q/zF5NfhqeFbs
VMMOO++sNjvOV5mdD7Cjrl8TNVtI3zVkf2V08DVj82KnNnwF/HW8XrWxz65v
f2j6vOSub4veI18eHXyN3Pzmus7zkbu+NXrP9K3Rsy+jnneWmR13nqXRwdem
LoS+LnacFyT3jeujjukLGF8SHXzt8RLYaQJfHB18jfFSuM9Nsa+uX8v9bfTN
qFcvbXwR9RG4b9zHPvelyV1fB71n+trk7roLxWuJl8FOC/gCeFmcx/m38HL4
+aIFrqteU7w89RHj2jU3fTlyj7zsf/RlzfmdlzE+X7yG2ffh1XEej67rvJzx
edTzOefCK+D5un129/rq/86BV6TX14NXI29O/Qfilcx1nVc0z0tdv9fDBzh/
W/js6OB7XlRH3w47zquR+8Z5Z5bZaYsd9fJm3zfuhfTVjM80O85nwGvg/rjz
sOvbbUxfndz1+j1NaprnNR1ey1x3OvW+6cug90xfxuzrYxr1vKP+tngd9O2p
V69tfGp08L1j6mGnI3bY9dHB9HWNTzE7zifD6+M+d8C+un4PnYZ0XY+8gfFJ
1EfonOr6vYQ+Qt+J+rfIO8MnwhtjpzN22HlnotnpZPqPcB86mr6R8QniRUP2
x4sXEW9qzsMe1jcx51EvJN4c1+1CvXoz4+Oig+/91AI7XbHDHtbb/bHRwfeW
aoWdj7HD7mGf+5bGx5gdd54xZqeL6Vsa/0b8dfG22PkEO+r6vcPao+9GvXo7
46PFc4h3xk5P7LDro4fpOxkfJZ5F/BPs9MEOuz56U5+ZvA98pHgm8e7Y+Qw+
Ijr4Xmk98P7zOfbZba/f060XvC/1KcW/wHUHUq/+ufHh0cH3nuuHncHYYdfH
IOqTkQ+GDxOPLz4CO9/AvxaPJz4Kz2sM9tnD+pHkvvEXrxP1ccndzlfRwfdS
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
h9edbV9NPDVP+H3pvqr5EuvE73eJdTrKfkBGfzG8P7ymPJ+U3g9ei/susr8J
Xpt+Ff11eB94PXauZif49fBTue8u++CNzF+TfSr+Krw7vAmf8/X0V+hN+X1F
f5l+WvXcfx7r9byP+lHSf9k60RfBr4U3Y6cnfSH8GngLOP6fyQ3sB78afib3
N8j+au7zZOxb8H172r65eNx35T7H9l25z8nYN+fz7GH7ZuKpeSLPM/oZ5gus
E5/zAut0l/2VvE8i93kJ3gl+Nju92AneEd6S+16y7yDemz4f3h7emp1+9Bfh
7eAX8vn0Z189a3+BeGoeTl/btzZ/AX4O/Ap2hrAT/Gx4J+6HyT54R/Pn4WfA
r2ZnNDvq4dxh+67m86xzBzvzrDPK9l3Nn4OfDr9GOuE8C28K78bnfCf76nr/
Z+BN4NfLPhHvbh312NF9N/On4afCe7Azhh31lP0c80TuGf16ce13N38KXh/e
m/3x7KiHM872vcyfhNeF38jOXewErwG/mftJsg/e33wu/CT4IHbuY0c9nHtt
P9B8DrwKfDA799NnwyvBh/I5T6M/Aa8IH84/x6bzfdXjPvgs+gjuY2eWdXwf
O1P5ParHe+p+mN0/+tCMfTneJ7H7lGNffSa8DHw0Ow/RZ8BLw8fwng+zH/w4
+FjuH+b91RN2dD9GPPZLiT9MfxxeAj6e/UfZUQ/nEduPM3/MOo+w85h1Hrb9
OPNH4cfC77JO8OLwCfa+0e8yfwReFH43O4+xE7wwfDL3j8s++CTzh2Wf0lPz
hH3dTzJ/yDrxPg9Z51HbTzJ/0DrRH6BP4c9P/B6DF4Lfk7EvxL36dNlrZ7p1
HuHPoXr8HuO+oPgj0i/I91WfJnv93qdZ52HZH5PRnwo/WBx/frAzjx31cJ6z
/Szz++F/weey8wL9Pvgf8Kf5fOazr37k7wP4fIL/Dn+G/Rdl/zv30RPxp8zv
hf8Cf479BfR76PN4nwXsqx/5+yTbP2c+Bb4X/gI7C9kJ/jP8Re4X8nOpJ/K+
wX8Sj53J9PnSCX+dRH9J3jeH/iN8Qcb+R+6jJ+JZ/d3whbzPy7L/XvwV+t3w
nfBX2XmdneDb4Eu4Xyr74IvNJ8K3wpeys4wd9ay99yfAN8PfYOcNdtQT9nW/
zPwu+Nfwt9h5kx31hH3dv2k+Hr4evoadD9gJvg6+lvsPZL+Oe/Vx8JXwjex8
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
nLEvnNH/WvbaCV4IPiVjXyij/xW8APw+dnawEzw//H7ud8g+P/fqX8LzwB9g
5zt21MPZRd8EPwr+kO2/oD/M39ffsf+F7HNsn8AfZWe37P8r+v98j+yjJ7b/
B/4Y/Qf65/D98Dns/MKOejj7bD/bfCP8D/hT7PzGjno4v9r+SfPP4L/An2Pn
T3aC/wifz/1B2Qd/0fxT+G74QnYOsxP8e/gi7g/L/nvu1T+B74S/ys5/7ATf
AX+d+6Tc/9sHf838Y9mn4h/Bt8OX8HtP6RvoS/n3dcFT+jb4soz9Nu7V18te
O+utk9h+qXhqHp+D7pfY8wm+lfvE9lu5V18H3wx/g514/7XwL+Fv8z55eZ/g
m+DvcJ9X9pu4TzP2b/N989h+hfka+Ofwd9nJx07wz+DvcX+07IOvNP9Q9ik9
pX8Kfz9j/2lG/wP4J/BV7ORnRz1r7/3V8I/gH7BTgL4Kvh6+ls+5IPvq4fUx
tl9j/r51jmHnfesUsP0a8bhfC1/H+2t/LTvq78le77OSvt7uE/xD+EfcF5R9
8A3iqXli/Q/EY+dd+DvwL9g5lh31cIrb/nPzd+Ar4F+yU4Id9YR93W8yfxu+
DL6FndLsBF8K38p9adkv5V59BXwR/Ht2KrIT/AX4z9yfJPvgP5kvh8+D72On
Kjvq4Zxs+73mb8Gfgf/GTnV21MOpZvtfzd+0TjV2gj8N/z1j/3RG/w3Zayf4
XPhf3NeQffA/zZfB58D3s1OTHfWsvfeXWif6EvoB/r6owb56fJ6632/PeYnd
p5rsZ4vHzmL4E/CDdp/X6YfkPuG8Bp8J/4f/+lWL76uew+ej+8PiqXma0f/b
/FXrxOfzqnWq2/5vez7BZ3Cf2H4G9+qvwB+Gp7Vyf30ddtTDqW37xPxl+IPw
o9ipy456wr7uc8wXwafD87JTj76Qnq9W7vOJvoB+dK3c76se31c9h/fJMdfP
u0D6qdxngd3H93ntOUTPY/4S/B54QXYa0OfDJ8GL8p6nsq8eXjeyfRHx1Dyc
hrYvbP6idRqy86J1Gti+sPkL1mnAzgvWOUX2d2f0n4ePg5dkpwl9Hr0Un0/0
5+jH8XtvwvdVP/Lft6M/Sy/NfWN2nrWO74+T7yWHPpadVL6v6MeJJ+KlMvaj
4WX4HJrI/g7xpvRn4EPhFdlpwU7w2+Ancn+27INXMX9a9ik9NQ/nLNtXMX8K
fiu8Kjut6E/Sq/G5tWJfPbxuKftbxGNnLnwAvAY757CjnrWvLh73/eC1eP9z
ZR+8pvkceE94Q3Yups+GXw9vzPu0ZT/4tfDTub9U9sFPE0/Nw2lv+6bmT8C7
wpuxczl9Fr0573M5+8GvhJ/J/RWyD95CPDVPrN9FPHZmwjvDz2KnAzvBO8HP
5r6D7DuKd6TPgLeFX8jONewEvxh+EffXyj54G/PH4RfC27LTnf4YvR2fT3f2
g18Aby/7HPNwutm+nXgi3tb8UXgL+JXs92UneHP4Vdz3lX1z7tUfgTeGd2dn
IDvq4dxq+27mD8MbwXuwM4gd9YR93V9v/hC8AfwGdm5jJ/gp8F7c3yb7U7hX
f1D2qfgD8Lrwm/h9DWE/eB14X+6HyL4O92nG/ia+7+2yry0eO9Ppfa2jrp3p
1ok+zTrRp9L78XPdzr56eD3Y9n3FU3N9nlPtPtHvh9eA32yfK/jJ8IHcD5d9
8FvN74OfBB/Ezgh21LP23r/XOsPZCV4FPpj7EbKvLD6Sfg/9dnaiT4FXhA/j
c76DffXwehR9Mrw8fCT3o9mJPsJ8ErwcfBT/PuFOdtSz9tpPzVPeU/cjxOP+
BO4T25/Avfrd8DLw0eyMYUc94f3jvrT4GPpEeGH4ZHamsBO8IPwe7u+RffAp
5hNkn9JT84R93U8xv8s60cfT7+VzjvdUP/J908fR7+N+MjvjrKP7Y7iPnRzz
I9+H7AuIx85Y+v3SScTvs3uOtc4k299rPsY68T7B8/N9fZ8/o38nPB98mn3v
6vFz6X6q+Wh4Xvh066hn7b1/BzwP/AHrqOtzHkV/0J5z8KPEp8g+unZG0h+y
zkjr+P5Be57RHzAfAf+7CP7+iJ1p7KiHM9X2M8yHww/Cn2BnOjvBD8Bncz9d
9ge4Vx8G/xP+JDsPsaMezoO2n2s+FP4L/Dl2HqMPoc/j76/H2Fc/8vdJst8n
rvvoScb+OfPb4T/BX2RnBn0wfT7vE/02+kv8c34G31c97B/nnwPBf4QvYP9x
2f/IffREfH7G/gfuE9vvEY/3HATfAX+dnSfZCb4dvpj7J2W/nXv1gbJPxW+F
b4Mv5ed9in31rP0S81vgW+HLrBP8a/hy7p+VffC3xFPzcJ6x/ZvmA+Afw1ez
s5Cd4B/BP+B+oew/4l79ZtlrJ/gG+IcZ+w0Z/f6y107wdfC13C+SffA15v3g
q+Efs/M6O+rhvGb7j8z7wlfCN7KzlB31cJbY/jPzm+DvwL9gZxk76gn7uv/c
/EbrxPvcaJ0ltv/cvA/8DfhmdpbTe8OXwbfy53AF+8GXwrdxv0L2S7lPM/Zb
+b7Lbb/FvJd1ot8g75tDT83D67dkv0Rc99GTjP1W857WeYudntZ5U/aLM/o9
6NvtntfTd/Bzxb56yn6OeThv0LvTv+X+DXa6W+cNvm93u4/uX7d+Ir7dvBv8
Ffgue87BX4Z/Z99v9F3m18leO9dZ5y3ZL4Dvpr9NvxY+D76PnVXsqIfzvu33
ml8Dfxr+OzsfsqMezge2/838aviT8D/ZWcNO8Lnwv7hfI/u53Kt3hc+CH2Jn
A/0q+t/8+dnAfvAZ8H+4/0j2wQ+Lx/1j8H/5vh/L/jF21K+EPwTPqZ376zey
E/xB+FG1c3cbZf8g9+pd4JPhhdnZyk7wSfAi3G+V/STu1TvDJ8CLs7OD3gk+
Hl6ydu7z2cm+enj9re1LiMf9OO4T24/jXr2j7LXfAT4WfpzdJ/gYeGnud8p+
DPfqV8heO8HvhJfJ2N9p/bgfzX1i+9Hcq18OHw4vz84e+mXwIfDKvM9P7KuH
1z/yzyv1cH6wfSVx7Vc0v1T2qXh7u0/st7f77LF9JfG4v13uGb0dvYp12sk+
zdjHzm7ZD7Z+OG3pVawTfBD8JHsO0U80vwTeH16TnV/YUQ9nn+z7wmvRf6Vf
TK/Nzq/sBL8JXidjfxP36hfBb4TXZec3dtR930f8N3obeC/4Kez8wU7wnvCG
3P8p++ANzC+UfSp+AbwH/FT+/PzFvnrWvpF5a+v8yU7w6+GNZZ9jnsjnin6q
eCLeyPx82afi50k/R/rn2X1+t/2p4qm5fi/n2X2in2ud+L2fa51fZd89o38O
/Br46ezE70Vdv9/op5m3gl8KP5+dnPK5fw3eHt6a++Bx3078KHpL+IXwtuwU
oJ9Nb8fnXIB99fA6v+3bmp8FvwDe3jrqcZ9jHs7Rtm8nrv225mfCz4Vfzn5B
egv6FbxPQfbVw+tjbH+5eGqeyOdqbp34PJtbR/dnwzuxU0j2Z8I704vQm9G7
sFOEHfVwCtu+s/kZ1ol+OrwF/Co+n/i+p9G71s79z0ni+6rnsJNDbw6/Wvqp
eFd73+hXZeybcZ/Yvhn36k1lr52m1ikk+zMy+k3ofn917TSxTvTG1inETvDT
4ddk7E/P6J8q+1S8EbwpvJt8Xym9Cby7/Jwk4t3s50ddn0P068wbWic+n4bW
KWT768wbwOvDe7NTgh31cI61fS/zU+A14DezU5Zenz6Az6cs+8GrwW/l/njZ
B79FPDVPrF+NffV68BPgI9k5mZ3gx8NHcX+y7I/nXr0uvCz8DnaqshO8DHw0
91VlX4Z79TrwUvCx7NRgRz2c6rYfY14bXgI+np2a9Fr0u/ica7KvHt83xzz2
dT/e3jf6OPOadp/YqWmdavQadp9q7NSwju6LwSeyU0P2RcXjc6gOLwSfwk4d
dtSPPEfbTzavBi8Iv8c66ll771eF54E/wE5DdtTDaWD76eYnw/8unCQz2TmD
neAH4LO5b04/Cb4fPpf7FvQT6U/y56QFfx7UU+mcaJ3mvE/0Of9jP4f3aWb7
2eZV4H/K+8Z7Bv8D/hT3LWT/B/fqleH74PPYacVO8L3w57lvJfu93KtXgv8M
f4Gdc9gJ/iN8Pvfnyj74i+YV4d/DF7FzATvBv4O/zP0Fst8lfiG9Av0VdqKX
h2+DL+X32JZ99SP/Pk32W8Xb0svBN8PfZKc9O8G/gb/FfXvZf8N9avuvuU9s
/zX36ifAN8JXstORfjz9Pd6nI/vq4XUH2X8mrvuP4av5vp1lH3yVeVnZp+Jl
4Ovha3mfq9hXD6+vlP06cd1HTzL2a8xLw1fDP2bnWnaCr4J/wv21sl/Fvfpx
stdO8Pfhn8o+eCn6Z7LPMQ/nGtt/Kp6If2JeEv6e9cMpQd/I5xzvo55Kp4R1
rpH9u/DP7TlE32h+LPxt+CZ2urGjHs51tv/CvDj8Tfg37PRgJ/gy+Bbue8o+
+GbzYrJP6al5wr7uN5sXtU68T1HrXG/7zeZF4K/Cd7LTh16YvovfVx/21cPr
3rbfKZ6ah9PL9t+aF4I/D9/Lzi3sqIczwPY/mxeEz4X/xc4QdoLPge/nfojs
53Cvfgx8NvwAO0PpBegH+XyGsq+eSqeAdaLnt068Z37r3C77J6wf97Pgh+z+
wWeKx/sfDZ8Gz1cn99ePY0c9nLG2z2ueDz4VfrR11LP23s8LnwIvxM5EdtTD
mWD7guZ5rDOBneCT4EW4nyj74IXNj4LfBT+WnSnsqIcz2fbFzXPgo+Fl2JnK
jno498v+DvGp9BQ+DF6BnYfYUQ/nQdkPFX+IHv6hVrfBT2TnMXbUw3nU9lXM
/zsqSQbCT2bncXbUE/Z1f5L5v/Bb4NXYmcFO8AHw6txH/wd+M7wm9zP5r1/q
Wfsa4ol4dfPD8P7WT+n94LW4nyn7fvK+0f+G3wivy85sdtTDecL2dcwPWSf6
QXgfeP06uZ8/9oP3hp8i75tD7wVvwL7ue3EfPRGvb35A9vq5gveEN+R+Dn0/
vRH3c9jZL/s0Y9/Q3jd6A/O/rBPvE7wH39f3PTL6f8K7wZuw8yQ76uHMtX1j
8z/gHeCt2HmJ/jv9HH5fL7Ef/Ar4uRn7K7hPM/bn8H3ny/4ydsJZQP8N3g5+
ATsvs6MeziLbtzb/1TqL2PnVOgtt39r8F/jZ8E7srGAneAv4ldy/I/vgXcz3
wZvDr2LnXXaCN4N35f5d2TfjXn0v/DT4tey8T/+Zfh2/r/fZVw+v37P9teJx
35T7xPZNuVf/Sfba/xHeBN7d7hO8Mfx6u3/07uKpeWL94N3Mf7BO9D3yvjny
effYfVbavrt4aq7fyx67T/Td8HrwPux8yI56OB/Yvrf59/DK8NvZ+YId9XA+
t/1g8++s8zk731lno+0Hm++yzkZ2dlnnM9sPNt9pnc/Y2WmdT2VfKaP/LbwE
fDw729lRD2eb7ceZ77DONnZ2WGer7ceZb4cXh0+Q+xx5H/pE/hzGewYvCp/E
/Q7+66B6krG/WzwRn2i+Vfb6fLZaZ5vtJ5pvgReGT5Z7hrOZPoWfawf76voc
Nltnu+wLcZ/YvhD36t/A88PvZ2cXO+pHfm5sf5/51+F/iQV/hJ2f6F/B/y2E
v1/k59rLfvDD8Jnc75N98BnicX8IPovv+4vsD7Gj/iX8AHw2O7/RN9Hn8D6/
sR98P3xuxv4v8d/pX9CfZOd3dtS184V1on9unXifz63zq+3niqfm+hyizzHf
aJ1f2NlonX22n2P+mXWifwr/E/4UP1d830/oT9fJ/d97xvdVz5FO8D/EY+dj
+jPWUY+dHPNUfg4/ln702P9dfJ/sf2NHn0P0p80/gv8Kf9aec/Bf4M/Z9xL9
WfMNstfOBuvss/2z5uutEz/Xeuvstf2z5uusE59n8H3weRn7fRn9tbLXTvCf
4S/Y/aM/b74GvhW+lJ1/6B/Sl/HnIfoH8M3wt/jz8x/fVz3s/7X9m+KpeXzf
HPNwDtv+DXHtLzNfDf8SvoL9pELuX9UT3l/3y81XwTfB37aOetbe++/DN8JX
spPDjno4aYX/u3/X/D34x/DV7ORlRz2cPLZfZb4Svha+jp0C7ARfA1/PfQHZ
r+Fe/V3Za+dd6+S3/Trzd+DL4FvYKUN/m76VPz9l2A++FL4tY7+U+zRjv5Xv
W9r2W8xXwF+Gf8dOBXbUwykv+0XiFejL6d9LJ5y34AvgP/BzVWJfPbyuWIH/
fXbxRO4TfY+9b/Td5m/KXj/Xm9Ypb/vd5m/A58N/lHum9BfhP3FfUfYviFei
L6P/zE58DuraWWad6EutE30JfS+fc7ynenwOOebx8+r+Z3sOS+w+0RfD58L/
Yr8q/XX6ft4n+mv0A/xztSrfVz3sT+Y9g8+BH2Q/+FHm4Zxk+wPiqfh+8Xif
2eIn01+Fz4If4vtWY0c9kfu/Ap8JPyz7RPxv66jHju4Pmb9snfi+L1vnZNsf
Ml8EfwieUzf319dmRz2cWrZPzRfC74fnZ+cUdtTDqS/7+8RPoS+AT4EXYqcR
O+rhNLR9QfOX4HfCS7PTgp3go+FluG8h+9Hcq8+Hj4Ifz85Z7AQfCT+B+7Nk
P5J79RfhA+Ens3MhO8FvgVfjvg39BXp17tuw84LsU9sP4D6x/QDrh/O87LXz
vHUutH0183nw/vCa7FzETvB+8FrcXyT7ftyrPwe/EV6XnbbsqIdzie3rmD8L
vwHegJ1L2QneDd6E+w6yD97Y/Bn4NfDT2elMf5p+Rt3cP186s68eXney/eni
qXk4HW1/mvlT8CvhLdi5kh31cLrYvrn5k/CO8JbsXM2OejhdZd9B/Gr6XPgV
8HPYuYYd9ax9K/M58IvgF7NzAzvq4fS0/UXms63Tk53Z1ulh+4vMn4C3hrdn
pzc7wc+HX8p9b9mfz736LHgreAd2+rKjHs5Nsj8L3onenz4T3gJ+JTsD2FEP
52bbdzGfYZ2b2Zlhnf6272L+OLwB/AZ2hrET/BR4L+6jP0bvLftEvJd1HrPO
UNvfYP6odaI/Aq8Hv5G/T4ezr673id7H7qOeWL8OOwn74TwMrwXvx85IdoLX
gN/M/SjZB+9v/hC8AnwYO3ezox7ORNsPNX8QXg4+gp1J7AQ/AT6S+0myP4F7
9QfgZeF3sDOFPp0+ms95Cvvq4fVk/v2YeiL3mS59fd/oo8yn2X1iZ5p17pZ9
mYz+VHgp+Fh27mFHPZHPG32M+f3wkvBx1lHP2nv/PngJ+HjrqGftvX8vvBh8
Ijv3saN+ZGf7Ceb3wAvC72FnOjvqR56v7aeYT4HngT/AzqPsqIfziO2nm0+G
p/CH2XmcPgmewB/lz+EM9tWz9o+Ip+bhPCb7/wr+P4+du+mPWkddO3dbJ/pE
+L/wx6yjnrX3/gT4AfhsdmbT76LP4fOZzb76kX+d4+9T9XBm2X62uPafMB8P
32/91Dxr7/1x1ok+lj6XnyveU/3Iv17afo75GOvMZGeMdWbYfo54aq4/J2Ps
c0W/0zrxe7/TOo/Zfrb5aPhP8BfZeZqd4D/C53P/tOx/5F79DtlrJ/ge+ALu
n5H9bvFn6aPg2+GL2XmJHfVw5tv+dfOR1pnPzkjrvGj7181HWOdFdkZY5wXb
v24+HP4VfDk7L9OHwb+Ev82fn1fYD74J/g73r8h+E/fqQ2WvneCfw1dy/6rs
g79rPkT2OfSUvhH+XsZ+o/Xj/jPuE9t/Kv4a/Xb4BviH7CylD4avh6/lfZbR
b6Ovq5v7n+NEH0RfX/fIf8Xs//eB9A11j/yj5454ap5H3negdZbafj3fd4nt
14mn5uH+i22/1vxW6yxm51brvG77teKpeSrPOfoa8bhfx31i+3Xcq98CX8v7
pPK+wdfw+SRyz+jrzAfAV8E/YSd+L+qJfC/RPza/2Trx+7rZOktk/35Gvz/8
bfgmdpazE3wF/Evul8t+Bffq/WSvneDL4V9l7Jdn9PvCl8G3sPMu/Sb46/Bv
+b2vYl89vH7f9jvEU/Nw3rP9dvMbrRO9j93nPfb72H1W2n6HeNy/At/F931f
9sF3mveWvX6u4C/Dv8vYLxJfRe8FXwjfzc5qdoIvgO/hfrXsF3CvfgN8Hnwf
O+vZUQ9nne33mveEz4HvZ2cjvQd8Nvwgn/Pn7Ktn7Q+Ip+bhfGb7/ebXw2fB
D7HzOb07fCb8MO/zBfvBZ8D/4f4L2c/gPs3YH+b7fm77v827wR+EH1Uv99dv
Zkc9nG9sn2N+HfwBeB7rBJ8Gz8f9FtkHz2t+Lfw+eAF2trOjHs422+c3vwZ+
L/wY6wS/B16Q++2yv4d79avh4+El2NnDjno4u21/rHlX+Fh4KXZ+YCf4GPhx
3P8g+zHcq18le+1cZZ09ti9lfqV14ue60jq7bV/KvAt8BLwcO3vpnenl6/G/
R8R+8KHwStz/IvvgFcVT83D2yX6IeOx0oleyTvDb4ZUz9rdzr94Rfhv8RHZ+
Yyf4IPhJ3P8m+4Hiv9M7wAfAq7PzFzvq4fxp+2rmV1jnT3aC3wyvkbG/OaN/
ObwX/BR2/mEn+A3wBtz/I/sbuFe/TPbaucw6h21/ivml8E7ws9kpWDH3r+rh
HFPx/+7PMm8P7whvaR31rL3321nnGHbaWaeA7c82bwu/FH4+O0XYUQ+nsO3P
M78E3h7e2jrqWXvvXwy/BN6GnWLsqIdT1PYXml8Evxh+kXXUs/bebwNvA7+E
neLsBL8Q3pb74rK/kHv1C+Gt4B3YKcOOejilbX+F+QXws+Gd2CnLjnrCvu47
mreGnwa/lp1K7KiHU9H215ifD68H78NODXbUw6lu+97m58HrwG9ipyb9XHpf
/vlck331+L66v8nuE7w294nta3Ovfg78BPhIdk5nJ3hZ+B3cnyH74KPMW8GL
wCexcx476kfuYfu7zVvC88GnsXMx/Wz6dD6fi9lXP/Jzb/tp4nGfl/vE9nm5
Vz8L/scxSfIUO13pZ9Kf5n26sq9+5O8DbP+UeNz/zn1i+9/E4/u2oD9j92lO
f9buo673aW6dq2T/K/eJ7X8Rj+/bDL4PPo+dq9lRz9o/Z34G/Ef4fHauY0c9
nGtl/4P4dfTT6S9ZR107p1sn+mnw3fCF7HRjR13fN/oC86bw7+GLrKOetfd+
E/h38Jeto+77XeLd6I3hO+Cvs9ODfip9MX9+erCvHl5fb/vXxVPzcLrb/jXz
RvCt8KXs9GRHPZF7Rl9i3hC+Gf4GOzewo56wr/tl5g2sE+/TwDo9ZP9NRv8U
+Eb4Snb60uvT3+Nz7su++pH//ML2K8VT83ButP275vWscyM7wT+Fv8/9TbL/
lPdRrwv/GL6anX7sqCfyeYNvgH9A70+vA18HX8vOAHaCr4Wv436A7Ndyr14b
vhi+nZ1x7KiHM9b228xrWWcsO7WsM8b228xrwl+C/8DOZHbUw5lk+z3mNeDP
wn9lZyo76uHcL/tnxKfSq9N/k0441ei/8+cw9tVT6VezTvSq1ol+Mv2Pern/
ee/97KuH/X22/108NQ+v75X90+K6j55k7H8zPwk+F/6XPZ8T4XPgB3ifaewH
nw0/yP002c/mPs3YH7DvJfp+8yrWid9LFevcb/v95pXhj8P/YedBdtTDecD2
h80rWecBdipZZ7rtD5tXhD8CT+rn/vqH2FFPeE/d/1fv/3oF+EPwHHYeZif4
dHhedh6VffA85uXh98ALsvMEO+rhzLL9Mebl4JPhhdmZzY56wr7uC5mfAL8b
XpSdOfTj4RPhxevn/hzOZV89a1/MvKx15rBT1jqzZT/B+ql5krEvZl4Gfhf8
WOuoZ+29Xxo+Fl6KnSfZCT4aXob7p2UfvLT5cfDh8PLsPM+OejjzbF/OvBR8
GLyCddSz9t4vCR8Kr2gd9ay990tYZx47JazznO0rmB8LHwKvJJ1witMr8+cn
9oPfDq8i+xzz2Nd9ZXvf6JXMi8EHwk9m/0V2gt8Cr8b9fNkHr2peFN4PXoud
RewE7wuvzf0i2fflXr0I/CZ4HXZeZkc9a+/9wvDe8PrsvMpO8F7wU7h/Vfa9
uFcvJHvtBO8Jb8j9a7IP3sC8ILw7vDE7S9hRD2ex7U81PwbeBX4mO2/TC9DP
4s/P2+yrh9crbH+meGoeznLbtzDPD+9s/ZTeCX429ytk34l79aPhHeEt5XOl
9Cvg53D/Dj0f/Vzu32Enn+xT21/OfWL7y60fTl7Zayf4ZfDz7D556OfLPsc8
kc+Vxzrxe4x+rvlR8Evgbdh/nx31cN6z/YXmOfA28EvYWc1O8Avg7bj/QPbB
25qn8LPgndn5hB31cD62fSfz8DevzeFXsfMZO8Gbwbty/5nsm3Gv/h8ediN4
D3a+YSd4Q3hP7r+RfUPu1f+F14f3ZmcrO+rhbLF9L/N/4HXhN7KzjR31RPqH
6TfJ++aYx77ub7T3jd7H/G94LXg/9rezo57wnrrva34IfhJ8EDvf0w/Sb+Of
P9+zrx5ef2f7QeKpeTi7bD/Q/IB1drFzwDo7bT/QfD+8Cnyw3Udd3zd4ZfH4
uf6CHw8fxc7P7KiH85PtR5r/aZ2f2PnTOj/S/6Dfwf2P7PxhHd/Hzg+2H2n+
O7ys9VN6GfhouU8ifof5b7LXe/5Kv5M/P7EfvDR8TMa+NPdpxv5Ou3/00ea/
WOcHdn6xzh7bjzbfBy8Mn8zO7+wEPwZ+L/d/yj74PeZ7ZZ/SU/Mj35Pt7zH/
GX40fCo7+9kJnhc+nfsDsg8+zfwn2af01DxhX/fTzH+E/1sgSR5j51921MP5
x/aPmv8APwyfwc5/7Kgn7Ov+cfM98L/hM62jnrX3/m7rxM8V/BB8Vsb+UEb/
e/gB+Gx2kkr881U8kXt+B98Pnyv7hP6XeFrp/+2jJ7b/Uzyl74LvhT/PTn76
TvoL/H2an331I3/fZvvnxVPzcPLJ/mfx2PkWvge+gJ2C7KiHcwx9B30h98ew
s8M60bfLPkc6261TwPYLxON+N/eJ7XfLPaNvg38PXyT3Sc2z9t7fap14n+C7
4K/I80nEXzbfAt8GX8JOUXaCb4Uv5T76Zvoy2SfiS62z2TpFbL/E/Bv4Fuun
5ll7739tnSLsfG2dwrZfav4VfBP8bXZKsKMezrG2X2H+pXWOZedL6xS3/Qrz
TfBP4KvYKc2OejjH0b+gr+b+OHa+sI7vY6eU7D+2fjifwz+Eb2CnPDvq4ZSz
/XrzjfCV8I3sVGFHPZzKtv/M/DPrRP+U/jl/v1dmXz28riT7d8V1vwy+he9b
XfbBN5t/Al8C38ZOTXaCL4Zv576m7F8Xr0X/mL6DnVrsBH8N/q3sg39E3yn7
RPxb63xknZq232G+Af4i/Cd2GrIT/Hn4Xu4byT74z+brZZ/SU/pT8D+4P032
wX83XwefA9/PTjN2gj8BP8h9c9kHP2C+VvYpPTVP2Nf9AfM11on3WWOdM2x/
wPxD+MPw9JTcX9+KHfVwWto+Mf8Afh+8ADsXsqMezgW2z2++Gn43vCg7bemr
6MVO4T8vgH318PoS2xcVT83Dudj2Rczfh0+0fmqetff+e/AJ8OJ2z5X0Y/m5
Yl89ZSfHPJyLbF9cXPvFzN+Fj4Efx357dtTDaWf7UubvWCf62/TS/Fzt2A8+
Gl5W3jcRL2P3UU+sP5p99RXwQfCT2LmKneAD4Sdzf5XsB3Kvvhx+E7wOO9ez
E7wPvB73PWQfvK75W/Ae8Ebs9KG/ST+Vz6cP++rhdW/ZXy+u++hJxr6R+RvW
6c1O8G7wJtz3kX3wxubLZK+faym9qX0udf1cS63T2/bxPr1s39h8iXV6sRP8
Wvhp9hyiNzVfLHu9z2Lr9JL9NRn91+Gd4Wex05+d4J3gZ3PfX/aduFd/Dd4B
3oqdAewEvxx+Lve3yD74OeavwtvDW7MziP4K/QJ+X4PYVw+vB9q+tXhqHs6t
tj/f/GV4u4z+IvqFvE/sq6fSCd5WXPeXwNvwfbV/CffqC+Gt4e3ZGUpfAD8f
fhnvM4x99bjPMQ9niO0vNX/JOkP4vi/JPrX9edZPxC81ny977QQ/F355xv7c
jP6L8LPgndkZSX+B3oXPZyT76uH1CNt3Fk/Nwxlu+07mz8Obwbuycwd9Hv1q
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
n4w+e9r+pHgx6TyMTjHpTJL9SfFLzZ8xP4fOVHTY/UyR/VnxS8yfNv8NnWno
uD9l/jv202j/FPbsF5s/Yf43Oo+jw+7nMdn/JV7UfLZ5tlrx35+PDrufebLP
Kl7EfKZ5DnQWoMMeqF8YnpPuN5DnkOspLJ15ss8uXsh8unkmOovQYfezUPa5
xQuaP2qeRzru08zzYf8E7d3zihcwn2ReGJ2l6LhPMC+K/VO0dy8int98tHlx
dFai4z7KvAT2K2k/Cnv2fLTnTj7prJB9cfG80lmBTl7pPCf74uJ5zEeYl0Zn
FTruw83LYL+K9sOxZ8+kPXcypbNS9qXFc5sPMq+Mznp03AeaX4n9etoPxJ49
l3l/8yrobESH3c8G2V8tntO8n3k1dF5Ex72veXXsX6R9X+zZc5j3NK+Nzqvo
sPvZLPta4tnNO5s3QOctdNxvNW+E/VbauzcUz0b7DHiGeECf9w3Fs5q3M2+G
zrvouLcxvwn792jv3lz8ItpnwDPEA/q8by5+oXSS63Fvbd4iZd86pX+BeUvz
VuhsR4fdz/uybymexby5eVt0PkKH3c+Hsm8jniGdD9HJkM4Hsm8j7v9SffMu
6HyODrufHbLvLP633eqZd0XnC3TYA/q8v138L7vVMe+Gzk502AP6vL9D/Lzd
qprfjc536LhXMe+P/Xe0r4I9+592q2w+CJ396LD72Sf7geJ/SGcfOu6VzAen
7Cul9P9jt3Lm96LzIzrsfn6Q/TDx3+1W2nwEOofQYfdzUPbDxX+zW3Hz0egc
Rofdz8+yHyX+q3R+RudX6fwk+1Hi5+x2ifk4dI6jw+7nmOzHip+1Wz7zaeic
g5+BP1IrflxxDn12//FZ2U8jzxD/Zyf7qeKn7ZbdfBY6f6LD7ucP2c8UP2W3
bOazpcOettf+SbtdaD4Pnb/QYfdzXvZzxU9I5zw6J6Tzp+zniv9ityzmC+R6
2Pl+E58vftxuGeYLpcOu+0D+F/wYfJF02LlzTDqJH7Xbf+wX2lJ0Ligb/+n+
u/lT2LsH8qXiR/w+zJ9HJy867H7yyH6N+GG/ma9HJz867H7yyX6d+M/SyYfO
z9LJK/t14j9JJ3m7fpJOHtmvEz/k92H+gnTY0/baPyidPOgclE6m7NeL/+jX
ar5BOuxpe+3/YLe95q+iUxgddj+FZL9Z/IDdvjV/HZ2i6LD7KSL718T32+1/
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
5/8BxRnQrQ==
    "], CompressedData["
1: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
wZivvWlSxiFUEA+5/NY+jArGDSnxneFUSCYc1ZpA9/RON+ZfpsKyHYqJvleo
8Emu8R8LLV+7+k/RVVzHUtzRKpIKZektoyXXqLBv289vslFUUGN7+mmjfF+D
p0Su45zZxiefolOCPKRTMZjH0s4L9BtUaLNruD6Ktk4kCRTEUmFrLammBGVO
hqpci8N6cqNn392kQiX1xtLKW1RwnWvbJIkqVomO2cVTQT/RRmx7EhX6aiWa
Difj/C5wNULRI7YHpcvRWnKsencqFTLU3XcNo1bJohCaRoWz+rX7vqIWK9Y8
W3GXCl7WLIXpTCqoxNJnu3Ow7uFI2b9owPjn5IO5VJjr59P7iK4TigibQM/+
rg8Iz6fCwhWHXuFCKnworNbiPKCCwZvk4/Pog3X6av4PMdf7+zYmlOD8x+Q2
/d9PR2piutF7kq37rR9TYfOgkwYRzV5xI3gUrd0b/9mhjAqP5SnkKpS+GKeb
WY7n6dRKhkAF3g8mNyMNK/H1Mxua7j2hwuCMAv1QFRWi3kS6XkR36rSfzkVz
cqbtT9dQ4af4I4JOHRX+MRjNeY1UuNB2Ibi6CXMz8p51pwVz+2FP+M7nVDif
V1zh3UqFabGstsPtmLd601GRDlwnfm1NOlre0GKq1on5yTy7xxlN9rmwSa4b
830mgq2LjodcoJxCLao/mdcRqfDZb0swDY12b8ttJVPheVKnYx+6XiHx7zYK
FS75nOFbRaWC7cO8Zclove6b1B4u5v9BRsO9V3hO3MjU4NdUCNlK36jTg59j
PYj82ovzv5rz3fgNFXiExorV3uH78ioFnqN7rcsbkvrwnL5Rj32Crlla8G3u
p4IjifNSfYAKfsdMLW6hm1n9SUKDVJCOWLo/iDr/jk05NESFlt2P/F99xXPv
nvJx9jvmWSX5P52fVHj4dPNU7xzO23J0aBKtb3dtKPhFBYnfY3EVqLbyz73D
qPVdPzn931QIokjZEFBLO/uK03/xfgjtMPqMUjyPe21fosLKLp1HHmjVfMWR
GDSuZcCwG5W/1jw5gs7f155R56FBz1EN9Wp+Gmy4eM/UahkNdD7zzacI0GBc
/lbo2xU0qLXvCvu+mgZ7+GX5i8Ro0Pea7+xv1GqX5zpbcRpEOLVrxKC2VZ18
J6VoIHm7mN9LmgYpgr7vZGRocF1Yhn+DLA2aRBNWN6IZo9cDT62nwdz1NYdD
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
I16GA6rWl4fPy3IgSCp693P054ay2DsbOMBRsPzmK8eBWTXVXg6avPWohbQ8
B8pFmp5Hb+LA8JPbdS0o1cLVX1aZA8bV7hc00Plsi6461NA7JCdfnQPFC097
gzZz4Lbk9FIeynPgTvEDdMJ0rqFUkwN80uXlqloc6Iz9tTIP1V3qaHyKdgzv
uS2tzYHxDcJ3v6InrovfPbKFA7eWKxOOoeJ25pXFaL2i/0r1rRxwPLnNNxtN
T/s1UoraVtQqyuhyIKmbx+0cWj0icegvurvg4GSrHj5HqPlF0XYOMFji7DK0
/XW4saohB6J/0MrjjLAfaus/8BhzoOqz2QkD1OtvedtRtC1Mp+o6ei9ubzvB
hANO56hrY0w54Jkw4ZuK+o346a8244D2EaEJedS3dvSaIsoTMHg0GT16ytR5
AJWOV7h7CjgQ0R6f7LETXzczlniBfrip8fMPWql6U81wFweemZye9jTnwHJ9
NanluzlQ2zv10QA1SJrW0LfkgHen5foR1Ppc6vnLezmQs8OjPAlV+Ge/LB+1
17hv/t2GA9wzYs2Bthx4e7ftNXkfB+ja6h5B+zmgLFiQm4G6H1G6qW2H8xNT
4P+MHpEKPbnrANbh+aGtFK2T/SYkdpADgZf+0JvtMUclYKDogM8TXmyYQHUM
f5Qvogq6h4abHXEO3QXGHFRvbeZUhBMH9uZ9qnyFnl7oeaV5CPcxeWRs2IUD
D40vW0a6c2ADuVlN0QNzWyW+Z+oYBwY2t39Q9MR9vtxjeRjNEajryEKddt54
yUUbdr5s2eXFgbXPxD1OoO2fI97+36kFuTWf0JZW55Jz3hz4u98tPho9Q9OJ
kT/FgV1r2rUVURF6X/SW0xzgpR7aceMsB5qp55Lvn+PApV0VEObDATV9ghMB
Ndro6OMcgHXXJtaRgjAXb+0mnwRjvzPNeE9f4oDWtdfKuiGYM8fFXjN0nvUr
YRitF7Y1cwrDf7+84LU2nANp09oqn1AB/r3zlMu4L7+2q1ERWFftwb230JEn
GsJmkRzotjJ5HXyNA1/WcMJI6NNTTz6dvI55Sb4SqhDNgffVK1y10KshXlvO
3cB67NUTR2Oxj3r2+rfiOPD7mKax5E0O6EcerU5FYweNdAvvcIBYwbWaQRMO
/i4uTeIAOy76gGIynhuukqs22urwgl86FfO62cBzO/p7lrorFjUrVjmy4S4H
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
strnSZ1431p+WXJ6QoU9Q1TpNDS9bLlrAJ3fslPp6FMqkNrExTPQkmO8mwRe
4/3dLm9pi6pKJ5ZR0J2SF7cuvMFcCDbOXRnEeV26XLV9CH8Xl5/F26C/x2PK
Ho5gLps4+3MpeF8JvU0fQYX3t2tyUjFn8S95AaWtrUt+iNYuL5NfoOUFdkEc
dNzfbpszB9GWhhSDIrRy5HbRMQbu69uVYFcm9mVjWNcvlF1J5MElFhWKHabz
klCOlgVWO0o9HfuJgkaaRB6dQb8snH+0hPrc5QmTGMX134kLGKMGLwjhZmgx
UV3A/C3en+L5LpZoMO3YnOU7/B2OtRJNRndYK9QXoItG/MleH/C5u1J+bP2I
+TJzCLo5hveGY++txk94Tw7qOXuO4/0qaBBVhFaE5Xt8+4z3QUvyRbkvVMj1
0KImfaXCh04Z1vtv+LvykiV6bwb//aBdzL/7OxUePWa57ENFP3yU9ELZ9b7t
3fSLCqmdnmNb0G/JQt5rf2PfQ/jCLJepIF4voJSPwms508kVKghmfOB0/Yf3
UvuW+GdcNFiKlfFL4KZBAPOlzx4eGlzK0z5igb6OX5XLQbedqrw1xEeDTFcN
QXt+GvAaS/H4oi9OLOm+Q7s9HvJ9Rcs6FJgDAjQobHnBQRKigex1U8FSERrc
+7lPgIG2yl8LYqIMVw7m2AYaZHecZJcSpUHwyPOoGnEaFIfqyWZJ0EBJ84hK
tiQNjkhWyr9Fg/l/ML2laNBEffx7DM0xtaXckqXBeEz7DiE5Giw0Rj1RRu8L
zSjfQe9aNJfky6M3d/LfUaTBuTU61bZKNNhbL52chLJ2U7nfbKfB8RndqB07
8Xu1pt+10D/lMYcfo2eTgh8qqNDgpw2z8gS68r5x82cU0qcs+VRpIBk3t8Fe
iwYPG4obK1B998aheh0aXJAb1lnRpcFQ3iF5i100oOezTqSgjsQablV9Ggyz
7VutQi2S94jWokvRthRNAxqosO/R34M+zeksbUTjOaTudaNBkd965HfT4DG0
7Jkwo4Fz7sh3jf00eHP6y4vX6OGVnNMKB2jw7qPxplFzrKu54r8tB2kgH1tg
q4ga9p1vMEdFbqVKfEftJVcfWVnQ4It33ekjaBupyjIWtXnC6OmzpIFti1xh
ng0NKFy3jQoO4z4ounrctlgHU+3C+CM0CCzjqog6SoPTmqLTIx64nvKLLdrH
aUAaq41P9KTBbV6JK3JeWO9FvxsqPjRYc3TDlUE0XkfM6LYfDYyjJzfWoqev
qG0QOEGDnvD196NO0iD1kVbSFX8a5E6M9TJRifQEksoZ7MejHTL30N97a1be
oH0Hb/DuDcXnLA6PDKL3Oz/rbQujQfW0wN3n4TTIWDqoMYVyk0UM5iOwziKP
lrQiMadK5+cPo+JCVxsoKGvXaZtp9MErWQW9KNyPyPl4w/M0CA9JLA6LpYGp
jtgNtzgauL8oWuKOxzxzB1SrJWB+fxle/3MZ13Wi/bifRIMQu7SUf+j6sgaa
ZTLm7bs+TT2FBnvorYPn0JOSD45dR/OXujieooGZ/OVrUmmgS2oaE0a79RnT
YujqL7Ojy+k04Btw9H6XTYPBYy7lgTn4PHaF2IJcrLP3k8IJdDtLnutNHg00
7blrmSj9QUeg8XWc0yTJz5/yaWDHvvjWvQDzyalScQFt3/J7Wz9a3kfdw0Tf
Ngfe+ViIc14HAdw38Hwrhu8k0S2eRx7po0/Wt+UeuIn9uGHbu7aKBuoXWquM
btMgcoSLYnqHBm7KAsoba2gQu4Vir3eXhvcQWS0P1Zx5anb1Pg182dcHv3lA
A9pD0Q4ySvJPDoxvxFwHaii+QqnM59pfUFPtvCDTh9iv8J9nI1rxfNOvjg6g
Ddmn/s6h9fIee4fbMbfHpRVn0Q9C3z5kPKaBl0TStEEnDfafY3w7jS4sOt80
7aLBwdTXzzWf4nxHSUj6oTuJ+e2pz2hQtd03koLyXvdjjKFSsuWuYt00iLH0
1HvZS4O6S4y5gD4asNk6Wp56gfdBm7RcJTq2dyxX5yX2zcQsphbdznf5Z9Qr
GqwNt13uRuuSRS+1MGhw8ZfwQgd6s07R/TNadCOhZP8oDX70GoVnv8d9lOyy
CP+Aeikd3fUFn78otGSPrsakTGhO4jmJdxv8pv5fd7eLLaj2/aTKE9NYZ7a2
mPNo7YkjP77NYr3n1eOvzNNg166WGYlFvAc77U+I/cHn0k5tVEeb188F/1mh
gc/GF+N+qzR4panYzkTvj4omma+hw1DiZi+jdXSwI1+cdUVNunfOdqOcfQPd
Omx0CBn2oMWj9OSiKm9uOvSPds4MoZlPNstQeOgQdPLADh5eOjyx0+6YQePO
js2d5aPDI/XzF3+ju9r6Tmzgp0Ozi0PMMFq4yd2tXYAO0GNZRUYJfuEPP6Nh
o5fY/qIFD+nvPITpUFPWRs8RocPblPkFDTE6OJ092ZokRQf9DyUEfmm0zVxe
RoYO4RzeM8Wb8PVcSqXOZjrw/m1q34Ua179w0VGgg/I5ff4xRTrwuJcIeSnR
Yf3a9Tsnt9KB6yZty+5tdFB8sa3fESU/OJIchx5aZEreQBV2BzwU3kmHYXXl
74ao+d6dTc9RrlidwWmU/1jwmIAKHVLSpb8aobFBkkLhanQIMHE7fkCLDg0J
2Z0B2nS4JS50Yhbdw2fw3yk9fL7+M4UulP1wUYyPAR22fNc5fQeNeN7qs3M3
Ha482auhg651ol31QtdIEVwC0aNnW60p+/B5XdTjDUZ0uGeu8kHamA5qlgdy
61A32pfhMVRlyl5sFpUuZwlGm9CBuC77lo4pHVaGnskdRPdYXrk250KHTxVV
ezRdsa8N4v7O6Lo1zvK/0QsXjY8rHaPDjwdKQmIedPhsZVaXcpwO2q63LdPR
6yNnbIU86XB1DX/Y/13ns1ntPHpjcnJwHH1dyfc31IsOZrFx/C3o84QNhz6h
Y3PcfXe96VCSdTd1EZXiDbP46IP1nzveKO1Lhy7SNjq/H3rzcqnsCTpovVVJ
zztLh9B+bvXMMOynvAXXd/TswLxGazgdmhzV8wXP0eFjwsb70uiHOhqvRCTm
dS2X/RFUWMOD/Sjq6MP62RqFeZu17xSJxhxe6qutjMHcLTafX0SHSq3+7L1A
B1s2A5l5dOgOf6N1LB3kqw2pDejwJ/2vsnF0uNklzO2Jau0SFb8ST4cOHVac
3kU61DIXT51EX0dE6/UnYE4/Z/ituUyHPyk80y7p2K9Flea1WXR4lxdodSGb
DlUcSQOeOXQ4HXScfxgV3sG5qyiXDoczT1+ZRb2VGCGhBXSYS/WI+lBIh/i3
VtP/lWM+u8aOkNFKxrrMnRV06KF1a/1EyZaJ8uqVdEj0Dd1uhL7y5h97c5sO
+xpEwhOr6fAiV2vdtRo6TAS/5VOqpcNfk9+J8nU43z97o9Xv0qGYNPS1HL3z
r+LhJ/R5S4XctXo61BcMjL1twPyxx+9Nv0+HIl7OmxWoEOXttWOP6DC95cO3
X6h2p+pLnSY65Hip+jijw4xTTbdRvc1ecgrNdNhWlGR1ogXzSKXLVrbSwaK2
bPNAO9Y3rDqo+DEd0g7wyX1HdfXX+Bh1Yb0a1GqWUH1K0Pr+J3RQEtsmu/Mp
5mzpwpbYZ1j/HWkuvd108BNdnz6Lru8gnG3uoYOpQP5J7146CGa/PdqKnijn
sPv0Eud18NDcWD8d0hOWa1VeYW4y3i+cQ3/ZPgn7MUKHYOEawj4CHTx1f8vN
UrCvE07nA2l02CwUej0OTbyYb9hMx/uuad6am4H3yT6foxroZo261KHPdCj/
TzDR8isd+kp5LGEC69L898fANM6x+qqm/wwdHlbn1en/oMPTl6Y1IahlBs+/
h2iJVtAQDQ2/0ay05yeee8y+4/IiHbgDlLgXUMEw1lP3JZyHUL3NTeiCQ0WR
8C88L9t7uh06VPD6jiOarfjPdu8yPr93bZkfuql3pLvvDx18md5hgn/pcPLi
ibaX//Bez1tpK1/F/FvF/fqEFin1XGJfw4BIrsg3sqjFLh+lW+gmd9PymLUM
MHz1evdT9N3u9Xxp6xjQMBFS/wCtatBmC2djQLTpfosb7AzI7fBVP8XBgEL5
vmoyeldYz8eVE9f7scojzc0A/sj9lqJ8DFhsH6R3o8e6uAdUBRjwyj+IqSPI
gCu+3IcOCOHz1B1bIlGZJdkytQ0MeMvbs3GdKAPkzrZGP0S9gtzOfEL7rDvF
v0kw4EJH7NMmSQbMwhnPS1IMCNhccqwAvXJFYKYJfakQHnRWmgHsCo1np2QZ
YLtb78rIJgbsdHNY1pNjwJae8jAndNFQs4uGupc6ckhvZsDGaqmwRgUGFO2W
UJPYyYA3vW6bLFQZoKc3p3FQnQHT+6U3rmrgujulT/JoMiBRNuMnRZsBcybN
Tnt1cN88a1fNUOu6grr7uriu7uw7Gkoin7/KQtVCNEWLd+M+1hvtVdzDAAmO
zYYtaPy7SeY8ajH113LdXgb4rT/SaGjIgIzFHZZMdKNT53/S+xjw84lV0mnU
KoLN2dEY+3OcqLXfjgFwK67eHS1ycFzva8+AkYdRJauoUKaSXYED1rErUdrX
kQGcXHrFFzwYIJKr9UHhOAOeJFww1kFDdqjSZ7wZwF3vEfgPVV57rm6bDwMs
sxihLQEM0Cw7NKwYxACBEFcrLTRqSTPnGfpE6NX158G4H+a88Ff04dbs13fP
MGDccL9Jajh+/lpG/yP6w4J82/UcA/S3Dc1ZR+D+xlZcj6LVGZHfQ9Anfpzc
meia7ZpCmecZMLTzwK7uGKznHZm/PWiiUGzsmVgG+Nv60VpRx+LqV6nxDOi8
nO1pf5EB7Q520mopDLjYw2a+4SoDUngEc4ozGLDemjz/HB13zbNTzsS+Hz1z
qCmLAT2P6i8oZzNAcvO69by5uG6Uc3XKdQawpAjiV1G1d75rdhdgvhfErlii
qwmGO9pRz6Q8R89CnAevrhFfNHuIkbyriAGuQTvORN3Euv0Wey9divnsLMxT
RI+Xy767jIbZJe8SLmPA9zdObjVo/fS7L7y38PMDXU7XKzE/J8asqtFn1dlz
i7cZcCj1cXj+HXxeZappGap/UKuYiI5rqQTsrMY+DNeqitdgHXL+3LiACu7Y
VjmHJmm8G11Th/1+fThQE51qOXHhHfpnd+Nu6XoGUF9uvB/WyIDXr6JTr6H1
ffkSCU8YsH+ft4lWNwPYqKs/v/QwoL+GMO/xHPNTG7HeG63QavOTeMkA4fTS
IZd+Boz+CukVeo192cxxXAR1SKnmVkA1XnofrEZ9okujnN4w4FHgMGOVyIDS
sjYbGTIDaiPFPatQ4VTJ2hwq3jfDZz3MaNiPrIG9R+mYg8dORhfeYf2zuIMD
PzDgzvpbE2Ef8d7xv0FJRYfunduuMob1stnQ8hc1jEnqD/vEAA97sYTbqC+H
8wrHOAP2HqRFEr8wYKXx09AsWk/pM+b+yoAmj6i/rRM4lxtuhh6YxDpYcZNO
TOE8y3QvJaBJB60jLk1jHni3bnmP6u6sshKbYcDRgGpuG7Q8VIvqNvP/58uM
O/5ggFLgYmjrHAO8rSy2ac4z4OA/IYEEtL/y35LzAgNO3duqko0GX1Ld8eQf
A/5ufa/9B104FsXltcoAhh/x1No1TNAt7M1pXsuEwQaFy8nsTEjwkNtJR098
fLC6jZMJ95IHDm1Hi7dHWu9D82I3X3JFLQ10twygwY9lvd6g5ktT3SQ0cOPZ
3SzUZWST9eH1TJjZl6shw8WEO94qr/VQh+09cp7cTFjz+533Cx4mSAwHbF9A
L9WUsST5mGAxEa+dhF71Gfw+it7eLnBPlJ8JCwNn1mz9v5+3TDcIMcHNisrf
L4r7fRjZ9FycCTot6VcG0BghhQt3JZhQfntxHYckE3pPmOw1Qb3aVKvPSjPh
z4MGxmNZJoy87w1+I8eE39YtTXLyTODevPpUB504ovzUEW1mq+ut2MyERKUO
J9UtTFg2fTa+aQcTjhIuW5eqMEF024eFenS3ja3oK9T06D6BTapMSN9FWKGi
d97Lb69Sw32krXspp86E3F3+FX/QR7F0y0gNJrR4NRgUoZvKv41c1GZC2ddI
EhMVUf6Z8hcNbfp+Y78OEy7M5gYn6zJBkBq3/BtVuu9ZvaLHBL8haS0ufSZc
PvD65UlDJrSFyz2rM2ZC+8AVr1GUN3m3b8gBJvyj6fOaHGSC06nPqaZo+LDW
j0Po3t7My1WolOSt5kc2TPhA7YvXPIQ5KCwfeHmYCWLap3kS7Jhg92prPcsR
6yFeszqJjt6diN/uxIQK6pzkmaN4jm1OlXvdmcC5JYjsji4ILEY0/MeETK+E
igp/JnxdPvBgFM1/86RJ6QwTmNWB/m/Qz09fp/1B5zsPKbaeZcKi7pHS3DAm
pAV4Z9xDpZoP9R4PZ4LnqPzfEPSNyr9Z43P4fuTJwd/oz8t5gXoRTPx/xgvq
OPp8s/qQeiQT4iLEPnqh85XOZjmog3SRiWUsE0o21Vp5oLdvSmY+jGPCrcFc
9TGU5Hz+TXg85obNK9D3IhOyLmiet72E59Y5pZaJ6p2IfHXmMhNUeQP4OtHg
i4f0tyQyQS7UzMgC9Xe4I6+RhPs/8z01LAXrS1+sdk/DvtGytOYy8Pteu74K
ZzKhoV2FQkC1W3VZ81lMCHq5+uEX+lKWc4EjmwkvZPT8ZfOZ+O8ZmbeMIqyT
elSWzg0mRJrVXFtTi/P3tfriH/ROh6o7tQ7rcHNB7WI9E2gz++KD7jOh31BZ
4x7KR2cSaejymeqp+Ic4J9eF1a6ioVvtflk+YgJ5QvD19WYmUI9/eGbSwgSF
unDP/sdMuGnnk7WxC+vn69mpiS7I7Cg1eoZz/ikpqLebCVbDx770oUXjLNO0
XszXbyZL4jkTfOq+hqqgQoHpx5fRb0kve5b68F4JiOD6g+5ptc9TfsGEyZCb
4/SXTNAKro3i7MecEaOPa6Odd+i+fa9wPpVYNb6DTFhbqerLQDuF3K9yErAe
e6lnhFD3Cl/zQZR2/1LOVSKuR3g7MofyaqbakklMuGby4vFZFhMeG3xtZB/F
+yCBftkFLbm2V73qLROsla4vibzDdQPYLpMncA617v/8OMWEqYozo7RvOE+D
ZV0T6Jg338W100yILW3lFkAfVFzrdZ7B+b5mp+CHxuV1XYhEX7zvlVGYZ8KS
YhO3OTogG3OBY4EJ+hO8C14rTEgJ2/1R/i/24fD87wo066DVqMk/JkhnjaTY
oklZJtHJKEMhILQMddbNNH2FHnCUbju2in2mdQpR0RXr0bSqNSw49tE9ZD0b
C1JS584/Z0e/Ni2pcbBgy5p36XmoTvZ/ZQ1oB6liagMnC4J3sdTMeFiwlSWe
bcLLgt8ZD74Ho+0c7xVr0Rr3PMMnqGHDmqcy/CyY+9LMH4YuHyEuZaGe/7y5
CtDJfpHnQgIs+Ex643tIkAXU7upoWyEWKFh31SiLsED5rYpXA2pSQc6tEmfB
z8nPfI0oUE7t3iHJAhXdWqn96NYffMv+0iz4JrkoGYKmN2sdikSvjU+ffCTD
AqtXhZvcZVnAza3TwLWJBS81QqK50X4rhbX8qMKI7GDEZhY8IvC1OCqxQK6B
5ntwKwuiVcdevULTv5NZCsosiHtvp++Efipt2n8Mtem2qVfZwYKu+tueYeiy
p+S76p0s6FGV7ctQZQErLsGnRpcFN+Pcd6/oseCpRLtUgD4LGG9WLgzsZcH+
Rbd7tw1ZwPkwMdtrHwsSxdZsfwAs2Od6YFucEQvC/x0Q/YIG/g7itzBhQWr5
pHEDSozyEzloxoKHHKyvbai55K0HRvtZMBt8+L07Gt3HsaMVVR581kxCe/gF
jVIOsMAviLJcjwaD+aEZNEMosUzEnAUt/nI1FtYskFUfm+a1YYH3R0L0FtR1
e2FmhS0LrM98PKxpx4KEOY6c/fYskN9zNk7LlQUeHNtIX1C/PR+/17ix4OSX
j5NxHtjXkkG1cjSxQPIv/TgLTE3eE5bQ9auvn4p54jp/dctOoHebibXFaIWl
sPQTNP2T67kR9FHOlfGN3ixwznDgmkPpH9YNx/pg/sJ20tLQps2pEaOoQljg
7vO+LHDjzNat9mOBXUN01wxKOpwxf/YE7keqr2n+P1yfsiqT5c+CITnX5dUA
zOv6d7dOBLLgbyPjjvJpzMmJzzbXUIqc3YBxCAv4d3Z9XkQFvE/uXjjDgq9Z
ogyZcBaUG9ruu3COBTHuv96vRLLg2XCwBVsU/l1I7X9q6EiXhKoleld5XDcS
vfHtsAoFVdhWs+bbeRaInrh1MjuGBcf98/0PxbGAp1+hMBCdNLgiVYqeYLzQ
N4tnwYfIyQnRS9g32wmPfeiYZ3Zm0GUWcDmo+tgn4ud/j0j5ouzTfINPk1hA
uCr8WecK5nKh429hKguS6/nFqeinwncl7mmY2/Utp1wzcR6zzS3nclgwFXG6
YRn9kSIQ457Lgvqjgt/v5rHAIi3g+9rrOP9pYn1bUHMK++RcAQt8Vm6Ffy3E
XLn6cOTfYMFrjazAcjTt6+IKDWWzu/F0Fm33uva4pJgFXqncewiow11ftXdo
Q1L5MYnbLNBjmW54eQfn/Zhgj1k13itkoSLuGnx+HfmsKKrFEfd7sBZzs/hr
cagO+6/nMyl2lwW9/k7XFNBrHRWPvNGpw+TjcWj/Yc+nvWjjFo8+5XssuFAS
T5hpYMHAOpfQOTSRm/vS5fssCFuJPZyP6mV8uSHzhAWlFx8Rz3bj++fyV7J6
MPcLIUdrXrEgqLnaHV6zIFu5Q5eFhv63L3kKreWdCf2B2q3V+qz6hgUaQgnf
Q9AdXtdI8WhU5WWHlkEWnGcbrrQfwntoecuQF2pn88j0Afrb/66V3TDWM0Pm
fDWJBfojv27GUHCuun3lE2gsKHqbp/EALdw0s24AlXa7aT+HHvxe0sagY74d
ddUm0JYv4Xs2MVhw1cmAdG6UBfNp0j9K0ZeH66y3v8V9ZX0rcXyPddzcru7z
gQU5Eh98/VDJOMt/pegv6U7u059w/pxjklLQ9Klvd96hsY9uVNuN4+/As6rC
8v9ryPFj42fse9Ah2lZUMfWA56avmI8MrqfRaMXwnra+KRa0TXusnUZ3XFhP
OzrNgrpyFfUMdMJol7jbPJ5ToPOI9gILdPltcjLQ4ekPLN+/LMi/5qPu8w/7
16qfPrWKdd7t8FtyzSj4pGX8S143CrHFw3lktlG47DNxSIN9FNbnHn3ptX4U
kv30a4rQvrbvEo2oZOyhNdJco9Dx8NGYPXrQXey+B/coWPNF7knjGYXgX3p3
jHlHgX1HVHwg/yh8Jyv1XELFDe47l6ARJ1i9e8RGQS/YNjtWfBTyY54fzEa5
tI80lkuNwr2OuRTDTaPwquD81YOoYWhWnZ/iKPTOes2rK48C2eNhrR7q/flj
+Ck0ZLqP0b9tFCan3F7Rt49CzFCQhpnaKKz6t1CbUY7EguUBVPykKF+Q+igw
38TvXEYTL5VEPNMYhfG3q/K2mqMQH8clkao1Ci6DpL9PtEfhauIr9n+o0Ele
92K9UZASDS2p1h8FyjYBCt0Q9zmaHKe3bxQWv3OWJaLzB80C1hiNQm1JeYwm
Snh++5c7KnW8nPOMySiUb4/9JGU2CrdjnrepokqrX0yt7Eeh28T5vJDDKByx
Fe2hoyQ3De7kI6PwdGT/C72jo1A3fJJLwBnrWuu4aOo2Cp9IlwYz3EehIFbW
X9hjFGTkPt7diI4om9w+dnwUrsXq3DyJ8vGbj1SgH8Ldz2/xGQXOO/S5AJTD
8H8U13dcjW0YB/BKpaLSkBASWmggkupSioRCSkY0jCJFRZI00JAiUSkaaKqI
hkgLZYSGlOjscypJiVCR9/f+9f2cU8/z3Pd1/67rKZ89s/aiXj8fbljv0Ukb
Yg1tmg50kmJbaW/ZwU46MrP8Tat3J/5e2fUz6HAnXdX+tznBB/vtyFSwOYrP
J3cPqwV0UlCZaq4JVJ271MssqJO479wDo2BsePwv6dBOknUdv/gsNK/fXx8T
1kltyYIPDqdxX9VzisHQ7EfTe7sznWQXm3DzKrTecCLuZyTyJ/PX2SKqk9KL
ZL/cOId1yXOfvYnupOFG8QPK5zvJwjPwkF0s9t/FHC8Tj3MqF61bB9m9sp/P
X0Z9M2onKiV0ksufPa904FqmjolEYic5Zj0umAL5581KdGBsfNC0ILh16M3p
X8mdZDnJypuR0kn3cvfH98Ct3eyG6Oud5DOpvE0itZNuVigFykCtH5p9ldD6
6wTFN2nYh1Ljkb8wd+Cwm3l6JwXLsM1MbnTSyhUeYe43Uef7e7e0ZCPny7RZ
RjmdlL9Vm3yglHDicu9cfP7sInH2NnK93PzGczhxSLmuMr+TljwrHdAp6KS3
mmHrLkDRT/EyHoV4TvnB4Dy4OWpwdP3DTtqjm2nq/gi5PuAjcg4u2H8vpxR+
8Dzr/7yik/zib7z4An8/Gymyeoycli2UCYdbUv6kCuBdm+aIX9CM5xQcUdVJ
M/s1DDbUdJK7rmvPJtigk+7AgKpJtW6D8PjCEuWIl1jX/Xkq7Q2dxNQ+9JEB
x/ZvVK1/jXlRNIex/00neSwSXj/vLfqQMa97b3snzQhiqs760El/pt+slulA
jspmZvd1dpJNSH3+S0YnzQ1+HBbB6SQRN/uRa1DVouffJm4nmVoMXdPldVJ8
mOWapzBCLCN3Er+TDBqvRcdC9a3cw4Vw4oSi7kr4MtIj6DfcwL/7KU3QScvj
z5t+hr+cdX+f6O6k3TPaN2dBU+F9p272dNJz1T2huz6jj5fQ4AEYKPLR8RU8
pfdUiAHdLZYb+H/H/NlYvXr8z06aci77xTtoXTUYHjrcSRO23ZTJhGEzTp4t
hwEPo6bljmA+Ff9yL/zTSQrnV9z2+ddJnMzd9hfhV1Pbi1VCDFpjLbPUW5RB
BiGDahLiDApdHBm1D+bkHxGaPp5B+7cEzLwsyaChLb0/Mv533njRTsgaP35/
hxSDXEPdj8VPZNDy9b+XpEM9p9zzztIMEp7WMPsyXBM6umqKDIMYky2jDsPk
mJtLc2QZ9EUr/4naJAaVzJi9f58cg9xs/Y/3QNkSvucreQZ9Xz3stVuBQbMj
pnlHQeeI1WLVigy6prtea3Ayg+rHH5IfUGLQ8bvlpnunMEhcnk1XoeqcX/vS
oMNHn8FyuKDpkurIVAbN/+7pcWwag87ZTb8YDT89yzIunYV1RWm3s9UYVDjA
f+U/h0FPyj3nBcJEvStGanMZNGun49AuGG7qxvKex6A0tab6m/Dx3rFL49UZ
pK3zTVwBfkpraTk5H8+vPJHBgG0XqGWmHoOGu3hdskuwjgsLp5yHUS/PiffC
eg+TfzHLGaRrJZJsY8Sg94OBjbbwT15OM/t/uzyUYlcw6GHZfeMfJgxSuPH7
hacp6poeaPYZTgwfnBlGDKoez39yzQz1HD1138qcQaJ7x3Y22zKoWFQ8WsWe
QWL1tRXq0Dm4/by8A4OS2ubV6W5nkBOXfaYYaoUZjDXtYFDpAunXLTC3/Vak
gzODEoTG6RyCiYu9gla6MEh5/DQfa7i4ZFJG8x4GvXW+O+3ffga5J0/af9Yd
13VdnyDqwaDYytBKbahpom/rCl1UTMRz4BLPpHsN8CFLvmXaQQbFTfg5VRvO
qemWTIfuV/dtNvdkUEPRXHnfQwyyNlUR3n+EQU3rHXaWwli5Jok/PgxadXS+
vagvg/a8tZjkDx0qX3Y1whv7xMTijzHItDhsSYI/g/QX5g3Uw5X3Xl0bhhMT
upiVxxkU+XSw+mMQ1jOx/5XEKeSp7r5eXjCD7luayf2D+64pzxwIYVCZTt66
2WEMyn66M381rKhVtbkbzqB53+JmOkYwaNtxj9Ta8+iH7rCH1jEMSk0w3NQL
PbWnrx25wKCjoRmrjlxikMmffwppMH/XpSg+7PZwVfodj/MYFxP0F5b9kZhl
cpVBdSbbNNbD3QmJ/tvhuCmjN16mMEhw/rhA4hrWbzazZwe0DL18wfk6g3x5
7QoqqQy6e+8WzxrGxL25nJTBIKsrEwauQrHyBc36Nxgk+Uinsx9OOrElITX7
/32PvLsBha7p+2rnIFft7SUbYJbzEf6SXAYZPX9X4XoH+/OYcs3gLubCvCL5
TfBF8CT7N7Cx9vVStyIG2ej1LhHcZ9DUijPfxhcz6GKlq4c+VOh23mkFM+Vq
pDtgleE1xcklDOLeHGd2qxTrfajOd3zMoBpDcy3xSjx3JNRMGqb21CZ5QfOT
SfMuQMmSz0sa4WdvPaurVeiX2/H7/arRPz+PRrBrsA6dPZYra3Fepw5u2wm9
8w3M78A82Qf1459gXQsX8uXg/Mq/fdtg2J7ATf5QcUAsMRmKxJ0sOPyMQQUl
W46Z1jGoJ1khoRCOfP/z5fAL5GLjuG+lLagbe+rpw+/Q/15XVhTDoxt7Wrvg
WJnO7kWtDFr241ewO3xUWCau0IX9JxkLrYX/mLuiA2G454TVDd0MMnZalVH7
GXkYdgz4AF1Gwu9wYHfyWPSrXvTTHWGfM30M2puUrnQRFjyR/ZwOz5uPizD5
yqCzbQ9+Tx1gUMDzpYf94PHXh7e3wJRnepM+DTJoSpHrV9nvuD7X89902PZp
vHk8tN3nOKD0k0GdyWVb18PaCR2SgSPoC6lbW5ohUzY3QX8U+5AJu5TzB+sN
l7vH+Ytz2NZ6/NcYg3aJxn/++o9BJJfgLiXEpIihtoo2YSb9vL8jcLcIk2Qv
HTP3gY3pp6Zdg3fCC47MHsckz8tawXWiTHLtSDZeL8akhzU/ncSkmORdyArM
gFpTxzpY0OObivzCBUySqj5FK2HOwiuMvVDXe9RJZRGTlBJ3nnq6mEn7goSG
G5cwyWJSl/r2pUzSFLpeI72MSesGZL4mw4Gq2Zyh5Uy6r2La52nCpFvavwzK
oNaqiY+mEJOiQiTnLFvJpB9BW5tD4M43cX5N0Ec9JK8drpb/YC1rzqSP5+Ib
3WGZWGPORTj5gYRmPgz1jG1vsGDS9IZD6/QtcV/D7939MEtk+nwVByb5Tcu8
tsCRSUvtS2RM4K8mn3GXnJi0NWlErdMV6/T5ZzDdjUnFB8Y9CdnPpA2MWx9i
DzApUmviYBNsWxh8qciHSVZ/hZa2wOzuWXbvfZl0ZNVtj1l+TAqzkq/rg+zh
5s/9MGDVwVOrTzNJJ9J3uf0ZJi3MjWjyOYvz2cTafByWvt6Z4hzDpA9TPLtz
4KB3TG9dLJME2vcnVsbhfG7t3nw7gUm9krIfW2HaolcP7ZOYtOvJ0D7nq0yy
rSrzL4bJBe+0LFNwToEpy53hxJnjj5fDo4u/hj6Ba7ZlZh64xqQzfrf9T8Oa
ycJc5VQm+UscFj8B5TNZi7hwdfqoVGsak048GxE7lc6kYbu0+tybTLrbeUjm
eSbqKjhnoZvFpIYaqdlVcJq8uGVINpM4Ujufn4fDmudEXkOlV1X9X3JQh3G9
4f65TNpt/kjKPo9Jjuf0PPbAp2/SzhyGQtFGZd+h1MPfa0RuM6kyfqOnKdTV
Es5YWcqkqs6Gii3Q5fT2Yv0yJr3SGn07AgvblDYrPUBOvzoxZ8I6tY8PblYg
L9Y33VQqmTSv027LCviwUCIh6C2TQsJl5xxqYtKFyT4x7u+YtFjDU6EHFk+T
CZ7cyqTHC7xermrHOVXkPy6BgkH5uY8ZTPqy8FnfKhb65o/e3usceNIl4A88
M9V7tymPSQZM+bN5sGOO6sR/sEmQWB3OZ9KET4Pah3tQt3fnjGf0MunFj1OX
V0HZ160Syv3I7YvIM8eGmJQhtKtvFLrPiiv69wf7W7x3oGCMSZ9elMg2wc7j
M1ZHCbFo6qNbVk2wzjbA5C/8d6Y9RkiYRdPMHixuFmHR9P48lwXjWCSpFWKy
S5xFonqrrEokWOSpcfGgjiSLaoXNOMaw1S9Q2REayS3J2AbVxNLSd/7/+XVx
7BZp3D/+wfhEOLBpr0qSDL73HJKTkGXRk12JU+fCbVdULb0mseiGe8vuR7Bo
Y23iCFyysf3oOQU8z/a5q64ii76H/z14DD6YKfPv7WQWfVw8btISJRZd5Y6U
R0KHQ1KraqewiKP1cGOHMotcH89zVZ3KomPHj1IalL9qeUF0GouSK8NfzIVd
lnGK7bNZ5F26ePSOGouuG1CH6RwWfR0cN84KjlUb2M2Yx6LAcQlH7eHWLd/n
dGqyKPdP0F8GXHD7WLOyFq6TWmr+Ex6qsmFf0maRbWXJzFSYM8y7+A3O+vzn
oN4CFjkfDVh6CKbI3a2Kgd91V725Bhf032/7tZBFvs4/UpV1WPSi/Z75al0W
2e1d0HkaNqw1SmtawqLn5RETvsDzZ1xOuhhgP5NmJeyH4me8S6Lh/hKF7ovw
hQJn+95lLPpku2X9u+UsUlr7+8BPKB40T3ufKUzauefWShZN0Hk1cRQ+VOlw
/At9t+8aDTVj0WjCCm4+3HBaZ9zhVSzSrdPfc9aCRbyTxWFt8MlseSn1NSzS
iPqkYgVnzu/dZm2F670mdV2H6+wOnpuwlkX6V+6vdIN3H5xbkwNzfnBuFMBf
4obyZfCnxB/j9+uRt2cSO/53bLz6U60NuG6gJsAB9qkc7PSAjp0law7AXL/1
iZ3wQYlCdPwmFi1cIJWUAovu324y28qioR9LjLc6sujsoEx/GpQbWaLovp1F
FaMTXjCcWHR8Rp296i4WtReXVbyFYlc3xKzczaLD0cZBcbAvbH5tJryrvHm1
lDOLDlw9PbMVfj/PMPrfrJ23JcNcWLS854z7MlcWad9+vqfzEIuklbeXeHmx
aIWYybWHsHeOx5Jv3iyqDC4t33iYRToaS7vLYdWhHSIV0FfsdG+jD4tkM5W2
S/iyqHSUjM3ge/OQn/5w4FLWcCA88Wl+8fljLBKeelZwF7p038vS8GdRuc6E
FwugJ2/zqivQNSjoyFXoHjlHfs1xFqnvXFOuc+L/unu+DoEtWflzZgWy6FG0
wVMvePvbMk021F75gczCWbRz2enaROhTuUuuDWb4vnCxjUBOo9JtTkDt9xcU
AqGfrfvDmdEsspdkVodDM2/HoBcwOTbOuzKWRdmn1qokX0BurxstfQ8/Tds7
82w85khZs9/ryyxadER0bADaD4+q7bjCIsH9I31h8Fl1QNf4BBbl1SziSsBH
M6SPtsGE6R9PJSWySKptJFktiUXWkr+MFkG7gaHl++Bw1pLiI9Cq50rm8xQW
RaxtW+R0jUVeLW+kplxnkemaF1Ef4IorY/4qqSzSC63LC4DaHr3XmtLwnHcT
np5PZ1Hsx7s2uen/98Xl8G54S/W90oYMzL05PpuNb+Icz9w2u56F+39mTQrN
ZhFrPetEGtzg5qM+mseithKOlONtXDckecszH/PwSpHgbgHuy4ueLlqI/j/S
mW5xB/V8bjS9DFYMTT1ZdpdFg9t6q4KLWNRZ3nF+3D0WzXNRcZgKE1QuxH+E
5TFXI47fx5xV5R6wKkZOHC5OSy1BTquzdmTBqLLEG8WQ2zvJvAp+tkzX3l+G
/crbBpTBE89Peq8oZ1Hxh0nrnCBFTgl7A/f1nZf5+hDnUV/FPfeIRaeLNr9L
gPPNXMJjatFnrWkKGk9YtH3lkRkn4PHWRxkh8NrzVeycZ+j3m9YX/kAjw0Gf
l69ZZHwgIkMAn3jrPlr5hkX31VOyF7xl0ZrAHo/djdhfvuk0+yYWjbT5NPjB
fPPIa2HQ1GHsUzgUmTs9MhN2Ck8oKIaZfWMLvsCr58M4M5txTlu6FuXCF6Ym
lk9gjFizh14Liy5cf7K3Cs7z3NhYD8/Wzvgo/B455AiMd8M6h/CBQ23Iy5CQ
1/V2FoU1PhDYd+D+2aPFznDpvjuKrvBh79jNMnjltpNlG4w5uN2sG77cHHHp
8kcW/db8mqf6CUb7WBjAByePt5yD0nXXha7BO9q9jrlMFu3a4TU8DKs/Fk5o
Z7Fot+XAtf+1Ll83ngEDoljG+mwYlLlgNVRMOW4/BGXKH4RacTD3zkjOSYT7
ezYXCvNYtHjZofHiUKXTLNkTPt6/IECNz6KgDcci18B+o/K/l6GjzLiRZNi1
8fnQEDSY85f+wkxWtbi/AOt8QqOcLhb1bDVmzulG7tqT7OKgtf/miG6YsFq2
4BssGBu0k+7B/Nm+QVIWik+uN1KEt52fhWjCtIe2I5vgjFU+u2Z/xvXPJ043
gTaaijZOMH335eKmL5jz1vMOD8K89y92KPZhHtX9/eI0wKJ6vRo/V1h65pxg
H/QXfay0H+6dbbzlMfzk8kp10zfkUujzcpGfLJrbZ2F1FaZwtU0aodyeI2pb
RpAfnQOdHlBWtca6BD59lt16+g/uI1xckgkfG1j4lULzWU0xNX+R37ytk9eM
oU8y5M3a4fZq1Uc8qLd83BQFITZljJb17RdmU+8GvyAhETbFOLhrzoB6fnuc
zWHp5mHu+v+/L303gwu5Gw29f8BtZw5ruI1j09pXLxeKibNJo8xGXg0ujnsg
80GCTWELWr0/wVfLztU3S7JJIfKB+w8pNu039VOfMgHP9U6xVYXiQ7ezU+G5
r6MaZhPZtOrhZv7/5g74W0tJs+nPu5N0AZqX6r69DRtCvtpelGXTnW3d2s6T
8Dm+0OYtnCMUmGMpx6a4xA8hf2DjqoHAy/Js+qXQ3OSlxKbJ56/6JcCmqnGG
O6awaSg73XaPMpsKUlkTNk1n0+1VPfI7YeWvdPO9Kmzy3r+b3wvv35pm9R2m
taa5Cc1g01ONKsPxM9m0U6v8vAzMPp3412o2mxZGf9M8CV/5CUmvUWOTYfTP
uTHw6ytO+H2oO4diZsxhk5+qZdxOmEbP7Vrh06kqmu/h7jUzlE7MZVPyilhO
OJz/R3f1KCxduqFdex7qeWKyti2sPDyufAd8I2r1/K02mzync602LGBTap/C
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
/jIVV6F10Ks89VHk1Xuo5eRfnKdE4GVjEQ5xXJYt+DSOQ5euneF8gf9cQ2Y7
inLIIFt8/n64/eO7yEpY01FUzIfunkdOyotxSFbsVI8WrJ7v+d4YTrJtumQD
i48vGnCAJWUKa9OgqJs18wk8nXLldZY4h6pa9Hv7x3No80ndRX9hT51iYL0U
h+w6UmXkJ3DI79dYfT687Zld9H4ih5o+L6rdKM2hxMCpiY7wc8m9l02TOVT4
XjecD23kHsyzVeJQbbg1LwA2hm/4EAb3LbbpfAuTk0yUeuDctYr8n///XC/n
+TCcttDklcYUDt3aun6rJkx8aPzMGbpIXF3vBvvlXpvNUeaQ7bgz78/A8hs2
cbumYp0Vy1hucEEsN8EdVnb+uPdpNr7/+/v+HDUOrXXc9Md0Dof8G4NCfOGJ
1xGdCXCxU41s1f/aSX1jwsMOT2funsehVQ0ORcGQedJE0U2dQ9r528wuanDo
5d3Xb3Zqcij2mLZSKNQUkbeW1+JQ9vCD8wmw9u/QnQ/zOdSuEfBtcCGHdrxb
8+K4Lod87t6Y/w3O61LgT9bDfg7PXOUBW5hvpoUt5pDbEaMDH2DeH90FU5dw
aElda0sEvFw/5dQ1GMfq8/8DWXyZ+mUGHPp1jBGxFf4s3nHRG0qq3zr3Zxnq
ek2bV7GcQ4Ni8Uc4MGtI9sAXyL52a95vuHrigr7JRrj+3EO1e1YcEhM78J21
lkPD52rlZ1pziF/1fmkBTHthXPYeVj0fLZ2wjkOWZVE1kyHT88yscuh8l7ye
QdYfd3UjGw5d2HHLywPe3VGoXgJvfBOov7fl0MaTV26+2sShGZ37jjfDaUMp
30e3Yz0Nty907eDQo5vvPaJ2cuixu8f3DOjFvjLaDhWl9S2+waexCrv1nNAP
J//qGsI7DU0/nkLJSscX1rvQDyWem9fBW6mPnydDUxcFNyYcX26vM8mFQ/Ld
VQIBrCz5bNoPdWy7pwq7cui6LKsnGJ4vs0sfhN8GW3IW7+GQiHPz4pNw/S5m
kf5enNe7y2dfQ7XlHH47lFl8pXfcAdR9wYaKNqh1yGavyEHcX8Elughuvhk4
f7MnhxoWjq3eAlef1rve58WhNp07YzreWN/+Zptl0OtEhe87uG6s7Z/MYQ6d
3WE8uApGD354Hw39fSoMqo/geyXbRlkf3C/dwL3KD/v5dtPxI8y6tWXRtqO4
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
s49CVp1dnpDVRytV/96sh3YZJiPTbvYR21RyRAVO4Qare0K9zU3hNvf7KGDD
er3t8KvX4LVgmDIk6Zaa20ccd/nELNiWyZ1TBZPk7cuY8Mc7xZd8+HbB4T7V
vD4yaavY8qGgj56z1R/2wbH9S45sKUReU4zXekPR0Hdmu+CR4uo8f/jAOqax
sBR9UXTn+VOYUZ726ifMD/Xz64K53UZ5/mV9ZPzxnGsg/Jb9Qcf6DfpXIJXr
DhVn+1nGw44bLbWddX1U91E0WK++jzakVOzQhxcub3Rw/Yz+T2v/cwo+UHT8
WAa1Hq7co/q7j9TPjW56DBW1jp6pgvXHGJOy+eircUY73sAdfMNL1bBb4srE
or4+Srxq4L6pv4+eXm9NPARTBe4un/720Z91OSNNULosSG3Mvz6ybA+6vGmk
jyhbtukJDBX9y5g4inz7JzmrwrfVOjKa8JVmwnZDqJKgejACDplsU4n9//Nr
S8PTodZ832sTx/ZT7A6XG0ZwzKomX2Oo5LC2wVesn87H2kadh37vKv8+hHHX
jV4Uje+nhSKbdz8V76cwZ0nH79Bx8wNaOqGfJDzL1x+GrgciZ56DRiOeV31m
9lOI9P3EFjguc9FFBlyX23zzgPp/FdZ3PJVfGADwu6yQRGRWRGWPKKtzKlJ+
iCIjoyRCRmSkIoRkNJSKpNKwy4qMyk5SyCoNmdmze6/r3uv39Nf3c95z3uc5
53nO5/O+VJQvLvL2M2h9kP5sEHQP90sQVaYi4aLLxmrggdDa/H+ajZhtfalB
RTsUHyV+BbPZ6NMymFSg9LJ6OxX9adQ8KaVNRQpSrBdBYCHny0w+PSoy8bVs
tgeLDdhPToPSG4MGV2EqehHpzpAG9x4mx5iAH2PNdnMZUtHZ8YLKxyDfj7AP
dWD5o5wVe3Mq2t52ayoEvDrVlnobHL5556uyDexnMijXE+Q/m+scCpp6b7Ms
PU5FSsYHPvK6UFHDvN0bVfC0bUfyRncqEolkBxmDJB0po2NgS8wXwSovKrrx
9tKBn2DSk9xdp05T0Vx05WJJEBVVz3cEToFJJw+2zII6HiXTK+BKV9Dko2Aq
+m9Y/EM/eNm/a7olhopa2UEbeWOpSPLLnrl/ih1r6fyYREVp3rl+tteoSPBH
8/Ng8Mkj6vrnN6EuAZ/stJKpaPDD5Zfm4Gyjdr3lXSpSyb5/zge8+/aZfwjY
4lWv8jmVima228i2gb613inToLnjXemRHCpirUtwks6lIr/eSAFXMLmkIiQE
PC7j4JgCiuU1Bd0By17at97Lp6LolKDqtAIqytCYUC8Frc78Xvu7koqKFF61
e1RR0XW3pPZwULJg30PdWiqSaZ6INAXtdubnHQR9FX6bXGihom2GMt8JH6ko
Ql8rRxHkP83zJaiNitq3JDwpAvdMLHqXgEUBwpTSXth/6t9znaD/BULEDJio
onJj4BsVWXTgAqU+KtI86lm4E1QRfNq6MExFsXqB68pGqKiPK0GzCQz+uI4o
Ogr3jV9K8CbYPO2ldgs8GkTgLJmE/ks95zw6RUWUtT5Sp8BaUy8TuzkqGmtq
TcoD42WKN5eDpk3P9drAwlq7sE7w8sbdST/AjVPZlms5aehEq2+UCOiakboo
Bh6uq5ytWktDH1+ddKsGvQzVT30A+RdtPH5so6H0rplZWwUaenclwSkULGzy
Hh02pKEKBy6jnftoaDlx2NYalD9emxcA1pcMPf5kTEPBDWNCOvtpyF/yj9JB
MLPsT9UBCxrarRohqmVJQ7w18l8xSOaOXVNrTUPHtz+o+3WEhoiNt60nwMCr
fnPOJ2hIY9sJhV+grFeeqqUrDfWF3Ctu96Yhns7k3zd8aOhGmc2h56CXxUyV
/BkamjflMF0Adx2e7aGBWqnbP1D8aUix+F5ZPHjquYThXfDAtkzu++E0dI2r
dHAI/MT3t3gYVJH8qWR2Gc4XIjulGE1DHgz5Q8fB2ilnSekEGpJUuJZnk0hD
VhynT9iCdq0XxytTaKhXPkm/E2SU0zm+ge0SUm5L4KIJT3bwXRryXo56EQ52
G1lMXrpHg+9OxeFn4A+ZlIQscK5CalnyKeQ/lE4YAq82vFekPKMhtE2qvwuM
qy76KPoc1j/kTpYGv5ltlvGqpKE3Q1zNY+D8pA3eVEVDAf3GF2Pe0ZB4ecit
VvDOfwlcbaD+hpivd5uh33deJkR+pKHSgFdqCaDi0NeJCz00VCNrs4ejl4YG
Ary0lEHnO0MWByehPtv40samaKiRXcFcBsX0bm7dOAf1O29s+wm8I3ddcwD8
zTch1Euio4cuSeTVZDr66rhXexPYsVW92Qiceu32/iBY5hq01hrMf2BmoMFJ
R2Z1nXF3wYHzZkvpIF0w+XwmPx2p3G2+0QTOtjVVzoHKojbTQqJ0tC2gl9wL
6j4KjuBaT0c812+kngfPz9uP/wIL1xD/EMXo6KS9smyrHB2ZNna/4JenI1f5
gR1rQRnqKfc1SnRUFx0zLQ0+HKy+owOq7/I1aFOjo92zn/Kp6nQ0VvK3lAHy
5WQWhx2iI1p/hSfpMB25JSZ48YB/e7z8Ex3piBn6sI0NWn4dvGbiREdFXkmP
l11grF2e3XWCjrS+3u/qA4s5qtU+edHRRYPNdHfvf3nGnSLAlWGlIrUwOrph
g45uB62SxRe0wDdVs7aqsXQ0HHLIfBbEsde8iVfoaEGurakUrDp1XmUMFLpp
HTMOlu3OW669RUdqqsFbvoJzB8anf4Bt9wWz3mbS0bm9HX3T4DcNf8d1T+jo
9M+0e8Zg7d4PE4x/43jCpOZTOpIsKuWtKKMjVcIxdY1y6J+6ubUhuKV4a7HB
WzoyPvcrygQsyKgyOQ1eJG8QXVVHR/0SQ/LOoP0bh1VeILWvImscNB5PHjGt
p6PBnqTy4+BnK2bb8Gfoq2UAawXMzlQo52+joy5HzcLpdjrq62FYmHTQkWDj
TIQXSDNP6b72hY5SKUab3oJqtSFXO8GEtaR4vX46UuhcuB4IkuXVmaHg/Pd+
WT0mHYUkJix/BGVqNyj0g5ldnyXEyUvoIrPBQIOyhE7xuFj5g4lcLuc/cS4h
mzLHsl9cS0h3a17EAPjdbsFdkHcJUcLmYjaAn2QP12mAUR15tM0CS6itm9cn
HnTG397/U1D8wvosoSWUHFduqii8hBYS6I7/3HE0x9dLCvwhOxAJtohquZaC
G22HtLW3LiFPEb9jZWD+9S33e0CpdT6D4mpLKFwz8qgduPuU6I7X4HEjnRVt
oyXEOnIp1xvMeXJIPB4M680Q8PVZQlnndlGqz4D7dUYo/ktI7qnqgBTIyLMZ
W3VxCdk2frlpCSZR5ZadwG2q6c49z5dQxYcZnif5S+iXUcPGWTD67r5e6YIl
RBTfUk4qXUJTvZm+OmDuTHetKSi/TjF70/sltMXTe0MueLRQ1zYPNOU/T2T0
LKFmngMF978uIbMNb4sfgv2XZjdfGlhCOnlCB9sGl5CLizhnF7hH03Ix+u8S
ehFunvQK9PdTlJgCk+d76Lp0OEdVjYrm0hLi8pt+YAGanl6bmLUM73W07ikC
a6frLtaAIUd0+rXYkOfnbp7DoIvwWn5X0MRLRb6Rj4ECXXO/OfIzUInSCi0E
fC1gTv+1gYH+BKTPi21loBqL9aXp4JeBzqjPoAd/wAhJgYGSX/lE8IDVz66s
iIOaQoVaW5QZaLF6fc0kaDKlrzIDKhpm5xRqMxDPmacBDSBv/WBxM2gXlWxi
r8tA/eSKrMN6MP89uckLrM9+TdEwYKAdq/6sLgINJjDtn2csHTZKmjKQL4Uw
aw6WXvG8EQIW3b92c8KMgSpFrvBvN4d1NKkXOmD4MF/EM0sGGp12nhgHRfK1
KyfA636jEsesGchYRNsiF/yvz964AOy72BJ0yYmB+BR5tP86M1DslhwaFTzo
MGj61JOB1t+OGtzuxUAvx3ZuOgjO/hcw9M2bgXr7ZbvoYOq35gxxHwaiPtRf
oxDBQAP9g5F+oL1308EgMHr7tbN8lxlIuuUPSgOXY754jYGi/QybTdEMZCY9
1x0EbvbK0b4Cli/XuxkkMlBoF6f6fjCDvLvxMJhtObJbthDiqVRrDJQz0Gqx
Fx8CXjNQnGh/dzzofmI+Y/Yd1K9Q9XFrDfRh4WZEN5h/mClDqWWgkbMZZcfB
Tj/JP67gE+nxqpEGBsLqcX/1GhloyUVNaRdo50nutAGbiAmUJ+ADR0tToSYG
Otf3OPMAqBOn4BcGah+jTmWCm69mF9R/ZiAhPk0PjTYGctPBc+Hgvbe0+1d/
MtCRZA6eu+Cuds0vo2CafJLvmhEGGs6eEgoEFb5q4GDw+Ai/htoEA93of3hL
HzwTbVpjCJpErbprNcdA29duan8IbtYfNygC95DNoncQltHcm/XsHlDn8HLa
b/Bp0VStPhHGb48mLoL76sz3UkjLqEuDQNHgXEY7KDvo+uC63fsLDoCLv7mF
j4ouo8iIGraa8jJKHQ+ingIvcZAlz4Hr/bf/tlOBOOv5vzuAHzv0qXdAx90J
EeFqy6hzxEA5FbTX9LvaCH5Jkup7+98y2pVcKzYFMh8l0f+C8UlSt/Wsl9Gz
xWwHhSPLyGQ02FcNfJrh86XUbhlV2gjqvrJfRg/zFMrYYMCTufQgz2V0Pyxu
fBL8eZ5QOgXmofd1JYnLqNB7Q7bNSzj/1uyi/0aW0a0rzd1KY8tI2WrTFU2w
wc506zkw7/KuRHk+JuKW1my9DEazBi4lgonl6shpDRN9y/E04BRkov0j4tf3
gLWjSktd65loxjrUiyDGRElVXUl8oKBj711HbSb6zO9e7guGPYgwuAv6qv/k
nbRiIotYhz4+a4ibtv3SZtBofz8t0YWJXF8K/1F3ZaKhERmyHjiVvRy/7TYT
VdQEKwaBvK8Sdp4DZzN/aotlMpFE85WRdU+ZqBJrXDoEfjoefOzJWyYqSjnL
Lgd/anfpvgHHGl/v5K1jou0WkrOG4PunPvE+YKWCXnDdABOZINPALYNMJCSa
HWoGEsTqu+ppTHRDVzaKj85EO2ueuvGDAkphla5kFqJK1YffA42NR8+9BLfk
W6cWcLMQf2fN8XnwwzOtYA0eFro6xBbgl2AhsfjZ+9dBpQBOvmdg0E2los0b
WIiRMFZlsZGFatsuM4+AqUfMV6krsxA363aciRoLlRzINDEDM066fuzQZKHl
7FV23NtZaJ1rvp80KB5yvIKsx0LSbuc4VPVZaB/b+qUVuLKlrDN7L+zjqMPE
PkMWemJgessHlGNVGGUeZaHGzJoe5WMsNOqGSE/AtZklJwrBfSI5ny1Os9Dr
09UqU94stMbibIaADwtJFD3Iv+vPQu95c+73gUU89tWzoIJbj51+MAsFl+YU
WYOjV70KmkCb1uW2rkcslFR66icd3LefWMsE3yj+pkgWsdAQU/aNO/ik/nlh
APhHVsJyEMwYqNSaARvnfjcrFrOQs27a5YPgT28tycESFvr688ERFigVtTAV
UsZCua/Ct7eDZn93PFpfzkKtIkuvf1SxkOX++gr3ahZaSBE4dwp8xpCV2PqO
hbBFims4WOD9MCYGfNd9+fTe91AXz3cdAeBBhvHFENDuTl9FzgcWUhboE+Vu
YaEAns4f4mDkqzIe5yEWOul0eksu+F7dZF3RPw/N+GhOspCqjnnPWdBvg7Fx
ECg1ZT/jNMtCbe+3hg+Cu3/G5c6Ad+ZLb5oS2ah9//DOG2AqMzb5FbjGRzdd
WYCNVEcSsguE2OiX1/3N8+A9Xy37ZbAzT/sq9zo22rjq5tXNYOk+oQ598Pk7
jhF3ETbq9vB7FQmeIzwuSQSNu9VkhMTYSPHWOa1o0Hsfe89jsF7yzStPLTY6
deaUtL4NGzWh29vuggOnghdqwAkXk8fyR9loPGMz+6gDGzHsHwW6gqoX3w5m
g2Ys96mnjmykZpi5sxD8toqC013YaP2Y43g1+K6QlN4MVozLxY+AtfK0cKsT
bLRKfXb0CDjj8r7VyIuNsmZcK+tPs1GHW67wFzBeMUA4xpuN8mP6VLPA8cnD
iYWgXZbB8D4fqMdQ6yUqOKstHccAxaX4rdaHsFF0iMFtKzC1b4+8B+j2Z+dJ
3ctsdMTwdRALrF1/spYUzUYKlXWRwo/Z6Loc1+JGcKeIaYYWaHOvx74ok41S
0peEakCN26PfWsCeAHT55VM26j0nUv4GzDOiSreBSWFCqxPy2ChsHfXaD7D3
+nrKKJhqHNDwsJqNjhlsFCwGT9QHRHwFheN8N3C+ZSNJgc6E3eBFZz+2BZi1
D/FuaGaj3cGvs4JBc9JBjXBQroDRc+ATGzmzIy4ngZr8jOpicDJrm2HrJNQx
waVcZgrqdjY2QAdsPpZ7LGCejfS8289GgI3cjRveg3L2t1NLRFbQNbXsEwug
vFcdHxUcNVWX1l6/gn7N5OIGsRXkZOH7uwfcffFv4ozBCqrhDlEj7FpB2/a/
tMOg2fIHAVPnFdRW6bDwEjQSORMtdmwFnZ0V6X94cwVphsX67kpeQZRDCaoY
7FXP1BO9u4IuWbl4PQWX237EVoMSxTvYM89XUEVDwFW9rBXUc8lgxQZsK6hO
4K5bQV9yk9XoYIzevi5iPbxf5iTOaF5BhzuptZUfVtDH7p1co2CeJmds4fcV
ZNjM+qzyewWl8z4o0gVH5vZo7QeVFquobZwEvMe5C1pNwFtyQosUwD/tT154
ihDwrp+OgU3grIjZpmYwUilq7KQEAb8PlETnQa6rimHxoPiNV63vNhDwYeZa
gZ+g3pIJaQS8/eDK/nWqBDzfV/HMEpwj+J/cpEbArTI+k1tA0sJkuoEBAd/L
f5FqCV7aYzRiBTIjojcGGBFw40cxvinw/IvlsdX7CHj918NT8QcJOOrY75jP
YPuDXNoQWNRefMbCioCnuKKCX4MbVafF3oFzjwzUZo5BHmKV2G8PAla19bBK
8iTgL+JlNVngZVmmh3ogAf91v3JuLxid+5B5ANxb3X+qNZiArfJYd76DE/N/
TgyBycWmq0vjCDjjZItdOyiuuu/yCLjFoXbHqWsEzHCjGd0GF3dqaT8Ak8n7
0kbvEfA1s2G5wVQCnhwTUBRII+CUwcd9/z0hYIn63kPJeQTsdVtjIg18TX+t
3gJu4t63zrmEgMMmpVf9Bhc3PmubAImUtHmz1wQcHJLicQi80BPTbwXu6j59
M+oN7EdEKzoJjJ0Ta7gF+ibGvWx8R8Axzk2r9WoIWOZXkak56NDklnKwnoCP
BazalAL+/SDtmAp+kr3ZMNsMcW8YFvJ9IOAPJzRdNoNv1VPyGjsIWGyTx9Qw
KOG2NZ8O3vHpVk3tJeB1t0vvh32Fc6nRFm6Dbsg0LegXAf/Y3y+eAjaZv5xu
+OfZlXb/QXh+1V09BIz04fkeDVoHsnWKhuDe1RU3vgKjzf2K+8DgauazPcME
fFQxWXMvSJLtDDcEy662nxIdJ2CPnvPr9MBLsjVWu8AOkpNPJpWAT56sPVIF
Fv5ZMP4BbmAGmBWyCfhV7O24JdCJZRWwDE7F9IVXChBxi5z5sugaIi78e/ec
DLgu+c2mQmEinhj+y24HyZ1Sb8bAvKFjHcJiRLybU6BB+5+Vd0wRODUUG/p5
AxG7llpqaG4k4ixXvWvHwYT+K3FaiIgFB6O3+ZsS8UBzT8jJQ0Rs43et0wv0
qFHaFAIy84efUW2JOMKl14lgR8SlsQp0SfDe44vvztgTcc/whFIgqOq31+AR
WG6YLbjbhYjl+LgmPcEFizTBIPDdpTAytw8Rc9qEZZMCiDja6MMfIfCH7cA1
dfDF0eWZgVgYB+1olL5OxCGR72r4Mom4LVpEewuYd4zgvAMU8RZVM3lNxH4e
75/EgzW2x2pvguc9uugW9UTsJv6u0hH8Fv+X1xl0kV61EvKBiNmJwsrVoIdz
3swMKMvsZrHaiXhk3rdHogPi8qAqSVB0fI/81R9EnNr3wvbGChF7bhSWiuIk
4TcWutkPwPMLu888BnsiRp/KCpKw883ycGtQw3dI6hgozxX6W3ULCS/e/r5B
E1RUPnJiB3iLfsG6QIWEzWpcqE3gjELNyc9gU2+OIWEXCYuSvnCrgPPhtGPb
waTtgXuL95Ew85Zxj5M5CUvU/qm6DspVDhy8AT44kjtOsifh9qcuUm4nSPj0
GvogpxcJz17+ZqkCFrWIXtUANyucIJy6CM/dOQhjkSSck2bAYRFFwpMCHwP+
OdYgN/jwKglLP2sPywID1tbeLgWTUhRGcu+S8B+fZvcj90g4pqNRxQM8wzY9
EgSGR3Us5GSS8JOmwYZ2sM7+kW4H6LwYyfmoioSLe9oCJWtIuOPgY2IAKGSd
vz8QHGqVDBX4CPXpeGxe30XC91JOZRX0wXzfKyYV7L2+M5UGSvSlayUvwD7l
BvrE/pKw3dezZ0xAWdfjf53B0tC1TwgsyDcrKbERHDBqHZcBnzITwirZJCzw
OK3kD7jpQgx5ArzZ6+r6disZ142cPeehTsZjVwOMjTXIuFrkLtXhn63XtU6A
7yN09zsfIWOjHHXB0H8O7rG9DHYqCivnO5BxguKPxw1gIV+/WiOYQfpaquZN
xn667r7yAWTM/2QHug+a5R/RLwT3frqe2nKejCsiB7KZYEZ9+CbKBTLOZRX7
60SR8SuBUPdDYIC6+JwTuOm/mzk3UshY8dvxnQ05ZGzYeI7Y/ZKMf1W2XDMv
I2PGD5KLO1jS3a7lB7ok7C00qidjYa/SJtUOMm4KOSR0B6zdLymWCjrat+lU
9ZKxt36RXi84XcLnRfpKxsl6a9zkfsH6qDrStiEyjvPsP8bDQcEDbayadh4K
li6QW5MI/4Q8f405HoDSWs/Y9VspeA1uMX6hAU5vVfkNXklLuTACPpWe9gk1
puAetcPTvlYUHM+7+Oi9DQV3ya7I94NbCORsTlsK9nwkOMoFetv96djgSMFy
iX+3i1+j4OxVBbfUQd29a0f1QS3lqnaZZxR8LuRwb2YWBW+75dtpWkLBzsTp
dWKVFDycWffSErzjZfbgJNiuQ7GOr6FgGSfh+i+NFGxN1L/I+YmC3xkV3anv
p+C4mrfy239T8OiZ99P6YJnjSRr3PAVnsQKcDhE5sJl1gWcChQNvP9ofWgKG
dhZKvQVXPw/zUBHlwB/Xmt9zBpdaCVsugh8ycnSlxDmw19CON6e1OTCH78fP
Nw058E/m/dfq/3FgKY8wbRPwtXB98EGwJTp9I5cLB057/lOTD7S2WvtmLbgo
9W3n5hQOHGygcCkkDeKPTrZngVw/Vn0rBEPlzwSLP+TA9cOL+Z75HDhcUKDt
GqjFbZidDqoryVQ7f+bAJrQNF93AXp59PadAG41TWQ4jHNjh6Oq093MQl+Qd
IjEP84QXP2XBx8fnIiXInBgFYie0hhN7103MZ1py4ir9vkdqbpy4YlO4YEAo
J/b/dml1SiEnrpUxunDoNSc+8CORQmjhxGntFOf3HZxYQVPKzK2LE1vuEJMJ
Bw2XDx+6BPof37bb+ycnviDl/q39FydOXR/46QtodGNhbBJU6Ta+PDTIibVE
0x2ucnJhU+aJxIsSXNgh/7mgswIXttVVp18Gf45/fBgDrjHUXJlX5ML0ryuL
0vu58O35VJM/h7jwl6B+nWAHLlxueUvngxcXfkWr4LhTwYX59iY+z/hnhu3h
EnAwUvBuWwMX1kjb793VyIVr43NpU+CVuDNn6KD+DrPc8SYurH5Q2+thDxcm
26Vf6gAPpAUNdYN7BRatJFdxYxNbmls4uPqO2dE4ULmm9sokPzf+7hByWm81
N76cOlxhBu7mqiF4iHHjR2nd++IPcWPX/zwlL/ly4y4xlRiCHzdWEE/fxgFq
ZDW38l+EuFShDBkwcKwuGIOSJ9+XGURx481/wm/Egqn+ouZXwA5x3nuqqdzY
Q7DFTu4RNx77vvTqJDid+2PJDWz+tD1w9XNu/MS9J3/DF24svPX71bi/3Njc
dUhOdg0Prgo8esBZngdHHO+XuAkKoCSLW6C6r4ujuw4Ppt2/1XBLjwd31v1y
ygZdaF97i8Gzotox/fY8WPnDL+cdR3nwrikRPiewIKrS9vlZHhxfFzZhHsaD
K2KF303G8WCnK77C99J58IYou5tK5Tx40nvyAh+NBxt+1nvqAMZWve2MAacz
RqLP26zC7727+9bbr8JydSXCq31XYd2B0tcSkaswR1Lc7q2mvHgrsWq61Z8X
75f9NbLpFi9+521br5HOC/8h0SsKU7xY0nZASxX0Ol+iqANSN+m9NOfiw/MX
uVcWufnwLeZt3RZ/Pqyyq2ekIZgPDwt/ota28uG40aaKxgU+LNpaUZtkyI9f
9twaYXryY6VUpQt+vvx4G7m49kIIP26V02nJSOTH9yQvilfLr8ZLFso665RX
47NWWSpbHVfjiNOp4V9ABvtx6Hqn1XjwhaygASi9M7Ben2cN1vBfOeECju09
GHsSfDMtGR+ZuQbvCD5/Oql6DQ7j7p4QGBPE6I3UykbjtXgkv+7CDK8QLlr5
FB5qLYSPK89k3QWNeNG6dHDcaaz2W5oQ/h98OB3I
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 6, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 6}}, False, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.827283715753475*^9, 3.8272840341086674`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"5ea033fb-5b58-4fa2-bbcf-06c27497137b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
x5AFPG4+VtoVhf4PAwyoog==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1XlYjd27B/AiTaI0EEJlqISSSJG+JVPFSymJBlGiEIpSKhUV0jxPu3nv
xr13UhlDSBISihcNSqUUkRCOc577d8519j/7+lzrXs/zrOu77rWUHA+ZO40R
EBD4Iigg8N///+8XWoYgvZPCKdtXGvyPA8swS9R7ft/u9Yz9ypC0eF/Fm7Eb
/tcGhpp1y05bMj5ehvnPU2qe+dswPlKGWlfF/WZmOxgfLsPVg70WCWftGbuW
IXD6btNtD3Yzdi4De+8kU8uOPYydyqAispvz440LY7syfBDnVem8dmO8vQzO
rivN77YcZbyxDMsOyT+pEfJijDKMLuoyvdHpw1irDJ+cplt1O/ozVivDCnmN
C9GcU4yVy3Brv5ToC6cgxgplmDEh+7227WnG0mU4bvvZ9ItcCOPxf8cLTU/U
jYQy/sWHwKAZy3XVWcaf+GjaFvCgV/o8414+KiPnhda6hTNu5yNDws9aemoE
4xY+WCE+n/IDIhk/4WOr3CG2QmUU4zt8VDUbNtuejmZcxYe/iIbd9pUxjMv4
+BSbKrXTPpZxAR+bz1fvfqYdxzibj9OLWvpEBeIZp/NhOFlkWvtnciwfs3yX
puh+SmB8lg+JoMJ1Ah2JjAP40F7/uW3pyyTGvnw0jElUT3uZzPjgX68+9OL2
+xTGLnzs2P2hcb97GmMHPha0un31DklnbMXHq6xYufzcDMbr+DDqbxznFcBi
rM9HS6fVszGfyUv46Bi3qvOMfyZjVT4Sfe9H5E7PYqzIh97Qk+IGFnkyH5uM
j92pn5TNeCIffg4XGiUiyH94yLklbLlwVg7jYR7kwn6qj80h9/NgnbjQc4lB
LuMuHoJWTbKaUU1+zUPc2olbM3TzGD/m4fRs+2gOm3yXhwKtK9cbtuUzvsqD
/evwpefKyTwefq3trbeex2ZcxIOt6JSg7nxyCg8jTyf1JGlzGEfx8MNt46BR
DzmYB/Mg/38UXAuoH3nwq7zn3aFbyNiTh2mdmQ833CHv46F5oqzN+fVFjG15
+LNjbLvZI7IlD3t2ewZH+BYzNuFhWV6k/sufZAMeUtyqf1i4lzBexsOziktv
q76SF/BQ2CM2WhpWynguD7qN+03dJbiMp/NQWW+/r8KcPJGHDZcW1+2NJwvx
4PnF5MWiVvIvLnSndwuHLeFRP3GRyDrEXhRCfs/FjoyfX7Uekt9wcbnWPHiq
Cp9xIxehCSuKBcPJd7iYvOfTo7p68hUuKt4t7JdZVkb9w8XUrssHlvqROVyM
P1pupNBFzuDC8N+kmIlaFxnHcSH6O3R+fjj57N/5FWvqyzrIJ7nYMzX9zUKT
csbHuKgq1wpPzCAf4OKl8AnxFR1key4m/K7/tF75EuXBxSPBzBQPa/Kmv/WN
QsUmd8jGXAx2yo3MXFHBWJeLkBQRDclMsgYX7N6mV3ISlZQHF7J8c4PJ3uSp
XPQ6xlTrvSBLcfHMvn5fnEgV43Fc2HkJiw45kb+U4uuVIM1XXPK7UpSFjXrM
UrvMuKEUur+zLb7FkC+WQnvqMpuxI+SsUnwWua4XueEK4+hSXFWMDjv4hHyi
FJnsqTcnbbpK90EpJHCo5jibvLUUai2P19j/Jq8qhcEl8XeJFtcYzylFm4C9
yrcosnQpzAqX/xq5Tf5Rgs1nxi57L3udcXcJslt2xvccJDeWYMh0Zb4Kh3y5
BKwt35PWvCIXlaDUNOXGHvkbjONLUBQxZKazhRxQgocjH884XyO7l0DQz66J
I11N510J0sqvuKqtIhuV4IfMg433d5A1SzAqabV5RShZoQTT1lm8lKkijynB
hDT/uq3/kgeL8XjjGE+HP+SXxVhid/eqwuybdP4Uw/T40gvhBmR+MTx+H3PS
tSGnFsNypPkfeR/y2WLoBUaoKrDJHsVY6CBlYnKf7FiM6SXjJe16yWbFqK/7
x8h+xS3GesVImft6mqQjeV4xDNVmu/9OIksU47L8ut+S98nDRdDU09ss9I7c
XQTjdzomBsq36TwtwvYBn3dzN5Ari8A6Mq9Fw5PMLsJB2/cmRwvJ0UUY2nDj
1epeckAROq/rTIpSqGHsVoQXWlGf7tiSzYuQ4qjsr+JHNi5CwZ2JEolJ5PlF
8Mg0GBt1nSxfhEBOQutpkTuURxEeGdqNna5FHixEmt+S2V/3kJsLIckTiZgf
Ta4pxC7PSjkXLrmoEH67dVeMbSKnFqJuRrDre/G7jM8U4vacQzXqRuQjhZjV
X+uz7hjZoRBVg0YB4lfJJoXYaTIzzGuIrFUIpc0bctqU79H9WIgUZT57wj6y
RCE2+tvN2RtJHi6AyIPVq0dukNsLgAcfI0TG1zKuK8D0gGD1c1rkygJUlvxQ
bzxBzilAW0nbuYXZ5MgCbBRY7ddYT/YqwIrBnoacIbJLAVYK/i7SmHGf8iiA
+PsH699ZkFcV4PF9zhxVX/K8Amw399B2LyJPLMDHhx1Pzz8kCxRgZn32vY1C
dbSfOPiZpxkiq0V+zEHQOJuY+dbkWxxolt3j558hszlIFjvt+Y5NjuXANDtN
KLKOHMhB6UjR9uA/ZDcOrmxf9e3UkgeMrTlIKRNcq7SVbMRBgEZ7//KTZE0O
bBMFC6OryPIcXLAZvSXSShbiYIIs9EMm1zP+yIbw+CblPi1yKxvirm+ch0PJ
tWxUvl2TFFRGvsRGxfYl1jffk9PZCNVw7lMZ85D6mw1PjkbugDH5GBubJx3p
3BNOdmQjz3PajEt88iY2Zk3remXQTdZjY4zt7TdRog2UBxty8kefDeiRJ7Kh
5G4gOepLHs1Hwvi0T7LV5Hf5iDxQV+Ot+IjyyEceJ+THTUvy5Xx0FnBtRfzI
efk4Nrj53o0Kcmw+jlh0FUh+Jwfko+1VWWi59GPaT/mI2TlLM1SVvDUfF3b5
KJmuJq/Kh8bQlrsq1uQF+di09LxwvC9ZPh/5DRd8xM6RhfKRmrNNyoFLHszD
vMuyDzRryc/z4KTxxXfkHflWHj4O30ldJvKEzts8OAbKxG5fRE7OQ/nKvYMO
RuTgPLxRq25XciAfyUPN+pXPPAPIdnk4Gcu5PpxMXpuHA4YhZWpssnYe9KU3
7ei+S56Zh/fyAoZVb8kSeXip4Xt+7zfyl1zozYpYGyTdSHnkwnh17b1Ly8gN
uVgzpls434pcmYu4pbrX7nqRc3Kx9P25NLkL5At/n6fTcPFqCdk3F9K7jXPX
PSI750LjsufT2J/kzbm49dmtZmjqU9pPufhnjtrdXbrkebm4a39MaLsJeWIu
WpxqLbYeIP/OgaGMTa5BJLkvB96BXuL3+OTGHCxWW1525za5OgdtrvFnHf4l
F+VAdfCGZNhPcnwO1G963P0zoYn6Owdzzzt9M1YgH8zB6g8nnJyWkm1y4Je4
e9htG9koBw9ePt58JpCslQNbzdFJT4rJ03KQnms6WfkmWfjv94T+2PK0h/w5
G7FxLp7LJZ8x/jcbzoZh0p9VyXXZUKk2VXExIfOzkb361cN/9pLTs3EyTXDz
oljy2WzY2FXM3lpJPpaN9WMSCvxekB2zMfWwuEXHL7JZNgy+9ZfzFz5nvDwb
XV/jrYyNyHOykXy1R7XyCFkqG5ctNPrjI8mjWbCUVlrXxyV3ZWFnxtx+jXby
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
jCdLgf+nwf+EpQxZQKDXrufWy5T/838B3rdIcg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
IzcWYcRBZauGX2RxEYy/tWWlT3vKHFuEpi8h681MySFFuF7QMin3EHlfEfKt
dNtCrpAti2Ctqmn+IZU8pQibb01o031DliuCg93wgwN6P2OuLUTcMaM+WiPJ
DwpRVx3CWaRPzi6EwfIDQVIzcnQh+GrzTK7ZkYMLsf3rTl0Jl3ywEF+eKOd9
jybbFiJpsfdlSSbZ5O/8SNei7hry+EJ88Bu0Ve47eUAhUge1a8eOec7cWoDX
b0xGvzIniwqQWthkMMmVHFWAGWv7JtRcJV8qwJZhZ9sMC8mHC+DVpcv17SLP
KcDcPPOxGhov6PlRgHNFzxzugSxfAJOxy/p0uJIf3Qe31rJtZxQ57T7mPnVR
Ki8mh9xH390T+n7+St5xH0a663KODXpJ18N9DOutaZQzn6x3Hw8bemw3HCUr
3EdHhfXm+Ehycz5uReat0HhCluZjX/LEqYGfybn58BykdSJpWA1zeD7y3Mbw
Ek3IHvl41Ev0rPEoeUU+Rtz4PP1kCnlSPp6n+gSdf0RWyMemN3YHlOT/Za7J
Q7mlltyA0WRRHvYam69sX0JOyEPVGNsff3aTw/LgrZSzz/YK2TMPZ/r29Tmd
SnbMg75mvq5TPdk0D0vt1FPt+76i48lD8is/b4OFZPk8hHk6fNdyJ9fkIrpg
qMfAm+TcXMimR66v5ZGv5cJLr4xT20o+kYuuJd/3OQypZbbPRU9CXHX9PPLC
XOwM277W1IU8Mhc5PX3GGIWRFXLBm2s6WbGI3J4Do+827i9ayY9ykM/7atdb
+TUzPwcbQn9ovdpKPpuDo30OKB6/SXbKwUxtlyEtj8lGOXji6jHcpm8d8/Ac
TE08Uj18Mrk9G3xNVeWJ5mRhNu5uTux7ags5IBtTnl4e4uFLdshG33GH1i6I
JhtlI/7JrSHafLJKNq4m2i1+9pLckIWQJSrJH5vJgizoGcoPG8Kpp/dZFh4W
y8/dNIzsnoVZasdOZU0jb8zCnnaNk9kLyeZZaD0Z5u+ykjw7C1o26TqZLmTl
LCw2WnS34yS5NROjD3tNWnSTLMlEueZU3ZYs8s1MaHupG196QHbNRPCjFeOT
68j2mbCteexXpPCGeWYmOgZXmIwbTh6diYC6tqM9s8g9GSi7NMRBz45cmYGj
hwpmlxwkZ2Qgpez5dvkQsl8GRBo5Y1yzyDszsDhxcpg1n2yVgb5aeuMiHpON
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ebUYr3X00MJe6oJaWHyRTHwr+plxSy1uyXgkLllJHqrFhZV6vdFHyCI83Jzk
JTbpH8ZsKR5CO6PmqheQZ/CgZ33gwb6/NK/HwyZX/dNH5w4zHTws4lju22xP
tuAhbnjg78sM8mkeRvS2PVHuIXvy8H5XZbXctC/M9iJ42JfhcKPZgpzKg+O+
7gfHPRiz83kwlXkttyaGXMFDt+aJyS87af4FD66lhiN9C74yvZ+HnlmKm7xP
fqXz42PxrhfOZqlkOT7Ug/7uzH1Pns2HzUV3hSDxEXpf87HxuPq2nP0jdH58
/Ja/YTMzmbo5H7X9DjpBH8j7+RCqumPxcec3ul98DBXO+KkY+43eR3xsqmj0
CRUdZXosH0aDvTaXj5ML+Hiy49fTrieM2Xw+9F7NfntlxnfGLXy0swfnsN8y
Zo3wsdsz0NTK4Af9HgWYye82jPAiTxJgZ+BYidDXZCUBVgWWT+0z+8l4iQA3
I3TZcyx+0fkIcP72/Mw5Sr+ZflCAEs0OEcVMxqwzAjytUfPoHCQ7C1DYO9f3
vd0fxj4C7Fs5SzqrmDHbXwCR7Te0EfiX6fcFGGKdsVfWYeH/O0MAv01dczvD
yRwBXq1vnxb8hjG7XoCEg8v99s8SYnqDAH9uyi0o5jFmdwowR+MA68ilMUz/
KoBUdER29x+yUB2qnbfLhjQIM55Yh2f6Iha+HBFm/Yw6LJyvUmz7ZCzTNepw
53O4afd2MaYvqUPDtHFh2uHiTNevg5pQUX/dmXGMjeqQ+bfe46KFLOONdei1
6Slvjfhf/w/IU6r4
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdlXc01mH/gB8jq2EXkl1WZmQlX4QyGkRSD0o0qFQUEYpCEUUiKaWMUFJm
sudjlZFVMjKzV0j8zu+8j8/nPW//dK5zXff9ue/7eyB88qKpPS2JRJqhIZH+
/////eerfoMh+ugurf8QDyHI5C41YreXymJElMLZrE66fcBa2vKUnbfNqaxA
SH2LLm32tqLyTqLSUeicsfExKqsQeReGzR7ftaGyJnFrs53RkWo7KmsTiafZ
jcx7T/2HfbQJcUa7pMXOM1SvR/xmeZ+j8sOJ6vUJB8ddpuVtV6jeiNh5kedr
Kb0blY2JJdl+o4I+DyqbEJP2my0GT3pT1xsTGjxy9x8m3YT1xefYmFrsfals
QGxZHzegRL5N5b3ENfKU0Qy3P5xnS7LRdcp8AHjShHGs4+671P33EU1HfKqH
OYKofh+RHbotoNIpGM7/fJ2XJQdvCMyL9feYTPAJpbI+cZj7YiJ/9gPoc1q1
W8m3HwJ7M8pZH90VRmVdYjL8Kdtxm3Dqel3iYFChXbPSI3jf27JtI0ykCCqr
E9obGfl6plZZjRD0VI5Wm3xMZVVinW+yAak3ErzS3qlu5fYoKksRdbSR0jHt
T6isTNTpXmwpGYimsjxxzO53wznnGOi3dznNuvs/o7IE0fEynDvh9XMq7yB0
RhvWuPnEUlmRaOuzaKadWmUFonfN7r473i/AR3pWhbze/BLmqU9/Ta2LXWVZ
Yv+eq2U17HEw38v2fsO6kDiY96qYwVxG8BWs5w78K033apW3E5aRMq47tF5T
eRvhu5vdYkvhKosQj/Q3HH6uFg/+tqjNw6TEeLjfG8VP+XVHEsDb/AhWvpeR
AOf5pz9cY7ktkcpcBJlpk+9gQiLMn29kH4pSSgJedDKZ0BlKgvub+nof4Hd8
A/O8sivce9WS4eeTr+9F7b6yZPCtG7isgvamwPyVY3Q9xvUp4E/ZufqFeKYC
74wP1Wz/mwp9tFPhopnzW7hPc1bmz5xZ5OQh5qV3ge/g94dawzkj53VpVGYj
smtszmaZpsH77ctUoJyOWGUhwnXGsEW2C3u1zYMMgTvew36RsRcTZf3fw3sd
e/53VrH2PfS5laZ+vOLpVOYnAh5rpNIEp8P5Np6arKfUpMP7ZP2SGeXc+QF6
3v7c88peH2De2isZOvz9yNrfo8I2KH6E+UzLAVIJwci8WXo1H3o/wv6neJ91
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
wOkrdd7XzTlh/bD1UHF7NCf4/wP/m503
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Xk4leu7B3BKpgaZSm0NpJBCUoYGX81R7SKSMqSUolJRpo3MKiEyJDLP
ZJ6HtRaVJEqkYVeGCJlKSbJ19jnv/Tvnus76Z12f63s/7zO9z/tIWZzXs5zG
xcX1jZuL67/////PU/Mv3qjDG7UYSWMJv+PKgeO7yKqIXHO6+P303eR10NJW
rl/vbUDejJUvo2pb3YwZu29FnfXSM3v2HKF8GyrO9euHXzMj74bHH8d1Dz05
TvV7kXpKWNeg6wTl+yHLdzxt4r0VYxjgs2Buqdo7G8qNcNJ6o97D15cYx5pj
/XmJ57U8DozNj2NSsUe3utuZ2lvii+Ufhr0WbtT+FDZIKN28lXaV6k+Dc2Yu
f5ulJ2OWNRbNTvikauLNuP0srph81f0m7kvtz2NRhq5T/bgf46UXwDWyJ9Z6
8zUazwW0HHJ/0i9yg55/ESVBK/zqbAL+1/dmuRqJLAhkvP8SYn2dv6S4B9F6
2OGg+PlUyZJgxiP2KH2l/crE+xa1vww3PiXTwxtDKL+ML6F35x41CyVfwf4b
rOOtqrcZ5zjAW/H1AD9X2P9aex7fws6v/7Ejlrisi9L4Ek7zdcIsz4ydXF0R
lDtDddfXjnVvImk9XdA4LUIh+s0dWq+/0Lj1fFvNpyjGz1xx5Pjn5jO20YzV
3bGq3ea7o28MYz93vI0PFU9JusdY+Sq2DDbPcHCPZfzqKl53G7ZO+0q28kDX
jM3dPm5xtN6eiHB5HJj0RzxjOS9ojj7Paowll3hh37bLDxqEE+j53nA1v9k8
K5A84o1EDq/B6iWJjB18IO7/S2F6ItncF0YRq+3XaiUxHveF52Zhw0Ussrsf
bu+Yc/CeRjLlfvBeZnYrLZWs7o90lfKqxkMpjIP8YfYuYN31QvK4P/7Z0d9g
tCKVxncNJvzzPXtTyL3XMP5CuC9SNY3xruuYsNk7sqWPzLoOPU+3PyWt0+n9
uQHXkkeOXRoZNP4ALOyOe7r7AXnpTbyaI2Z8Y1cm5Tfx+8j0zj1N5PabOHHc
3ivQJYuxbSDWJwdtevOLPBKIKBvWhL5tNmPVILQWF30o/U62DUJGn8Dkff/7
jOuCoNF8Rtd2Vg7jucEoaTA7XaxH3hWM3UVr6k+Fkb2CYf9Np02xnfx3MDT+
6OX1X5tL47+FiNjzqYq+5MxbOHLv13eVp+SRWyir0/NaIJvH2CYEfuEbsrgD
yJMhmHfiS1N9A3lVKIo/rh4UXZ/PODEUC3rKzq5zJdeFYualwi2SPeSDt6H9
d2TIHJUCxgW3wT/ltzIlgIwwLCje3pDfRfYLw4kFMe9X6xTSfoahtFAlIOIe
WSYcb3idBDd0ka3CMXuq4csu6SJ6v8LRxB0XZWdEDv23vpknS+cBuSUcI93i
44s3FNN6RsA3ik9JKI7sF4HU/pa34rNKqP8IiOXpac1zJJtHot8ihKXZRm6I
RKtZw+nbfKX0PkTC1IGXf9SSvPQOvpd7Kr/NIW+7g3z/Sbsl8mV03u5AYypB
/0cIWTUKqgvWG08fJ9tF4StflWbQ7nL6PkShYukt/3PPyTJ3EZe6gC28r4Lx
3buYhfO1V1LJk3ch//rZdrMp8oloaBUJfozQr6TzG40OLjPZH8Fkv2jsyVD/
Z7yGfDca+32mr/8kVsW4NhoJr4+G9Z0j88dgVHdjimwaeWMMYg/8jNz+lqwe
g/u6UdUnJKppf2KQGTi6R+0A2S8GT8eHfE5WkgdiwO1q2pImwqLx3UN0Ybm1
/GZy7z1MiD7Z+/gIeVYsJoUM92/wI6vEYuFO/TeipeSLsZgd7VZ/8G+yRyye
7Z1mb/6bnBiLtaYPKySXsWk/Y6F7Zd3NAC1ySyzspi5bahiTO2NhMP7qTwln
8ngsND0C5SRTyRJxWG0+V0fnMXlVHP7Inilk2k/WjEND/Z9bzDZwGOfFIWr5
u4VCFmROHLTll9lORZLH4lAmsXNK6DFZJh7Kmpr7eT6SV8Vj20c1HS3pGppv
PA4PO39cvpscH4/YiyteK9mTq+JxzuSTzqUM8lg8RndXv93aT16ZgO4qNeFg
yVo6vwloUwn+8sCE7JCAKAtpN1lXsk8C0h/MmRURSQ5LgF2c1vTgKnJmAjzS
wtu9+R4w/piAJm3T6X+okPkTEe26dtn3E+RdiRDK5QtceYt8LhHH7EvErXLI
LolwPa6xYXoL2ScR9Yu8rD8JPqT5JqJG5nytwhZySyKWDNY577xMnkpE6cgW
d8EKsnISjuos9ncYJe9PgtT+3Ykd0o+o/yRESeelzj5Nzk7CXjdTmVNB5Nok
8D3ZunW8mtyeBDwZCuSbWcdYJxl/uHspXFchGyWjJHtCodmJHJqMjuyO66sT
yNnJ2Mu11bW5gdyQjA0jfY2Jo+RXydjIPZWptOgx7V8yBD892fVRn6ySgmeP
02TkXMiGKTisZ6dqm0n2SsHQ064XN56SQ1OwuCHh0V6eevq+pOBXsrKvmAp5
IAWeM4xDVhqRR1KgnP8oL8WHLJmKOwLe9h9TyXKp0E2I5gmqJ69Pxf3xzMNe
v8lnUlF+ePOPq2uf0PuSiqh87h1SB8nJqXBX6hxU/4tclQqTCO6MW6XknlTc
NJ7k8LWTJ1IxWwybfOc1MBZLA+/MFukBFfKcNAhavz855kc2SkPJh+2Rnvlk
hzQUH15rxP5EjkiDn9LJAdlpT+n7lwb7NKWk4W3kyTTsF77YfSKAvD4dyfYL
FxXlkQ+mY8nCnrdavWSbdEwzqXkfzN/I+HI6xCUutQ5rkn3SIWWrJTTpQi5L
R/jM6C9iLPK3dASdra91XNpE92UGktN8J9gGZKsMdKfnmPC5kj0ycHlk/6Pq
YnJEBi7q96QL/SRXZKDjbb5focgzOh8ZCDm6RNlPjjyUgZvHnKV0t5LnZUJp
9MBDWSOyTCb2rbvBG+ZCNsxESuNNZ4Hr5H2ZuJt4aK55DjkoEyvKxJ4o15Gr
MmGp9M1l/CO5NxNDYw/urud7TucxCxYeoqGHFckWWSjceGrEfAvZKQvv5Vmd
Uubk+CzU7trYau9Obs/CX6FpVWN3yBNZOKvtmy+fSp6WjU0i+470PvxPf9n4
JMGlXfqBbJqNN0ouN079IN/IhuaSwB2eIs10X2dj29a6R0Xryf3Z2D6tlzfF
kCx5H7fXaVQ+dCCr38e6T9ejxW+Sd9yHplpjQUU22eo+RI5vS9rZRI69D6Uy
+xehv8gf74Pz1aZ2dMELxtw5+FNG/uExDfKiHDw0u8xzWIcsl4PXlnX6B8+S
NXKgLWqcpBVEPpoDRw8HwUd55Cs5WCOvnv+ghuyUgw7rsGvmf5ODciA3Ui3k
/4uclAMFtt3D37NbGOfmYPkNyx/bJP/PWz87WVquI5fmwDXi+JjNIXJTDp68
ebbfx4M8mQMT5Unh51nk+bmISdKdJ80mL8pFh9/EgRd95A25CL1tZa8u1Erz
ycVJbX+Rr3Jk61zIsnRlrXTIHrlI2Pr26Z+nyDdz8Vc0937FUHJeLoxNi5cd
LCE352LXtPB01zbyu1wsuCCo3/UPeSQXWj8GC/NWv2TMm4ee72GG27aQZ+Xh
TkWfXMlF8so8lOkrDYYFkbfmwUBEaudADtk4D0fvLR9U6iQ75sHMROLC7Blt
jIPzkOqwiV96ITk0D+3NYVxbVciJeVDbYxvyZBs5Kw81Ypra4Sbk3DycHLNS
qncn1+fhe6tg6c8EclseMre7BdYXkHv+rV9oVzX+lvwzDwN+cy24f5Jn5CNn
7pBsypJXjBfn40On9uJ3O8lq/+aVPWpyduQD+VijJ5D+9jb5SD6OzfcZ1Kgk
W+fDdVTJ3XeUHJMP9dKdSyUlXzNOz4d/VZvZfZAr86G9dDf/sB25Kx/u73UH
reLJE/+2f2nD97iaPLMAAmeWC3wbIysVYJPSwWKHuW/ofBRg/gypTcUbyAcK
8Lxr0vjQFfKlAgw/NTiaFkv2LsC92NK9kq3k8AKcy1qx6tY3cmwBXOZK/5U5
/y3j/AKU2i9hZ2iT6wrwYtqjtu4r5IECLLj7TfFqNpmvEK9yPEOuvSAvLcSR
ThNbvul/M9YqxGNdae7Zi8m7C3FWa+e+oR3kI4VoWmI88fsM2aIQbnzF54yD
yPaF8BYQ8PTKIfsUQkWqTOl4B/lOIXaZiOeYCryj9S9E1js/N7XN5AeFiHQx
+yntSO4sRELFPOc5MeRfhWhQjDV8zyYLF8FVuZbrfT9ZqgijO36eMxN9T/dn
ESbTU5s7NMm6RbCKPKm3xYZsWYTiSf4lmyLJF4rAVt8iz1tFdinCpp9Gjq/7
yQFFKGOPmcwQ/MA4pAiHIiak31mQHxThCr8tr1MM+X0R1sraiPa1kCeK0Grn
LGEk0M5YvBirMi43S8iTVYtRIyUiuGInWa8YyUczBDyOkV2KsfJloKizLzmx
GALLLuptTCBXFCOt9Z6obA35QzFuZ5hsb3tD5i5B2A6hrC+9/+m/BMoa0+eL
cnUwXluC59XT1Y/MJ+8pgaqYg0fharJFCayHJK8WbSafKUH/1cgAm33kCyWQ
NspTKLAh3yrB9k1bk4evklNKsPiSq9zWGHJlCR5LrVLqKyR/KIGsq7jWzWfk
qRKEvtgrk9VOFiiF8dsWvyqeTsYKpRgWfqq9TIK8rhTB7YNXJlXJe0tRe1PU
TNmEfKEUVy5WrGNdIF8tRXbtq5PTw8jxpXgkWbzErpBcUortGfKRBjVkTikE
pJWXRbeQG0thOeOMZ/U4ebgUr+Jf7hYS6WLMVQaTf5pTOuTIs8twm+fv1Z93
kqXLwLNsc7rTMfLGMgxGGS0I8CIbl6FD4Zd+UgT5ZBm2FORV+xeTPcowpZoi
GNJKjihDtKZCk0IPObIMeQW8aU9mfGRcVoZ2x+S3RqvJr8rQvclidoIOubsM
9fUd7YtPkcfLMMb1MDHaiTxZhkvX/L//CCBzl6M+R0X4ZC55QTk+8o2e+ucR
Wboc23mHX/Z2kVXLYXk95PAZ7m7GRuUokJF1C1lKPl8ONZEDt+ZsIXuXo6/z
uuM+U/L1cljtaFvj6kwOL8e2Aa2rR8PJSeUwqAz/7VhELi/Hyw5rrrBGcl05
ztU3CnKNkXvKcYwnwsRPtIf2qwLsF2WVkivJMytgM2tSSHEfWb4C3o7m0u4n
yKsqYGLob5d9nYwKCGdmZf3MJltUIP614nDYK7JLBdZIdgy8HiLfqMDRCRs5
H95PdP9WwKHF5EqsLDmlAjul1FvEDchVFTilIy7G7UJuqoCLu6aGYSa5vwIf
opJ9NtSRv1cguCQz3miALFiJrwqrHSKmyLMrscvuU9HPlb2MZSuRLjf/qaQR
eXcl3tidbJG9QDarhK3L731q98iOldDqSbpzu4kcVQm9Fa6mnz+T4yoxf2Tp
hbfSfYwfVkJKUHZetgG5oxI2pxtl97iSv1ZiwKxI/MEN8lAlYp4Oqlx9TJao
Qqx9/AR7iLyiCr+vCNm/FOqn9a+CZ/SbT1u2k82qsLKx/UWmB9mpCnMyKqYl
pJEDqzBLM9HFtYUcU4U1WhsN8qZ9ZlxYhesLxe+IypDLqtCoGum4Rp/cWoVt
Cq7lK/3JvVV4PPwyeNljsmA1XIa/DBkLDjBeWY27491OG43JJtWoF/SWGfYi
n6zGDp3mi1zt5OBq1E0f8fnGM8j4XjWCRV6c4VMjp1VDsVAhwteSzKpGW9uM
VK9E8vtqWMj3sJ60kvur0aluO61IYIjx72qcuau15eAq8gwW5kQuZt0/wdh9
LguLlx+9mpxAlmKhcM/mFYr9VK/IAsfU0vqrxDBjDRZ+BtfqR2mTwYKzKceo
9zJ5NwuvAvUdxXLJ+1mQEi/U+TDM2N2Qhe8/2jvGxUYYH2Vh7SvFB68VyKdY
EB54k6X+J2OuSyyYBc2JnW9PuTcLvCtEpPXDyEEs+Co3Xo7kUH0sC37HVp2s
76M8i4X6PfNVH879wriUBcedPd2L9clNLPTV3214cosx18C/87cVGVtfS+Zm
Y5bi6ZNr+slz2TD4JpjWyfuVaT+PjZsibmnrNn2l+4qNK5vU+uOtKFdnI2Cu
F9/ca+TNbER0xS6XL6X6XWyomRyPM/9NPsrGXmeNC6eXjzI2Z0OFbWS+z5Kx
uy0byaPDv1/nUu7LxpjagSapPspD2Og59OCR2MJvjJPYMM+1vtFmwJgrnw0b
8964s27kUjZ0RN6LbUug+mo2ehXOzXvdRW5gw7laa2xw9XfGH9joWyq51+88
eYSNtYdeOuhmMeb6xYZ86G/Doh7KeTgwdXKVCOUfY3J+DvaclT9QeIwswcE/
4jdMF2eQl3PweMhaOfQTY3dFDrgf3jb4bPiD8TYOvpQt+iWZRD7Iwd6aFv8I
3nHGFhxoj/SbXj3LmOsiB00HJ591N5HdOFB7t6zTY9FPpt6Hg3b3ERn3TvI9
Dg57hugYa04w9ekcLH7SqxXlxdj9PgeGITMEIt6TSznYHMJZMKj7i3E9BwFR
qu4yBpNM+48cXL61Kk9myT+MRzioUujgkcxj7D7OwbM6ObeuEcp/clDWv/x6
j8UUk8+ogfmmpcL5lWS+GvDo3VBCyG/GwjX4wnXRUkqZC//TfnENAvd2L++6
Q5avwbtd7QvDPjB2X1OD1BMbAo8t5WasXIOpALHVlfWMuTbVQGblcS6rv6Yx
1q2BUHxUQe8UWa8Gjxz0RMObpzM+UoPnGjwG19k8jK1qsGaVdKVZ0wzm+bY1
uP31jk6vHh+TO9WgeeHMSKU7/EzuWAM57oqhpxdnMrlbDfJ+N7o5GYgy9qtB
v2kf503U//m/AB0FfQk=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Maximum Computation with BTL\"", TraditionalForm], 
     PlotRange -> {{0., 2.044057999037858}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"k", "x1", "x2", "y", "z1", "z2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.827283715753475*^9, 3.8272840369081097`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"9a17d1f6-c8c8-406c-885b-24c07244f9be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys2", ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"finalOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimulateBoundedTauLeaping", "[", 
   RowBox[{"rxnsys2", ",", 
    RowBox[{"finalOnly", "\[Rule]", "True"}], ",", 
    RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys2", "]"}]}], "Input",
 CellChangeTimes->{{3.8242488638879766`*^9, 3.824248884624015*^9}, 
   3.826674956321907*^9, 3.826821314887678*^9, {3.827283532638116*^9, 
   3.8272835662948046`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"34f1c9c9-0c1a-4eff-9222-d09615b7440d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "15000", ",", "0", ",", "10000"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049458296*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c79f6eee-42b6-4483-8a69-ccd779d5d8ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "15000", ",", "0", ",", "10000"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.8272840496907372`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"21352ca3-ec27-44bd-825c-e2be57b221ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", ",", "x1", ",", "x2", ",", "y", ",", "z1", ",", "z2"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049693763*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"da66ba65-992a-4ab9-b66e-ccc1926a5a13"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 3: Demonstrating erroneous input handling", "Subtitle",
 CellChangeTimes->{{3.814729544657347*^9, 3.8147295560648165`*^9}, {
  3.8147323846177015`*^9, 
  3.8147323855292654`*^9}},ExpressionUUID->"a94da052-b5f9-4bc7-a8af-\
06681168a31e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rxnsys3", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"a", ",", "b", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{"c", ",", "d", ",", "2", ",", "3"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"rxxn", "[", 
     RowBox[{"e", ",", "f", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"reaction", "[", 
     RowBox[{"g", ",", "h", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"revrxn", "[", 
     RowBox[{"i", ",", "j", ",", "6", ",", "7"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"revrxn", "[", 
     RowBox[{"k", ",", "l", ",", "8"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxnl", "[", 
     RowBox[{
      RowBox[{"{", "m", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "9"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxnl", "[", 
     RowBox[{"o", ",", "p", ",", "10"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", " ", "e", ",", " ", "f", ",", 
        " ", "g", ",", " ", "h"}], "}"}], ",", "20"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"concs", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", " ", "j", ",", " ", "k", ",", " ", "l", ",", " ", "m", ",", 
        " ", "o", " ", ",", " ", "p"}], "}"}], ",", "30"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys3", "]"}]}], "Input",
 CellChangeTimes->{{3.8147273669393797`*^9, 3.814727548120801*^9}, {
   3.814728356098337*^9, 3.8147283806253023`*^9}, {3.814728423009989*^9, 
   3.8147284230977907`*^9}, {3.814730632763997*^9, 3.8147307464500284`*^9}, {
   3.816379330367965*^9, 3.816379332927121*^9}, {3.8224113878035955`*^9, 
   3.822411388903293*^9}, {3.8266752654594564`*^9, 3.826675333282188*^9}, {
   3.826675395796424*^9, 3.8266753979710703`*^9}, {3.8266756276521783`*^9, 
   3.826675644641883*^9}, {3.8266773522912235`*^9, 3.8266773547223177`*^9}, {
   3.8268213148950825`*^9, 3.826821326254178*^9}, 3.8268246809734745`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"9abb1f7f-8a2b-4bba-9e64-c50d159e10c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "b"}], " ", ",", 
   RowBox[{"rxn", "[", 
    RowBox[{"c", ",", "d", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"rxxn", "[", 
    RowBox[{"e", ",", "f", ",", "4"}], "]"}], ",", 
   RowBox[{"reaction", "[", 
    RowBox[{"g", ",", "h", ",", "5"}], "]"}], ",", 
   RowBox[{"i", " ", 
    UnderoverscriptBox["\[RightArrowLeftArrow]", "7", "6"], " ", "j"}], " ", 
   ",", 
   RowBox[{"revrxn", "[", 
    RowBox[{"k", ",", "l", ",", "8"}], "]"}], ",", 
   RowBox[{"rxnl", "[", 
    RowBox[{
     RowBox[{"{", "m", "}"}], ",", 
     RowBox[{"{", "}"}], ",", "9"}], "]"}], ",", 
   RowBox[{"rxnl", "[", 
    RowBox[{"o", ",", "p", ",", "10"}], "]"}], ",", 
   RowBox[{"conc", "[", "10", "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
       "h"}], "}"}], ",", "20"}], "]"}], ",", 
   RowBox[{"concs", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "l", ",", "m", ",", "o", ",", "p"}], 
      "}"}], ",", "30"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814727553060592*^9, 3.8147277475973887`*^9, {3.814728358332364*^9, 
   3.814728382169203*^9}, 3.8147284238009043`*^9, 3.8147287784837065`*^9, 
   3.8147299420004463`*^9, 3.8147301129239264`*^9, 3.81473016534527*^9, 
   3.8147303755079713`*^9, 3.8147305797158546`*^9, 3.814730748188409*^9, 
   3.814730805467269*^9, 3.8147323871130314`*^9, 3.8147354456199408`*^9, 
   3.814750672514909*^9, 3.81637928684542*^9, 3.816379338163118*^9, 
   3.8163793981066675`*^9, 3.8209422901585464`*^9, 3.820942401642186*^9, 
   3.821206508214243*^9, 3.8212885367665243`*^9, 3.8224114734402657`*^9, 
   3.822436315381395*^9, 3.8236340261835213`*^9, 3.824248895757517*^9, 
   3.8242491994708867`*^9, 3.826675259089215*^9, {3.826675306456874*^9, 
   3.8266753583240385`*^9}, 3.826675398468398*^9, 3.826675430905013*^9, 
   3.826675544363984*^9, 3.826675587092024*^9, 3.826675656701229*^9, 
   3.826677185740246*^9, 3.826677322803172*^9, 3.8266773703077426`*^9, 
   3.82667860001132*^9, 3.826824552999225*^9, 3.8268246372077193`*^9, 
   3.82682468139244*^9, 3.826824713788515*^9, 3.827283774227352*^9, 
   3.8272840513327913`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"5d9cb28f-04d1-4772-b8c7-9306c6b96e3c"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "rxnargs", 
   "\"\\!\\(\\*RowBox[{\\\"rxn\\\", \\\"[\\\", RowBox[{\\\"c\\\", \\\",\\\", \
\\\"d\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"]\\\"}]\\) is \
invalid as 3 arguments are expected\"", 2, 28, 1, 18373534356709946172, 
   "Local", "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.827284051395494*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"1355ca76-7e16-4abc-a04c-4e7d1171870d"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "revrxnargs", 
   "\"\\!\\(\\*RowBox[{\\\"revrxn\\\", \\\"[\\\", RowBox[{\\\"k\\\", \
\\\",\\\", \\\"l\\\", \\\",\\\", \\\"8\\\"}], \\\"]\\\"}]\\) is invalid as 4 \
arguments are expected\"", 2, 28, 2, 18373534356709946172, "Local", 
   "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.827284051406466*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"e6e07e34-2c03-4d92-8f45-75a43c313d62"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "concargs", 
   "\"\\!\\(\\*RowBox[{\\\"conc\\\", \\\"[\\\", \\\"10\\\", \\\"]\\\"}]\\) is \
invalid as 2 arguments are expected\"", 2, 28, 3, 18373534356709946172, 
   "Local", "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.8272840514144764`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"2d8ba865-fbbf-46e7-b2a5-c5354aa36acc"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "rxnllists", 
   "\"\\!\\(\\*RowBox[{\\\"rxnl\\\", \\\"[\\\", RowBox[{\\\"o\\\", \\\",\\\", \
\\\"p\\\", \\\",\\\", \\\"10\\\"}], \\\"]\\\"}]\\) is invalid as lists are \
expected for the first and second arguments\"", 2, 28, 4, 
   18373534356709946172, "Local", "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.8272840514274087`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"3e6e5a6b-43e7-4973-a382-c0732145c2f0"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.814727553060592*^9, 3.8147277475973887`*^9, {3.814728358332364*^9, 
   3.814728382169203*^9}, 3.8147284238009043`*^9, 3.8147287784837065`*^9, 
   3.8147299420004463`*^9, 3.8147301129239264`*^9, 3.81473016534527*^9, 
   3.8147303755079713`*^9, 3.8147305797158546`*^9, 3.814730748188409*^9, 
   3.814730805467269*^9, 3.8147323871130314`*^9, 3.8147354456199408`*^9, 
   3.814750672514909*^9, 3.81637928684542*^9, 3.816379338163118*^9, 
   3.8163793981066675`*^9, 3.8209422901585464`*^9, 3.820942401642186*^9, 
   3.821206508214243*^9, 3.8212885367665243`*^9, 3.8224114734402657`*^9, 
   3.822436315381395*^9, 3.8236340261835213`*^9, 3.824248895757517*^9, 
   3.8242491994708867`*^9, 3.826675259089215*^9, {3.826675306456874*^9, 
   3.8266753583240385`*^9}, 3.826675398468398*^9, 3.826675430905013*^9, 
   3.826675544363984*^9, 3.826675587092024*^9, 3.826675656701229*^9, 
   3.826677185740246*^9, 3.826677322803172*^9, 3.8266773703077426`*^9, 
   3.82667860001132*^9, 3.826824552999225*^9, 3.8268246372077193`*^9, 
   3.82682468139244*^9, 3.826824713788515*^9, 3.827283774227352*^9, 
   3.8272840514353895`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"75df1cce-b3b6-45a9-abaf-18021d49fcf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys3", ",", 
   RowBox[{"finalOnly", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.814727554850992*^9, 3.81472756962504*^9}, {
   3.8147296561704426`*^9, 3.814729659057314*^9}, {3.814729937049659*^9, 
   3.814729937210195*^9}, {3.814745424335478*^9, 3.8147454257816133`*^9}, {
   3.816379354423208*^9, 3.8163793620064096`*^9}, {3.8209420683128357`*^9, 
   3.8209420740032263`*^9}, {3.820942320308769*^9, 3.820942322386283*^9}, {
   3.8212884239178905`*^9, 3.821288424085413*^9}, {3.82241137784033*^9, 
   3.8224113969016104`*^9}, {3.822435911582708*^9, 3.822435935683201*^9}, {
   3.822435989581008*^9, 3.822435990036787*^9}, {3.82243605409142*^9, 
   3.822436072496183*^9}, {3.8242488994407654`*^9, 3.8242489382260175`*^9}, {
   3.8242489687391896`*^9, 3.8242489785222726`*^9}, {3.82424903478922*^9, 
   3.8242490391406937`*^9}, {3.8242490811756105`*^9, 
   3.8242490815176783`*^9}, {3.824249114423749*^9, 3.824249137486657*^9}, 
   3.8266749578742857`*^9, {3.826677213571082*^9, 3.826677217297842*^9}, {
   3.826677328979368*^9, 3.826677329786335*^9}, {3.8272838739592257`*^9, 
   3.8272838751583276`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"68cdc8e7-1037-4072-a876-28eae94d6ab4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8266786007288046`*^9, 3.826824563307689*^9, 
  3.826824638156846*^9, 3.826824715192755*^9, 3.827283789254285*^9, 
  3.827284053675598*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"da7a5585-6eb9-4c12-b6e7-4495ef5ff70e"],

Cell[BoxData[
 TemplateBox[{
  "PlotLastSimulation", "finalonlyerr", 
   "\"Error: Cannot plot when finalOnly = True\"", 2, 30, 5, 
   18373534356709946172, "Local", "CRNSSA`PlotLastSimulation"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.826677323575782*^9, 3.8266773322396584`*^9}, 
   3.826678600701871*^9, 3.826824563312677*^9, 3.826824638163825*^9, 
   3.826824715195747*^9, 3.827283789259271*^9, 3.827284053678591*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"966ebd48-ab12-4582-8f87-34c8f0519b85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateBoundedTauLeaping", "[", 
   RowBox[{"rxnsys2", ",", 
    RowBox[{"iterEnd", "\[Rule]", "0.5"}], ",", 
    RowBox[{"useIter", "\[Rule]", "True"}], ",", 
    RowBox[{"epsilon", "\[Rule]", "1.5"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8272838544342904`*^9, 3.8272839110474677`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"dc26e5b5-f843-4430-8ca2-1b20569a2acb"],

Cell[BoxData[
 TemplateBox[{
  "SimulateBoundedTauLeaping", "iterenderr", 
   "\"Error: iterEnd (\\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\)) must be an integer \
greater than zero\"", 2, 31, 6, 18373534356709946172, "Local", 
   "CRNSSA`SimulateBoundedTauLeaping"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.827283906546582*^9, 3.8272839116572876`*^9}, 
   3.827284060334919*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"9bc2c523-a4fd-4f59-ace3-0198eae487bd"],

Cell[BoxData[
 TemplateBox[{
  "SimulateBoundedTauLeaping", "epsilonerr", 
   "\"Error: epsilon (\\!\\(\\*RowBox[{\\\"1.5`\\\"}]\\)) must be a real \
number between 0 and 1\"", 2, 31, 7, 18373534356709946172, "Local", 
   "CRNSSA`SimulateBoundedTauLeaping"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.827283906546582*^9, 3.8272839116572876`*^9}, 
   3.827284060558292*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"1705f1e7-fe27-4883-b95a-ca0fac5b72a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 747.75},
WindowMargins->{{Automatic, 960}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "tue" -> OverscriptBox["\[UndirectedEdge]", "\[Placeholder]"], "tde" -> 
  OverscriptBox["\[DirectedEdge]", "\[Placeholder]"], "notation" -> 
  RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8a9966d4-13ea-4f76-9a73-3ff830b13d05"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 209, 4, 117, "Title",ExpressionUUID->"99313edb-9280-4a33-9415-fe73f5350fe5"],
Cell[CellGroupData[{
Cell[814, 30, 397, 7, 57, "Input",ExpressionUUID->"8acb8700-aa44-4b5e-a852-0474740d5f06"],
Cell[1214, 39, 4803, 111, 113, "Output",ExpressionUUID->"638f9dea-e5f2-4572-95a9-a7c13a482e8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6054, 155, 226, 4, 62, "Subtitle",ExpressionUUID->"52ad3c2d-9e9e-48e6-8d6d-8ea980b00547"],
Cell[CellGroupData[{
Cell[6305, 163, 1605, 31, 147, "Input",ExpressionUUID->"8b417677-a446-4ab6-80dd-94d45d2a2df6"],
Cell[7913, 196, 1462, 22, 38, "Output",ExpressionUUID->"947b5f79-feb1-44a7-9e8b-3818876bdb5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9412, 223, 985, 16, 57, "Input",ExpressionUUID->"e01cb462-3bf6-45d3-aeb7-66e85bb61022"],
Cell[10400, 241, 2386, 57, 61, "Output",ExpressionUUID->"59e6be0c-bd8f-4941-a90d-69ec73a009f3"],
Cell[12789, 300, 13528, 276, 290, "Output",ExpressionUUID->"5f774049-51eb-499c-a82c-c3384b712904"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26354, 581, 580, 11, 57, "Input",ExpressionUUID->"f6d49b94-9e8b-4a36-ae44-e2b1dcfd3145"],
Cell[26937, 594, 1437, 40, 38, "Output",ExpressionUUID->"f9019e5f-7d2f-4243-aa05-dc25aa9a7fab"],
Cell[28377, 636, 12618, 263, 287, "Output",ExpressionUUID->"0b3d0b56-bc3b-463b-8cbd-bec9095a8051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41032, 904, 877, 14, 57, "Input",ExpressionUUID->"30b5d26f-07c3-4eda-8fd7-31726095345b"],
Cell[41912, 920, 1691, 40, 61, "Output",ExpressionUUID->"7c9fbdf5-cf1b-4069-947b-74cc0ac86b3e"],
Cell[43606, 962, 13021, 269, 290, "Output",ExpressionUUID->"69196d00-e2b1-45c7-8a1a-8a94eecc96d8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56676, 1237, 506, 7, 62, "Subtitle",ExpressionUUID->"26cee006-515b-4511-9df5-a84f93ecb4e8"],
Cell[CellGroupData[{
Cell[57207, 1248, 3384, 76, 214, "Input",ExpressionUUID->"4ac59a20-336b-40bd-8b3f-f93ee47e266c"],
Cell[60594, 1326, 3544, 81, 91, "Output",ExpressionUUID->"53942cb4-8189-4ff8-8848-0e3b86fab1cb"],
Cell[64141, 1409, 2230, 37, 38, "Output",ExpressionUUID->"524625e3-9622-4dc7-8790-733376c2d87b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66408, 1451, 535, 9, 34, "Input",ExpressionUUID->"6b802521-abe5-46a6-a500-e567ba56f44a"],
Cell[66946, 1462, 1449, 27, 38, "Output",ExpressionUUID->"f28fa932-ec13-443d-b612-230902ff2796"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68432, 1494, 1024, 16, 33, "Input",ExpressionUUID->"77c1fb6b-12dc-4da7-a958-5c5a4452f187"],
Cell[69459, 1512, 3305, 84, 106, "Output",ExpressionUUID->"84bf887e-dc6c-4689-be65-cc421db2e1a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72801, 1601, 519, 9, 33, "Input",ExpressionUUID->"727dc939-bc19-45b3-a825-77595faf5284"],
Cell[73323, 1612, 3172, 84, 174, "Output",ExpressionUUID->"b5e4e4bc-9644-41b8-9f6f-f9a1dfbf0a1f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76544, 1702, 234, 4, 62, "Subtitle",ExpressionUUID->"cac518be-760f-4e04-892e-7b19f51723f0"],
Cell[CellGroupData[{
Cell[76803, 1710, 1594, 32, 214, "Input",ExpressionUUID->"9fe609a4-5ad6-46db-842b-92f8411dd608"],
Cell[78400, 1744, 1304, 33, 52, "Output",ExpressionUUID->"e8139a95-b37b-439a-a318-9a9d5443b14d"],
Cell[79707, 1779, 674, 14, 38, "Output",ExpressionUUID->"cd960a72-9179-4177-bb5f-72033fcdc42c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80418, 1798, 1268, 19, 57, "Input",ExpressionUUID->"b6268b37-be13-4b8c-a833-d45a91bc13ff"],
Cell[81689, 1819, 12783, 246, 99, "Output",ExpressionUUID->"debc924c-03e3-450c-9a33-117bf9a0f29c"],
Cell[94475, 2067, 67090, 1232, 290, "Output",ExpressionUUID->"614871ec-4b54-43f6-a350-d7a19b2cadd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161602, 3304, 473, 10, 57, "Input",ExpressionUUID->"9a3e4e57-79bb-40b2-aee2-7bd46ea02ae9"],
Cell[162078, 3316, 12326, 240, 99, "Output",ExpressionUUID->"cd72b360-0045-4578-8070-2e6f88340ce4"],
Cell[174407, 3558, 45456, 877, 287, "Output",ExpressionUUID->"29f9a8d9-b982-4546-b41c-e13ef3d616ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219900, 4440, 385, 7, 57, "Input",ExpressionUUID->"be71b19d-cc4d-4d67-b562-c1e6cc4e2114"],
Cell[220288, 4449, 271733, 4492, 76, "Output",ExpressionUUID->"5ea033fb-5b58-4fa2-bbcf-06c27497137b"],
Cell[492024, 8943, 66693, 1225, 290, "Output",ExpressionUUID->"9a17d1f6-c8c8-406c-885b-24c07244f9be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558754, 10173, 821, 16, 79, "Input",ExpressionUUID->"34f1c9c9-0c1a-4eff-9222-d09615b7440d"],
Cell[559578, 10191, 589, 10, 38, "Output",ExpressionUUID->"c79f6eee-42b6-4483-8a69-ccd779d5d8ca"],
Cell[560170, 10203, 591, 10, 38, "Output",ExpressionUUID->"21352ca3-ec27-44bd-825c-e2be57b221ab"],
Cell[560764, 10215, 560, 9, 38, "Output",ExpressionUUID->"da66ba65-992a-4ab9-b66e-ccc1926a5a13"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561373, 10230, 258, 4, 62, "Subtitle",ExpressionUUID->"a94da052-b5f9-4bc7-a8af-06681168a31e"],
Cell[CellGroupData[{
Cell[561656, 10238, 2335, 48, 327, "Input",ExpressionUUID->"9abb1f7f-8a2b-4bba-9e64-c50d159e10c2"],
Cell[563994, 10288, 2436, 53, 91, "Output",ExpressionUUID->"5d9cb28f-04d1-4772-b8c7-9306c6b96e3c"],
Cell[566433, 10343, 741, 14, 28, "Message",ExpressionUUID->"1355ca76-7e16-4abc-a04c-4e7d1171870d"],
Cell[567177, 10359, 725, 14, 28, "Message",ExpressionUUID->"e6e07e34-2c03-4d92-8f45-75a43c313d62"],
Cell[567905, 10375, 668, 13, 28, "Message",ExpressionUUID->"2d8ba865-fbbf-46e7-b2a5-c5354aa36acc"],
Cell[568576, 10390, 754, 14, 28, "Message",ExpressionUUID->"3e6e5a6b-43e7-4973-a382-c0732145c2f0"],
Cell[569333, 10406, 1247, 18, 38, "Output",ExpressionUUID->"75df1cce-b3b6-45a9-abaf-18021d49fcf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570617, 10429, 1336, 20, 57, "Input",ExpressionUUID->"68cdc8e7-1037-4072-a876-28eae94d6ab4"],
Cell[571956, 10451, 274, 4, 38, "Output",ExpressionUUID->"da7a5585-6eb9-4c12-b6e7-4495ef5ff70e"],
Cell[572233, 10457, 550, 11, 28, "Message",ExpressionUUID->"966ebd48-ab12-4582-8f87-34c8f0519b85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572820, 10473, 413, 8, 33, "Input",ExpressionUUID->"dc26e5b5-f843-4430-8ca2-1b20569a2acb"],
Cell[573236, 10483, 498, 11, 28, "Message",ExpressionUUID->"9bc2c523-a4fd-4f59-ace3-0198eae487bd"],
Cell[573737, 10496, 499, 11, 28, "Message",ExpressionUUID->"1705f1e7-fe27-4883-b95a-ca0fac5b72a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

