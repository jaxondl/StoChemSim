(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    590257,      10789]
NotebookOptionsPosition[    578065,      10567]
NotebookOutlinePosition[    583975,      10690]
CellTagsIndexPosition[    583932,      10687]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CRNSSA Demo", "Title",
 CellChangeTimes->{{3.8147292785447936`*^9, 3.8147292854487743`*^9}, {
  3.8242482560164833`*^9, 
  3.824248260176464*^9}},ExpressionUUID->"99313edb-9280-4a33-9415-\
fe73f5350fe5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "CRNSSA`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"?", "CRNSSA`*"}]}], "Input",
 CellChangeTimes->{{3.8121561693612485`*^9, 3.812156171593361*^9}, {
   3.8163745297158756`*^9, 3.816374532987081*^9}, 3.8163792638170104`*^9, {
   3.824248268170289*^9, 3.8242482684894447`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8acb8700-aa44-4b5e-a852-0474740d5f06"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["CRNSSA`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12., {3., 9.}}], " ", 
              StyleBox["CRNSSA`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["GetRuntimeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-b586d5b6-e5d2-4258-b2e0-c3be33e19d9c", {
                   "GetRuntimeInfo", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotLastSimulation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-b586d5b6-e5d2-4258-b2e0-c3be33e19d9c", {
                   "PlotLastSimulation", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["SimulateBoundedTauLeaping", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-b586d5b6-e5d2-4258-b2e0-c3be33e19d9c", {
                   "SimulateBoundedTauLeaping", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimulateDirectSSA", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-b586d5b6-e5d2-4258-b2e0-c3be33e19d9c", {
                   "SimulateDirectSSA", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.824248269310271*^9, 3.824249184979843*^9, 3.826674894618745*^9, 
   3.82667542333969*^9, 3.826675582227007*^9, {3.8266757286600094`*^9, 
   3.8266757432444677`*^9}, 3.8266771096601152`*^9, 3.826677140930062*^9, {
   3.826677298319602*^9, 3.8266773152396946`*^9}, 3.8266773654964895`*^9, 
   3.8266779256171227`*^9, 3.826677970960821*^9, 3.826678494272912*^9, 
   3.826821344299673*^9, 3.826824395181867*^9, 3.8268246274046707`*^9, 
   3.826824706461411*^9, {3.8272774320056696`*^9, 3.827277451738598*^9}, {
   3.8272775456385403`*^9, 3.8272775606225414`*^9}, 3.827277812963708*^9, 
   3.8272791077680216`*^9, 3.8272793292744017`*^9, 3.8272804798391075`*^9, 
   3.827280584686715*^9, 3.827280622044793*^9, 3.827283034252796*^9, 
   3.827283188478644*^9, 3.8272839970968523`*^9, 3.8273437613352184`*^9, 
   3.8273440095064607`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"68481b4f-2b09-41f7-b3b7-8e58e58b028c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 0: f(x) = 1", "Subtitle",
 CellChangeTimes->{{3.8209417094500203`*^9, 3.8209417202266154`*^9}, {
  3.821202949424705*^9, 
  3.821202950563792*^9}},ExpressionUUID->"52ad3c2d-9e9e-48e6-8d6d-\
8ea980b00547"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rxnsys0", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rxnl", "[", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"{", "y", "}"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rxnl", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y", ",", "y"}], "}"}], ",", 
       RowBox[{"{", "y", "}"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"conc", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "y"}], "}"}], ",", "5"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys0", "]"}]}], "Input",
 CellChangeTimes->{{3.8209405871178603`*^9, 3.8209405988669605`*^9}, {
   3.8209406574982576`*^9, 3.8209407094906034`*^9}, 3.820940849034672*^9, {
   3.8209410857557325`*^9, 3.8209410908423715`*^9}, {3.821200285878623*^9, 
   3.821200286957405*^9}, {3.821202484758175*^9, 3.8212025179974904`*^9}, 
   3.8212883891020403`*^9, {3.822410910964633*^9, 3.8224109164136114`*^9}, {
   3.82667571411487*^9, 3.826675720146099*^9}, {3.826675761971161*^9, 
   3.8266757825622425`*^9}, {3.8266774116830683`*^9, 3.826677440218357*^9}, {
   3.8266778455235696`*^9, 3.8266778540291758`*^9}, 3.8268213110612884`*^9, {
   3.826824417124543*^9, 3.8268244173542194`*^9}, {3.8272772591228456`*^9, 
   3.8272772593541574`*^9}, 3.827277688227537*^9, {3.827279333236483*^9, 
   3.8272793333960066`*^9}, 3.8272830437193065`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"8b417677-a446-4ab6-80dd-94d45d2a2df6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8209407132668953`*^9, 3.8209409079220004`*^9, 3.8209410926254463`*^9, 
   3.820941755595992*^9, 3.820942123063661*^9, 3.820942203134418*^9, 
   3.8209423601303215`*^9, 3.821199377726633*^9, 3.8211994421561885`*^9, 
   3.8212002948100257`*^9, 3.821201282035832*^9, 3.821202114191646*^9, 
   3.8212024274327297`*^9, 3.821202490570396*^9, 3.8212025209742827`*^9, 
   3.821202736082944*^9, 3.821202959173526*^9, 3.8212031554974966`*^9, 
   3.821206487438026*^9, 3.8212878017882257`*^9, 3.8212884670704565`*^9, {
   3.8212885019069843`*^9, 3.8212885309824305`*^9}, 3.822411442154019*^9, 
   3.8224361159898233`*^9, 3.82363399796006*^9, 3.82424827661791*^9, 
   3.8242491890026197`*^9, 3.8266748962432857`*^9, 3.82667496519069*^9, {
   3.826675725043338*^9, 3.8266757451557083`*^9}, 3.8266757840341997`*^9, 
   3.82667711180444*^9, 3.826677143601319*^9, 3.8266773177079334`*^9, {
   3.8266778460012937`*^9, 3.826677854598053*^9}, 3.826678499847144*^9, 
   3.8268213467042494`*^9, {3.826824403347414*^9, 3.826824417689105*^9}, 
   3.8268246277407703`*^9, 3.826824706877803*^9, 3.827277563110794*^9, 
   3.827277689666816*^9, 3.827277816063834*^9, 3.827279335587428*^9, 
   3.8272806240381393`*^9, {3.827283036249439*^9, 3.827283044882655*^9}, 
   3.8272831943415637`*^9, 3.827284002894562*^9, 3.8273437631582575`*^9, 
   3.827344016783014*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5dbfa8e6-48b6-4923-8554-6bdc2554d8a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys0", ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<States and Times Example\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8209407204450235`*^9, 3.820940728162553*^9}, {
   3.820940758475727*^9, 3.8209407697393293`*^9}, {3.820941031589341*^9, 
   3.8209410333386908`*^9}, {3.8209420287080917`*^9, 3.820942032733575*^9}, 
   3.8212884341016254`*^9, 3.821288506550565*^9, {3.822410924661095*^9, 
   3.822410925244051*^9}, {3.8224113343163233`*^9, 3.8224113469749775`*^9}, {
   3.8224355613377275`*^9, 3.822435595453456*^9}, {3.824248279393591*^9, 
   3.8242483382745843`*^9}, {3.824248390189535*^9, 3.8242483909006557`*^9}, {
   3.824248443254269*^9, 3.824248466614422*^9}, {3.826674904323457*^9, 
   3.826674905650203*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e01cb462-3bf6-45d3-aeb7-66e85bb61022"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.02235014759517601`", ",", "0.07407866634695083`", ",", 
     "0.18769234088633197`", ",", "0.4318155615474887`", ",", 
     "0.5484665802476651`", ",", "0.7713459378842527`", ",", 
     "0.7946087868663062`", ",", "0.9893326535614588`", ",", 
     "1.7430250711381219`", ",", "1.7478354274728245`", ",", 
     "1.9473000402112404`", ",", "2.585539884844606`", ",", 
     "3.476075217637665`", ",", "3.521901037196972`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8212885315429316`*^9, 3.82241144249156*^9, 3.822436119417652*^9, 
   3.823633998758215*^9, 3.824248282200124*^9, {3.824248318104014*^9, 
   3.824248338722396*^9}, 3.8242483931656513`*^9, 3.8242484670312796`*^9, 
   3.824249189274899*^9, 3.8266748972001605`*^9, 3.8266749659136677`*^9, {
   3.82667578832016*^9, 3.8266758130339584`*^9}, 3.8266771139193974`*^9, 
   3.826677144132078*^9, 3.8266773183601894`*^9, 3.8266785001882324`*^9, 
   3.8268213475821266`*^9, {3.8268244058183737`*^9, 3.826824418720867*^9}, 
   3.8268246279721518`*^9, 3.82682470713811*^9, {3.8272776666092014`*^9, 
   3.8272776921380215`*^9}, {3.827283037431649*^9, 3.8272830468128357`*^9}, {
   3.827283100546358*^9, 3.827283105339142*^9}, 3.827283194673768*^9, 
   3.827284003249942*^9, 3.8273437643473377`*^9, 3.8273440169630375`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"05ccab6c-b17a-4d7d-81ed-fd2bc0e4cc44"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.02235014759517601, 5.}, {0.07407866634695083, 
         5.}, {0.18769234088633197`, 5.}, {0.4318155615474887, 5.}, {
         0.5484665802476651, 4.}, {0.7713459378842527, 3.}, {
         0.7946087868663062, 3.}, {0.9893326535614588, 3.}, {
         1.7430250711381219`, 2.}, {1.7478354274728245`, 1.}, {
         1.9473000402112404`, 1.}, {2.585539884844606, 1.}, {
         3.476075217637665, 0.}, {3.521901037196972, 0.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.02235014759517601, 4.}, {0.07407866634695083, 
         3.}, {0.18769234088633197`, 2.}, {0.4318155615474887, 1.}, {
         0.5484665802476651, 2.}, {0.7713459378842527, 3.}, {
         0.7946087868663062, 2.}, {0.9893326535614588, 1.}, {
         1.7430250711381219`, 2.}, {1.7478354274728245`, 3.}, {
         1.9473000402112404`, 2.}, {2.585539884844606, 1.}, {
         3.476075217637665, 2.}, {3.521901037196972, 1.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"States and Times Example\"", TraditionalForm], 
     PlotRange -> {{0., 3.521901037196972}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x", "y"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8212885315429316`*^9, 3.82241144249156*^9, 3.822436119417652*^9, 
   3.823633998758215*^9, 3.824248282200124*^9, {3.824248318104014*^9, 
   3.824248338722396*^9}, 3.8242483931656513`*^9, 3.8242484670312796`*^9, 
   3.824249189274899*^9, 3.8266748972001605`*^9, 3.8266749659136677`*^9, {
   3.82667578832016*^9, 3.8266758130339584`*^9}, 3.8266771139193974`*^9, 
   3.826677144132078*^9, 3.8266773183601894`*^9, 3.8266785001882324`*^9, 
   3.8268213475821266`*^9, {3.8268244058183737`*^9, 3.826824418720867*^9}, 
   3.8268246279721518`*^9, 3.82682470713811*^9, {3.8272776666092014`*^9, 
   3.8272776921380215`*^9}, {3.827283037431649*^9, 3.8272830468128357`*^9}, {
   3.827283100546358*^9, 3.827283105339142*^9}, 3.827283194673768*^9, 
   3.827284003249942*^9, 3.8273437643473377`*^9, 3.8273440175588694`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"496c69fd-f8e2-44dc-a703-40bd9cf85be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys0", ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<States Only Example\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8242483722441106`*^9, 3.82424843977352*^9}, {
  3.8242486489403057`*^9, 3.82424865177876*^9}, {3.8266749090752788`*^9, 
  3.8266749098979387`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f6d49b94-9e8b-4a36-ae44-e2b1dcfd3145"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8242484146118374`*^9, 3.8242484695915246`*^9, {3.8242491633561277`*^9, 
   3.8242491899730473`*^9}, 3.826674968460503*^9, 3.8266757923645115`*^9, 
   3.8266771447864947`*^9, 3.8266773191331186`*^9, 3.826678500694618*^9, 
   3.8268213576406794`*^9, 3.8268244202290835`*^9, 3.8268246289401035`*^9, 
   3.8268247081334558`*^9, 3.8272830504827166`*^9, 3.827283201432562*^9, 
   3.827284006908234*^9, 3.8273437667192354`*^9, 3.8273440177404084`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"867fb2d4-2e71-4f40-8f1b-3af5f7b09b02"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {1., 5.}, {2., 5.}, {3., 5.}, {4., 4.}, {5., 4.}, {
         6., 3.}, {7., 3.}, {8., 3.}, {9., 2.}, {10., 1.}, {11., 1.}, {12., 
         1.}, {13., 0.}, {14., 0.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {1., 4.}, {2., 3.}, {3., 2.}, {4., 3.}, {5., 2.}, {
         6., 3.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 3.}, {11., 2.}, {12., 
         1.}, {13., 2.}, {14., 1.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"States Only Example\"", TraditionalForm], 
     PlotRange -> {{0., 14.}, {0, All}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x", "y"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8242484146118374`*^9, 3.8242484695915246`*^9, {3.8242491633561277`*^9, 
   3.8242491899730473`*^9}, 3.826674968460503*^9, 3.8266757923645115`*^9, 
   3.8266771447864947`*^9, 3.8266773191331186`*^9, 3.826678500694618*^9, 
   3.8268213576406794`*^9, 3.8268244202290835`*^9, 3.8268246289401035`*^9, 
   3.8268247081334558`*^9, 3.8272830504827166`*^9, 3.827283201432562*^9, 
   3.827284006908234*^9, 3.8273437667192354`*^9, 3.8273440178990664`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"835ffc82-8667-4cdb-ad21-b896d3f7073b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateBoundedTauLeaping", "[", 
  RowBox[{"rxnsys0", ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}], ",", " ", 
   RowBox[{"epsilon", "\[Rule]", "0.5"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<BTL Example\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.827277272090618*^9, 3.827277279042055*^9}, {
  3.8272775681873703`*^9, 3.8272776419943657`*^9}, {3.827279355323676*^9, 
  3.827279378996049*^9}, {3.8272804948533373`*^9, 3.827280532644278*^9}, {
  3.8272806394693604`*^9, 3.827280745981558*^9}, {3.8272807832773695`*^9, 
  3.82728081951659*^9}, {3.8272830639914975`*^9, 3.8272830778724766`*^9}, {
  3.827283149206915*^9, 3.8272831561993265`*^9}, {3.827283211014696*^9, 
  3.8272832612459917`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"30b5d26f-07c3-4eda-8fd7-31726095345b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.0637951305235845`", ",", "0.35019656519485387`", ",", 
     "0.4469702377982381`", ",", "0.5254426215395103`", ",", 
     "1.0519201549529433`", ",", "1.230946555025904`", ",", 
     "2.31286932693914`", ",", "2.501685098171807`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.827277283999254*^9, {3.8272775756806183`*^9, 3.827277651758015*^9}, 
   3.827277697135647*^9, 3.8272778188027215`*^9, 3.8272791105830517`*^9, {
   3.8272793399901285`*^9, 3.827279380398554*^9}, {3.827280483077561*^9, 
   3.827280533143568*^9}, {3.827280580893858*^9, 3.8272805888739843`*^9}, {
   3.827280635460825*^9, 3.8272807462514286`*^9}, {3.8272807855594993`*^9, 
   3.827280809095829*^9}, {3.8272830518257103`*^9, 3.8272830789234185`*^9}, {
   3.827283109621592*^9, 3.8272831124405756`*^9}, {3.8272831524690895`*^9, 
   3.8272831627223797`*^9}, {3.8272832043990993`*^9, 3.827283277769423*^9}, 
   3.8272840087548966`*^9, 3.8273437680791464`*^9, 3.827344017988006*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"353d6456-0789-4017-871e-651175332634"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.0637951305235845, 4.}, {0.35019656519485387`, 
         3.}, {0.4469702377982381, 3.}, {0.5254426215395103, 2.}, {
         1.0519201549529433`, 2.}, {1.230946555025904, 1.}, {2.31286932693914,
          0.}, {2.501685098171807, 0.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.0637951305235845, 3.}, {0.35019656519485387`, 
         2.}, {0.4469702377982381, 1.}, {0.5254426215395103, 2.}, {
         1.0519201549529433`, 1.}, {1.230946555025904, 2.}, {2.31286932693914,
          3.}, {2.501685098171807, 1.}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTL Example\"", TraditionalForm], 
     PlotRange -> {{0., 2.501685098171807}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"x", "y"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.827277283999254*^9, {3.8272775756806183`*^9, 3.827277651758015*^9}, 
   3.827277697135647*^9, 3.8272778188027215`*^9, 3.8272791105830517`*^9, {
   3.8272793399901285`*^9, 3.827279380398554*^9}, {3.827280483077561*^9, 
   3.827280533143568*^9}, {3.827280580893858*^9, 3.8272805888739843`*^9}, {
   3.827280635460825*^9, 3.8272807462514286`*^9}, {3.8272807855594993`*^9, 
   3.827280809095829*^9}, {3.8272830518257103`*^9, 3.8272830789234185`*^9}, {
   3.827283109621592*^9, 3.8272831124405756`*^9}, {3.8272831524690895`*^9, 
   3.8272831627223797`*^9}, {3.8272832043990993`*^9, 3.827283277769423*^9}, 
   3.8272840087548966`*^9, 3.8273437680791464`*^9, 3.827344018116952*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"250f8362-1c85-4367-95ad-02936f7f234c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 1: Demonstrating basic functionality", "Subtitle",
 CellChangeTimes->{{3.8147293084016476`*^9, 3.8147293236251154`*^9}, {
  3.8147294485535164`*^9, 3.8147294551377077`*^9}, {3.8147294940728483`*^9, 
  3.8147294946413283`*^9}, {3.8147300945293055`*^9, 3.8147300953690586`*^9}, {
  3.8147305699453588`*^9, 3.8147305706335526`*^9}, {3.820942126937954*^9, 
  3.8209421278581905`*^9}, {3.8268246701952696`*^9, 3.8268247003791895`*^9}, {
  3.827343921893821*^9, 3.8273439233412733`*^9}, {3.827344013197049*^9, 
  3.8273440138857403`*^9}},ExpressionUUID->"26cee006-515b-4511-9df5-\
a84f93ecb4e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rxnsys1", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"2", "x"}], "+", 
       RowBox[{"3", "y"}], "+", 
       RowBox[{"8", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "-", "k"}], "]"}], "[", 
         RowBox[{"j", "+", "k"}], "]"}]}]}], ",", "3"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"revrxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"j", "+", "k"}], "]"}], "[", 
       RowBox[{"j", "-", "k"}], "]"}], ",", "1", ",", "4", ",", "5"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"rxnl", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "+", "k"}], "]"}], "[", 
         RowBox[{"j", "-", "k"}], "]"}], ",", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "-", "k"}], "]"}], "[", 
         RowBox[{"j", "+", "k"}], "]"}], ",", "x", ",", "x"}], "}"}], ",", 
      "10"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{"a", ",", " ", "10"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "}"}], ",", "1000"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "+", "k"}], "]"}], "[", 
         RowBox[{"j", "-", "k"}], "]"}], ",", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"j", "-", "k"}], "]"}], "[", 
         RowBox[{"j", "+", "k"}], "]"}]}], "}"}], ",", "2000"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys1", "]"}]}], "Input",
 CellChangeTimes->{{3.812156221317891*^9, 3.8121562223571997`*^9}, {
   3.8121565321899853`*^9, 3.812156636184914*^9}, {3.812158087830205*^9, 
   3.812158090086171*^9}, {3.8121582194104958`*^9, 3.8121582195062714`*^9}, {
   3.8121586616070833`*^9, 3.812158662749466*^9}, {3.812158724346055*^9, 
   3.8121587491227446`*^9}, {3.8136902494857635`*^9, 3.813690293866238*^9}, {
   3.813690325675309*^9, 3.8136903534044065`*^9}, {3.8136904686793365`*^9, 
   3.8136905470523114`*^9}, {3.813690759774906*^9, 3.8136907808301764`*^9}, {
   3.81369180465316*^9, 3.8136918059147563`*^9}, {3.8136958192970276`*^9, 
   3.8136958287362013`*^9}, 3.814408563951381*^9, {3.814408598103632*^9, 
   3.8144086220944853`*^9}, {3.8147258847932034`*^9, 
   3.8147259087758307`*^9}, {3.814729346482357*^9, 3.814729374177208*^9}, {
   3.8147294727465734`*^9, 3.814729479738203*^9}, {3.820940476595192*^9, 
   3.8209404795634985`*^9}, {3.8224111527245684`*^9, 3.822411153342013*^9}, 
   3.8266750014990063`*^9, {3.8266750624270916`*^9, 3.826675080553746*^9}, {
   3.826675119434166*^9, 3.8266751558661647`*^9}, {3.8266774868753557`*^9, 
   3.8266775743793073`*^9}, 3.8266776538433204`*^9, 3.826677860355669*^9, 
   3.826678505739359*^9, 3.8266785474193554`*^9, {3.826821326236198*^9, 
   3.826821326240182*^9}, {3.8268244953107843`*^9, 3.8268245190603533`*^9}, {
   3.827283367958497*^9, 3.827283388959013*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4ac59a20-336b-40bd-8b3f-f93ee47e266c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "3", " "}]], " ", 
    RowBox[{
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"3", " ", "y"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"j", "-", "k"}], "]"}], "[", 
       RowBox[{"j", "+", "k"}], "]"}]}]}]}], " ", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"z", "[", 
      RowBox[{"j", "+", "k"}], "]"}], "[", 
     RowBox[{"j", "-", "k"}], "]"}], " ", 
    UnderoverscriptBox["\[RightArrowLeftArrow]", "5", "4"], " ", "1"}], " ", 
   ",", 
   RowBox[{"rxnl", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "+", "k"}], "]"}], "[", 
        RowBox[{"j", "-", "k"}], "]"}], ",", 
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "-", "k"}], "]"}], "[", 
        RowBox[{"j", "+", "k"}], "]"}], ",", "x", ",", "x"}], "}"}], ",", 
     "10"}], "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{"a", ",", "10"}], "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "x", ",", "y"}], "}"}], ",", "1000"}], 
    "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "+", "k"}], "]"}], "[", 
        RowBox[{"j", "-", "k"}], "]"}], ",", 
       RowBox[{
        RowBox[{"z", "[", 
         RowBox[{"j", "-", "k"}], "]"}], "[", 
        RowBox[{"j", "+", "k"}], "]"}]}], "}"}], ",", "2000"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.813690624906864*^9, {3.8136907606148233`*^9, 3.813690782168937*^9}, 
   3.8136918133487988`*^9, 3.8136958301231513`*^9, 3.813699945633653*^9, 
   3.813777915630871*^9, 3.8137779859428535`*^9, {3.8137792360494165`*^9, 
   3.8137792632449865`*^9}, 3.8137820928263764`*^9, 3.813944103855402*^9, 
   3.8144028436751347`*^9, 3.8144081083192215`*^9, 3.8144082771910286`*^9, 
   3.8144085704883857`*^9, 3.814408629290242*^9, 3.8144093130514326`*^9, 
   3.814409760515033*^9, 3.814457945869589*^9, 3.814458696603682*^9, 
   3.8144591187200966`*^9, 3.814724627919652*^9, 3.814730099494031*^9, 
   3.8147305729224005`*^9, 3.8147308015701776`*^9, 3.8147323799692*^9, 
   3.8147354422319083`*^9, 3.8147506691070185`*^9, 3.8163730855178356`*^9, 
   3.8163745389032745`*^9, 3.816378339477339*^9, 3.816378694186903*^9, 
   3.8163793938844385`*^9, 3.820940429280677*^9, 3.8209404814228983`*^9, 
   3.82094177190296*^9, 3.8209421306166477`*^9, 3.8209422220656633`*^9, 
   3.8209423799023027`*^9, 3.821199395948637*^9, 3.8212030140196595`*^9, {
   3.8212032176712947`*^9, 3.8212032354329515`*^9}, 3.821203701599944*^9, 
   3.82120648854568*^9, 3.8212878161212955`*^9, 3.821288532152301*^9, 
   3.822411447232175*^9, 3.8224361327649746`*^9, 3.823634002617035*^9, 
   3.8242484980655437`*^9, 3.8242491903221283`*^9, 3.8266749840512743`*^9, 
   3.8266750507513857`*^9, 3.8266751571592374`*^9, 3.826677146240513*^9, {
   3.8266775716386847`*^9, 3.8266775747575493`*^9}, 3.8266776545099993`*^9, 
   3.8266778610229006`*^9, 3.826677933463395*^9, 3.826677975124313*^9, 
   3.826678506421739*^9, 3.8266785477939286`*^9, 3.8268244858394065`*^9, 
   3.8268245195213594`*^9, 3.8268246295075884`*^9, 3.826824708632636*^9, {
   3.8272832996168337`*^9, 3.827283312462165*^9}, 3.82728339066426*^9, 
   3.8272840119735804`*^9, 3.8273437725798225`*^9, 3.8273440669274693`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2941659b-857f-4710-bc80-809745eeb8c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "x", ",", "y", ",", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "-", "k"}], "]"}], "[", 
    RowBox[{"j", "+", "k"}], "]"}], ",", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "+", "k"}], "]"}], "[", 
    RowBox[{"j", "-", "k"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813690624906864*^9, {3.8136907606148233`*^9, 3.813690782168937*^9}, 
   3.8136918133487988`*^9, 3.8136958301231513`*^9, 3.813699945633653*^9, 
   3.813777915630871*^9, 3.8137779859428535`*^9, {3.8137792360494165`*^9, 
   3.8137792632449865`*^9}, 3.8137820928263764`*^9, 3.813944103855402*^9, 
   3.8144028436751347`*^9, 3.8144081083192215`*^9, 3.8144082771910286`*^9, 
   3.8144085704883857`*^9, 3.814408629290242*^9, 3.8144093130514326`*^9, 
   3.814409760515033*^9, 3.814457945869589*^9, 3.814458696603682*^9, 
   3.8144591187200966`*^9, 3.814724627919652*^9, 3.814730099494031*^9, 
   3.8147305729224005`*^9, 3.8147308015701776`*^9, 3.8147323799692*^9, 
   3.8147354422319083`*^9, 3.8147506691070185`*^9, 3.8163730855178356`*^9, 
   3.8163745389032745`*^9, 3.816378339477339*^9, 3.816378694186903*^9, 
   3.8163793938844385`*^9, 3.820940429280677*^9, 3.8209404814228983`*^9, 
   3.82094177190296*^9, 3.8209421306166477`*^9, 3.8209422220656633`*^9, 
   3.8209423799023027`*^9, 3.821199395948637*^9, 3.8212030140196595`*^9, {
   3.8212032176712947`*^9, 3.8212032354329515`*^9}, 3.821203701599944*^9, 
   3.82120648854568*^9, 3.8212878161212955`*^9, 3.821288532152301*^9, 
   3.822411447232175*^9, 3.8224361327649746`*^9, 3.823634002617035*^9, 
   3.8242484980655437`*^9, 3.8242491903221283`*^9, 3.8266749840512743`*^9, 
   3.8266750507513857`*^9, 3.8266751571592374`*^9, 3.826677146240513*^9, {
   3.8266775716386847`*^9, 3.8266775747575493`*^9}, 3.8266776545099993`*^9, 
   3.8266778610229006`*^9, 3.826677933463395*^9, 3.826677975124313*^9, 
   3.826678506421739*^9, 3.8266785477939286`*^9, 3.8268244858394065`*^9, 
   3.8268245195213594`*^9, 3.8268246295075884`*^9, 3.826824708632636*^9, {
   3.8272832996168337`*^9, 3.827283312462165*^9}, 3.82728339066426*^9, 
   3.8272840119735804`*^9, 3.8273437725798225`*^9, 3.8273440669334583`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"17e1deca-084f-4ffd-9a79-711a43bfc7c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpeciesInRxnsys", "[", 
  RowBox[{"rxnsys1", ",", " ", 
   RowBox[{
    RowBox[{"z", "[", "_", "]"}], "[", "_", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8136907285561438`*^9, 3.813690790361905*^9}, {
   3.8136958054154396`*^9, 3.8136958077033677`*^9}, 3.814408566863628*^9, {
   3.8144093756226687`*^9, 3.8144093865816298`*^9}, 3.8147292055696926`*^9, {
   3.8266785157713623`*^9, 3.82667853861833*^9}, 3.826821314816223*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"6b802521-abe5-46a6-a500-e567ba56f44a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "-", "k"}], "]"}], "[", 
    RowBox[{"j", "+", "k"}], "]"}], ",", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"j", "+", "k"}], "]"}], "[", 
    RowBox[{"j", "-", "k"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814729206049425*^9, 3.8147301009764967`*^9, 3.8147305741416564`*^9, 
   3.8147308020169835`*^9, 3.814732381076254*^9, 3.8147354427012987`*^9, 
   3.8147506694909925`*^9, 3.816373087342509*^9, 3.816374540068579*^9, 
   3.8163783415019236`*^9, 3.8163786965149107`*^9, 3.8163793942504597`*^9, 
   3.820940431505563*^9, 3.8209404855072975`*^9, 3.820941776106171*^9, 
   3.820942132272545*^9, 3.8209422223779488`*^9, 3.8209423802053537`*^9, 
   3.8212030173318343`*^9, {3.82120321916004*^9, 3.8212032370779667`*^9}, 
   3.821203705701233*^9, 3.821206489383441*^9, 3.821287818418151*^9, 
   3.8212885324564877`*^9, 3.822411448330711*^9, 3.8224361335458574`*^9, 
   3.823634003441637*^9, 3.8242485001589985`*^9, 3.8242491907749233`*^9, 
   3.8266749849600058`*^9, 3.826675053103543*^9, 3.82667515902936*^9, 
   3.826677146939413*^9, {3.8266785079684453`*^9, 3.8266785516238127`*^9}, 
   3.8268245235947995`*^9, 3.8268246298893623`*^9, 3.826824708836093*^9, {
   3.8272833062499247`*^9, 3.827283315334114*^9}, 3.8272833924974995`*^9, 
   3.827284013618841*^9, 3.8273437737798557`*^9, 3.827344067032444*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"fde014e0-108f-493f-a9fb-f6bc1f38034a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys1", ",", 
   RowBox[{"iterEnd", "\[Rule]", "15"}], ",", 
   RowBox[{"useIter", "\[Rule]", "True"}], ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81472914943776*^9, 3.8147291765769897`*^9}, 
   3.820941860800666*^9, {3.8209420429675617`*^9, 3.820942047947171*^9}, {
   3.8212036980547934`*^9, 3.8212036994600697`*^9}, 3.8212883184625483`*^9, {
   3.8224111641894903`*^9, 3.8224111645610967`*^9}, {3.822435608261158*^9, 
   3.822435668086137*^9}, {3.8224361429875937`*^9, 3.822436146895141*^9}, {
   3.8224362721789675`*^9, 3.8224363030583563`*^9}, {3.8236340075244684`*^9, 
   3.823634009235863*^9}, {3.8242485040796123`*^9, 3.8242485407604446`*^9}, {
   3.8242485849304686`*^9, 3.8242485902413697`*^9}, {3.8242486412746162`*^9, 
   3.824248644498046*^9}, 3.8266749459084034`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"77c1fb6b-12dc-4da7-a958-5c5a4452f187"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "2000"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1999"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1998"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1997"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1996"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1995"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1994"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1993"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1992"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1991"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1990"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1989"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1988"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1987"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1986"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", "1985"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147291780350904`*^9, 3.8147301016307487`*^9, 3.814730574646409*^9, 
   3.814730802388991*^9, 3.814732381613818*^9, 3.8147351001328497`*^9, 
   3.81473544306411*^9, 3.814750669706415*^9, 3.816373087978814*^9, 
   3.8163745406915913`*^9, 3.8163783427646523`*^9, 3.81637869723997*^9, 
   3.8163793945596333`*^9, 3.820940442724416*^9, 3.8209404879689474`*^9, 
   3.8209418768896704`*^9, 3.820942138008053*^9, 3.8209422287339983`*^9, 
   3.8209423869083867`*^9, 3.821199406805237*^9, 3.8212030184831886`*^9, {
   3.821203219855632*^9, 3.821203237738504*^9}, 3.8212037062391667`*^9, 
   3.821206489850192*^9, 3.8212878198084345`*^9, 3.821288532667448*^9, 
   3.822411449590663*^9, 3.8224361345651255`*^9, 3.822436209409894*^9, 
   3.8224363044985323`*^9, 3.8236340097582474`*^9, 3.824248517422267*^9, 
   3.8242485533850007`*^9, 3.8242491915897646`*^9, 3.826674988879505*^9, 
   3.8266750562229414`*^9, 3.826675160527723*^9, 3.826677147635498*^9, 
   3.826678552208644*^9, 3.8268245312531033`*^9, 3.826824630073928*^9, 
   3.8268247091233244`*^9, 3.8272833213717556`*^9, 3.827283397742605*^9, 
   3.8272840148441715`*^9, 3.8273437756536646`*^9, 3.827344067099265*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ead1ac67-daa9-4da3-a071-b31f86e0828d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimulateBoundedTauLeaping", "[", 
  RowBox[{"rxnsys1", ",", 
   RowBox[{"iterEnd", "\[Rule]", "15"}], ",", 
   RowBox[{"useIter", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824248570912603*^9, 3.824248596361162*^9}, {
   3.8242486332598114`*^9, 3.8242486390026054`*^9}, 3.8266749498339815`*^9, {
   3.8272833316076355`*^9, 3.827283344239098*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"727dc939-bc19-45b3-a825-77595faf5284"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1930"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1896"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1862"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1829"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1797"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1765"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1734"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1703"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1673"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1000", ",", "1000", ",", "2000", ",", 
       "1643"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1002", ",", "1000", ",", "2001", ",", 
       "1615"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1002", ",", "1000", ",", "2001", ",", 
       "1586"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1002", ",", "1000", ",", "2001", ",", 
       "1558"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1010", ",", "1000", ",", "1002", ",", "1000", ",", "2001", ",", 
       "1530"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.003626591307612327`", ",", "0.008040712107383052`", ",", 
     "0.012755825231174762`", ",", "0.016823270352150217`", ",", 
     "0.022284671406717974`", ",", "0.025974109161089096`", ",", 
     "0.029167415408810692`", ",", "0.033995631443421444`", ",", 
     "0.03839302926365919`", ",", "0.04301275131789399`", ",", 
     "0.04698284419734583`", ",", "0.05166311931873289`", ",", 
     "0.05614232213002413`", ",", "0.0604961020047449`", ",", 
     "0.06488236660063226`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.824248573486785*^9, 3.824249193446846*^9, 3.826674990040995*^9, 
   3.826678593744368*^9, 3.8268245324451947`*^9, 3.826824631027895*^9, 
   3.8268247093051987`*^9, {3.8272833243568745`*^9, 3.8272833451348157`*^9}, 
   3.827283400118695*^9, 3.827284016121971*^9, 3.827343780345625*^9, 
   3.827344067181055*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a77876f8-d2ff-43e4-a40d-0de6e444faad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 2: A deterministic CRN: maximum computer", "Subtitle",
 CellChangeTimes->{{3.814729433809305*^9, 3.8147294355456643`*^9}, {
  3.81472950289729*^9, 3.814729513665765*^9}, {3.827343915525812*^9, 
  3.827343917781657*^9}},ExpressionUUID->"cac518be-760f-4e04-892e-\
7b19f51723f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rxnsys2", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"x1", ",", 
      RowBox[{"y", "+", "z1"}], ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{"x2", ",", 
      RowBox[{"y", "+", "z2"}], ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"z1", "+", "z2"}], ",", "k", ",", "1"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"k", "+", "y"}], ",", "0", ",", "3"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{"x1", ",", "5000"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{"x2", ",", "15000"}], "]"}]}], "\[IndentingNewLine]", 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys2", "]"}]}], "Input",
 CellChangeTimes->{{3.8144085881445637`*^9, 3.8144085949750285`*^9}, {
   3.8144086415345135`*^9, 3.814408773526466*^9}, {3.8144579679866905`*^9, 
   3.8144579724018903`*^9}, {3.814458753761915*^9, 3.8144587621056166`*^9}, {
   3.8147258972328653`*^9, 3.8147259108556476`*^9}, {3.814729528665941*^9, 
   3.8147295295857563`*^9}, {3.8224112980189466`*^9, 3.822411312097892*^9}, {
   3.8268213148222055`*^9, 3.8268213262431736`*^9}, 3.826824674660168*^9, {
   3.827283458055205*^9, 3.8272834674380693`*^9}, {3.8272836209282804`*^9, 
   3.8272836240790577`*^9}, {3.827283664671192*^9, 3.8272836648221917`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9fe609a4-5ad6-46db-842b-92f8411dd608"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2", " "}]], " ", 
    RowBox[{"y", "+", "z1"}]}], " ", ",", 
   RowBox[{"x2", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2", " "}]], " ", 
    RowBox[{"y", "+", "z2"}]}], " ", ",", 
   RowBox[{
    RowBox[{"z1", "+", "z2"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "k"}], " ", ",", 
   RowBox[{
    RowBox[{"k", "+", "y"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "3", " "}]], " ", "0"}], " ", ",", 
   RowBox[{"conc", "[", 
    RowBox[{"x1", ",", "5000"}], "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{"x2", ",", "15000"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQA+Jzm754ZGS/cWy4G9oDos81KBwB0TfW+ng3AGmnnFJ/
EJ34XGUliH74YPcmED3BUuQeiBZ9tKaJKeeN4xv/b3qsQPrhB4EsEK3GUNwG
olemvvBmA9Jl0jmn2IH0FK7jlvxA+jDn3X+a+W8cteqWaWoBaQEeXVsQLaee
2gCi2R/nzrpb/sbx5I2A9HtAOiwhtQxEy7bltYHoOVuPPYuteON4bTtzbTyQ
/vFYzKIdSM/qZ2gG0ftWre4C0Z0v3W+srnrjKBJx8td2IK22UPsMQ+0bx5ur
sh/r1L1xPL8uTlcXSNd933DsbNMbR5OFrVvOAenfdxMzzgNpYzam1WLNbxx3
s/NvB9EfX+ftAdFSFhsPgOiT3TP3fwPSAvoJx0F0hLHwVTBf5ArbdyA9p++T
qUgL0N3/0yNANABeILzu
  "],
 CellLabel->"Out[16]=",ExpressionUUID->"cd4c59b6-116e-4773-b802-934689f73f2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", ",", "x1", ",", "x2", ",", "y", ",", "z1", ",", "z2"}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQA+Jzm754ZGS/cWy4G9oDos81KBwB0TfW+ng3AGmnnFJ/
EJ34XGUliH74YPcmED3BUuQeiBZ9tKaJKeeN4xv/b3qsQPrhB4EsEK3GUNwG
olemvvBmA9Jl0jmn2IH0FK7jlvxA+jDn3X+a+W8cteqWaWoBaQEeXVsQLaee
2gCi2R/nzrpb/sbx5I2A9HtAOiwhtQxEy7bltYHoOVuPPYuteON4bTtzbTyQ
/vFYzKIdSM/qZ2gG0ftWre4C0Z0v3W+srnrjKBJx8td2IK22UPsMQ+0bx5ur
sh/r1L1xPL8uTlcXSNd933DsbNMbR5OFrVvOAenfdxMzzgNpYzam1WLNbxx3
s/NvB9EfX+ftAdFSFhsPgOiT3TP3fwPSAvoJx0F0hLHwVTBf5ArbdyA9p++T
qUjLG8d48YwIEA0AWd68SQ==
  "],
 CellLabel->"Out[17]=",ExpressionUUID->"f6187ae9-d9b6-4dfc-9d5a-a9210cc7ddb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", "rxnsys2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<Maximum Computation with Time\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8121608648864627`*^9, 3.812160882763273*^9}, {
   3.8144084175118294`*^9, 3.8144084184224854`*^9}, 3.8144085678788805`*^9, {
   3.814409394391098*^9, 3.814409394766097*^9}, {3.814409814502433*^9, 
   3.814409816717512*^9}, {3.81445878639508*^9, 3.8144587884096975`*^9}, {
   3.8144588828344636`*^9, 3.8144588829052424`*^9}, {3.814725928632921*^9, 
   3.8147259288562293`*^9}, {3.816378354103325*^9, 3.8163783551196084`*^9}, 
   3.8209420140522723`*^9, {3.820942053226987*^9, 3.820942055614102*^9}, {
   3.8209422554994326`*^9, 3.8209422561547284`*^9}, {3.822411354994705*^9, 
   3.8224113559451585`*^9}, {3.8224114649193974`*^9, 
   3.8224114655807977`*^9}, {3.822435755449415*^9, 3.822435755947051*^9}, {
   3.8224358244467916`*^9, 3.8224358578444777`*^9}, {3.823634020791829*^9, 
   3.8236340211252356`*^9}, {3.8242486104657955`*^9, 
   3.8242486289298873`*^9}, {3.8242486615788345`*^9, 3.8242488078868566`*^9}, 
   3.826674953161434*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"b6268b37-be13-4b8c-a833-d45a91bc13ff"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TimeSeries", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5.198101775877357`", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5.198101775877357`", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3.321995206695405`*^-9", "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TimeSeries, 1681360, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           TimeSeries, 
            6252323590198298951927499111175791484597095828567839878256, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("TemporalData[TimeSeries, <<1>>]"& )],
  False,
  BoxID -> 6252323590198298951927499111175791484597095828567839878256,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8163788595526867`*^9, 3.8163792709010954`*^9, 3.8163793967168627`*^9, 
   3.8209422709446316`*^9, 3.820942401045331*^9, 3.821203256005368*^9, 
   3.8212065053897867`*^9, 3.821287874644139*^9, 3.8212885343938427`*^9, {
   3.822411459249213*^9, 3.822411469025836*^9}, 3.8224363112324967`*^9, {
   3.823634018365156*^9, 3.8236340220223603`*^9}, {3.824248704866758*^9, 
   3.8242487107003045`*^9}, 3.824248827985618*^9, 3.824249195694889*^9, 
   3.82667525430187*^9, 3.826677157856151*^9, 3.8266785958057575`*^9, 
   3.8268245370262804`*^9, 3.8268246334516096`*^9, 3.826824709797413*^9, 
   3.827283516047195*^9, 3.8272836301846037`*^9, 3.8272840237939367`*^9, 
   3.8273438020095673`*^9, 3.827344067461608*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"991feb91-2818-4b5e-a24e-c3b9748dcf3a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1nc41v3bB3B7hDJLQt3cQpHZbd1xIWVLZCWFJCSSVRLZI8RFRrJHRnZG
ZkjIyCqKJKuM7BTK7/ccj87zOZ7+6Xgd7/d5fr6f73VFf1k4nLUiIyEhWSUl
Ifmfv///H2mhwejIHnWF/9WignfJFVE1DUOwtgtTbWwIWif6GG1VpDm4Q7Fs
pKTNesckhLGTUT6yp6+C7wm71rDKXt8xI8HdR9SpPchpx6yEzb2Ot3XL/5id
ENDKE3DJzgUsFR3f/63fbceHCK16Ua2xWZ47PkywULxw4chb7x0fI1h7akcJ
2/jsWIzAMtNsZpHgt2MBQmfthSHtpADom/ZI0q8cCNrx3wThUo1f1oIhsP/F
T+ailmv3d8xJYA3fl6tpHg6m4BDjF7d7AM+3j3fyr2bPyB3zENS2nyq1SkTB
fY7Tf2xVViKCJVZOaiQaRsP7qR0TKlW8HgPvj6ya8ixd0EPYP8M2eHHWORb2
S2QEGfEZxaEZXpO9sYqH+6rv66L34k2AXKFzoSOK6dGOaQjbFfsi7sgmwvMs
pomLcgo/hs/H79DWLr7LSdDX31/hpiqeDH2Fl4zKB3lToN8b/ZOjsjgF7jN4
Jd6D5UQq3OdCptLB5IFU2Jey3fQgQj0Nvk8+vZc4vQfTYF/fzYiIQMN08OyP
Y1Qdi+mwz8ptmu1HeAbMh+cX7I47kQn5qQttWSkf0IFsUd+9rmRBf827+mUK
Yzbch9u4UYgvMhvva+89pMDyBOZ/JFE5bBPRnIs1WvfVcmAft1XubeG1HJi3
HZvjEynMhVzB59XQlEweWFNJPsF/MQ/6jDaf269b5cP7M3+wIdk0nw99rqg8
zwKbp3D+9fXzqvU/n8K8/fzQEsGnAKys/iDVa08heMlk71mdYPRsXuHLh/RF
sG+2OieXaFAE+W2D30SJ5CI4X/1Zl+75KTRVqmnh8N/FYAfNCN5Ml2J4frqD
DXsTa4thX3neluoGdQmYTDZ0nNblj0lIpsnP3lcvLYH5JfkEIzPqUthPsyUU
H3IBTS3DpcRXgDZsomMp2CiF+1BaxLtV6pVBnkefcGczpQzOi16RZNYaK4Pz
nORb9kcdfQbP55kkJ21r8wzm6Z7Ina5Iw/ydxdJHnmXMA+20bm0bl8P+IJbA
iboMMGHGVlFweaUc5pk0bausCRXQd43oCg2ORV8/sedOzOcKvO/AXVd30UrY
5y2fJGZGrIT8bKqJ9K0ZzLutjUhGZatgX22zkri7dxX0R68apzp1Qk4gCFwj
UxB5DrleobyOgO9zyMWoBz5W9WP+ZK/+FQfOavCRvOyC+avoAC+74Q8p1TBf
ynPa9TdVDdjpVcxt2Ys10P+qkd2d/BLNN3rwqsHuWujrlKfU8qnUwvtTVBN1
Yn8MOUlzW/+Lt7O1MO9Pxzm6KlkH+ScesqzIEDDBWjVpkbm7DvqupirkGcL1
kA/xpTEYEeshF19JMz00DjnJlPKdTX/eBujfmRh9zGOKnvZk+8c6uAHmrTPv
WiuXQU5iH2bEvTCAuaLfaaaZFZz/WDBYSMbzAvJgpltBNLrodKq5sqaQF7Bv
3K7qg1sp5gTTay6q05i76PjTtjE0Qp4m+foSQaERziMN/z4wdgM92PPFtS8Z
TJI3wXTkRjPOM/6g1pf8gvmrkSqi/+Em7B9KPMVm2AT9BjbJAvsA9M247jM3
S7Bvxjqw1jeFOT+3lbk4bzPYjybmr5pzaOsz3jzcoc0wz8HN6q9SjV66l7if
OIa20BM8FUj/Eu43SblV3fAvmES7ZPq5rt1L2D+X6cFpVYJ53gJTWtxb9L8h
E1wfyVugH7QnJXTpaAvkB+QSw8zPY36ZbFGLPQLzlA/uqac70Bd9Ld7ozKHD
rAYiH3O9wp+PQWelOZVewb4uflKjDjfMM3nTT3LkoT3CS8gDxsAE9s2pPcHU
rTBv16MRS6nUCn1XjxFtd6c/ZiScj4m6pB+DfaG7QTEmDdiP6Hk79XQWrbx4
KzyArQ36d0S9knXOoG1r9R5P+bZBXzqLP/t5FZrhny/G9atoKekka3vBdvBh
412y34zAhBGP8Mt+vpjntHKXDZWhKYYWN7h+tMP55MuHbs5KvAbHLBexZpi9
hv766Rm6kgi0i/q+wITmP6YhqERrBl1dwdx+9/TABk8HWHHI1zTYpAP25zYy
J8sFYi5w/omSYinmIm96PW4NoM1P7w44Q94Jljmi4ywl3Anz1NUeFE2XMZec
mXq2Hoc5r55G/q42zFuZjbXXqLsg5zRULimQQ19pzqipv9YF/dgEz1MTKZjv
av5qWzCOZibV9Jzn7MbPQ9nZL8EKPbjLKcwgDb0dbPKQbRgt8ihylJv2DZxH
a6DUwHHoDeQLXPxvueUxHzgavDJpiC6fKrewt8P++4vGsaLhaEnGFtK0DLTI
Daqzlo1oBpVQldhRNB87+bLYJrrUKvf+FGcPuKS4bU1BFv3WlFS7RB8tavcw
dtOhB57v9gIFcTYM8wXFz75MZejMXr3SwHfYb9zzjb5lFb3Sspu9fncv9Nn7
7nZJCaHn4q4716n0Qr9hrbs32gh9oGh+K8sN+5ZHuSNvJoAJPkeW3T3qME8W
CGZbG8b569Kiqi0bmL+I8nXYZO8DM11V59WURR9xZZYWNEL/k+1gNXsDnT9t
x3wyHO2WEF3kldsH54VohnK8bMT8yjx1nuQsukn0IisPYz/4hoxMSchxdNJo
/MdmXTSZjcBGhX0/7I9oDJi0CcHcOt10oTwD813ERq62RrT/qKhi1QTagffV
8WzSAXh/mXqOvcN8f0xDiL7E8oFHCXKS0P6uLt/LAzA/9qXQbr8v5uynMu1b
ctCEdsfQjBp0aem+QOIYzt8nUoQ0/Mbzo5nfx21yv4V+9n5zXTp9tLhhvrCo
FzpMk7lOLx1MEPJKc7brxHz1aIm31ypajiOm4xvjO7Cj4GNnCnF0Rr8bR6ge
miMmzZPhFnrrPpVq3SN0y80Ex5pytNdD76zf4+glLYlQfbpBuK8uacPebqlB
yD0p3pz/bgQmLFh+E5BxwX59d3siUwJ6ezZAJesFzrOOlSxRf0V3VHZpXKEd
gv7IJ4fBnBNDkE+bbnUVnsM8ol8+jsQVckK1wfOejijsv3a+ocZRj/3XLrMb
Fycxj1wNXT5F+x7mm/SFPsWJgEm+nJu06L6E7lH7zhkbit4u+9V59ym6TUGw
1vc9WuBc0Scvsg9w/uaYmOqg8AfIG1Y1O0nNML+rp+V86wHmikWU7E8a0Ex7
PJXHp9GCQuQDMlzD4MmzRbOh6mhXwcPGuR7DsP+RDJvEhSS01Pdb9GNt2G86
6mxQu4RWWAwecmAawe+7eWiMmcQI5HqLyS0bepiflzgfo+qCufp8Ut+7ZPRG
YZuiSzP6RH7W7+A19NE3yYHvOT7i5+fYGcgkiyZJlzI/cRn9YzxsqSEG7ag9
wE5bDyZUcxOL+z5hHhpn+4OGdhR//+wit8g9ik6z/OHzSx+9fuKlL6s/OvHG
zBhnPdrAVEhM4Bv6Wi7DMCf9J3gf1smaUcFcnyBv7do/rS+CnuM//CNXBfu2
REPfuPOYB4URFbtdML9wLUgozg/zEI7toOoMzH1SR/lpKzFXobIcvNqGbjF9
GTXb/3/OX79DWjaHTmdJTyQnGwN3FRMvke8bg/0a0UtqJeKYU27ti9U6gy5i
ZVF7fRlt1BNYefk2+tkhR6bsCHTWYGvn2ydolxe1yyONaDZK1oWzA2ipXul3
R1fQrzOYnPToP4MfZt3wOMePtqpKyraRQz93leOnNkSrXbSh73b+DPcbOGnw
oCAUvfpLjOlwBvaniHy5erXopSU10+Pv0PyPvDTlF3G+wJKhgsg4DnnuPfOP
k8fHISc+8Tv4TBsdqBqXs3kV+xfktCitAtHzg/a6tKnoFffyDv3n6H8WW27b
DqBPG6jna67j/gOXrVUt9k7g9z9TzaFQGj0nn6xmeR6t7ZD23zc6AfMti6fE
dB5ivlXXme5ajQ67586xdxD7Fd2Two8W0am1ux2/ME2CXT+wrKUcm4T5BLvu
3uuaaH1CmISWPZqDYpSlNQyt9G2DXy0bvSnN6lFVj6Yhk+In+4z+YNvRuPIL
HSKj9TCfewr8dXwmWZmArrcXSwowm4Lnpb5yo6LFF/O+UGeO95lot3arm/RN
6NbvZ8f//oz2HU6cEKecBjNute1NFEDffZB7k0FrGs7jWnxnzO2EOVsbs2hv
KnpR3I3JtRWdmETWEjKD88OfqMYJu79Avp/g0UoQRfe8JxKGz6Ct1EPoZhy+
wPyudpuathjMM3QCej7XYa7L/LjBYxLzS+pd1u8Yv0JexdW5J1XuK+RmE9qW
f1tg/rI4lycqBPPDx/65plyJFhLPlGEdRDNKKxUs/MB5lvqt0xE8M/j7qsTz
yzkztLthpaBNJNp6TPKnYfsMzB+RpRnSmkHrtZ/zdaSdxd9PypMFe6XQ3207
v7Jao2M1FIpn49Dbhu8Z+t6gr9k21TuRz+F9VDoLlg6jvVYWbMM00BO7V4It
PNF27MbWUnVz8HzJQwzuJ6cxn8xMmzI6OA8+RmVZbW48D33ZQufnAkHoQ+Mm
tgZt6DNKksIOSzi/Xpp504/9G35f5uQS/c6gPZ4F9S46oOs8zZU249DVbdZt
6p/QImsZikV7F8DjoVYxD5XROiYi68W+C/A8uRxT7QvtmFPO0kzNUyyCeXJ5
tzIPo+1M9Voc1NEx99O94i3R/fk1Ff4+i7B/v8pnFtoUzImDR+n+akYPBN5O
jvmMji+b/vqcZgm/P/mC/pP8aLGB482xOuhjld6PS2+h58ujtN/koR2FpJmX
etDuy/eePJpBRwj2Gb0+sAz2N1Jkt9VG8/P8tJ29i26WMX+7nr4M96sK0b3J
3IJ5qvI5b4pl9JrRcMWuwyvQn1l/qmmtugJ5t/Uhc8576P3RQ6Nl5dinCjs2
KrOAXr3Yahm/fxV/XgYyXOTXRZvfzblq4oM+3n/n1mYV2uT+ILk92Rra1OOj
lPQa7L88d3XumyP6zbol3b5o7GvyJj3IGUafZDTfkOf+Di685hVhbII2t7Jy
Dkj8DvtOOY7rHdzGnMo8WuK4/Dr4F+cDMhMimtZ18tTuEfRoesc3U+Uf4Afy
fQeXI9HJp+c1dvWgmzzp+quVf4IlhNsDOcPRXTYWtvPf0TmJrCLy1zfA0z/1
DONnNuD55/ieFOWYbULu91qZRWUB/e/af/9zbLIF/UrVEVLKLfSljIeURfG/
8N/P4jFrWqnfeJ8qi6HgDTTzvzXhQ3QkhD/zibIjUSref/zfz6PRY21rFPPi
FY66wiRSyMeM00d0zcnAauEWIh7J5GCFfynI065QgCsO5FnpuFPBvlXNx8Hq
vLSQzxbxiH1oZwX/B6nEjLk=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
vayVJgsJ/RcIPHL+
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
NNSQJy9DW4b6nGcSZTKH8z8IVd9Z
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rXVlbdgWsrQQy4rZt/LOMmYrCfGhMMjkXjpZXQhnFS2pwRaythBnPv2XerOH
bChEwKIHFg1/fWLmsxTiioWOrIPJJ1oPIZSVvjv0XqDcTYjaVTaPviZQ7iVE
ic+2k1I8crgQcXo72GM/kROEGLZ4VjRhwRAzvkiInq93jO0NyPVC3LWfYyP/
H2N2uxCzQto78gvJH4UY57esY1U/+bcQn/fy90fM+sxYogFVnpP3Km8jKzTA
5sLtQ7suMWYtbcDKh+fP/iihfFUDdl1rEz0qMsx44x9bub3Q1Bqm/bIBB/oO
9X10pvxAA+593T9xZgj5WAOM50UH3n5G/QsNWD/NZkRb8QvjgAZkHbkYYLmL
MTv6z/HY2blcjSLfacAG59ems39Tv6oB42xC1Fdqf2Xyhgb8lA8U2RXMmNXa
AAnXrg1TnpNfNqAjofGjld43pt/fgEDtB7M/XWfM+t2AmI0fNk1oIUs3gus+
8WGZ3nfGio1QXyr0lPcnL2pE82Fbhw9fyJqNuB0ls1z72Ahj/Ua8/W5qHtHD
mG3RiL75qdm3rX8wuX0jLjfoSev3k0814t/hP3+Od40y/UuNKDZ4PkZslOzX
iH2JN8SyI34y/ahGhA4ss5fQ/MXkSY0ILLFt9x5hzCpohNS/5f7tE1n4Hwsb
EbX6eZA+m/ykEcYct+HRDvL7RuQMyVVmRY/5H7NHGtFpmfB8m40Ik4s3wdDf
drlbjCiTz2jCun/HisYfHMt4bhOK/kq323JmHOOlTfhsfMvbaJ4E47VN6M1W
UnsqlGHmM27C/wPXZN1z
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1nc41//XB3BbQpklSX35WkVmWcUbySZRRhpIQqJCSiJ7ZGREkk2hECLJ
CAnZoxDJLiM7Qrl/9/X7OOe+7v5xPa7nOee1Pvr4x8LhpBUFGRnZIjkZ2f/+
/P//ZIS7ox60aSr+VzyEZ/4lMQ0tI5IPErrOzGUxQWi9qIN0JQ/MSZYiGpUK
+/PrrUmWJwaPRXjJqV0G3xNxecsmd/W/9lQiXL3ErjcEXCf5GLG2w/G2fhHa
r47H74KdM6lfjZCOetT5s/MmKdcg6gwi6mIy3Em5FmGhdPbs/k+eJGsQ1u66
ESI2XiSrE6wTNecs4nxIPk40lZ3t0U3wI/kYYdYmxbCwO4A0X5kQKdD6Yy0U
RMqViXe/WfJqr9wn5QTBFrozS9s8lJQfIag4xQUk7MJJliV28o7+U+P+AHKN
jRfKdZIR4EMMX+tUlCNJViAkF45pxRtFkaxIlA0KFyhdjQZTlFKfpA94CPc5
wd59ftIphmRpQjItwJjPOBbN+JGi1eoR7EdzZzODB28cyYcJxaaZxgjmxyRL
EhvFO8PuyMWTLE7MpkiIcYk8IVmQ8Nm3vpXvYgLkhruKb6pLJMLnQfE9k8pe
3iSShYn2qN+cr1+iuy89cmM9mgzzzqYr703s2vR+ImmjOjxMM4Xkfwmv9gtc
nt2b5iI6boSF+RulgidXDtI0zm56H2F1c5x9JTQNHPo8Z1vs0XSYf/xsfUbS
l3RY35894pfHpQyYt+RZ+j6J6SnJHAS3SZUw34NN8xCG9p49iqzPYH8rCTQO
G5HPoJ9r9q3OfY1MkpkIbqus2yJLmZDbDk7xieZmwX0oen3oGZPNJpmf0FZW
iPOdzYb9MdkMNVy1eg77MQ9flaqefg71eyKy3XNsXsD5ri6fUa/4/QL2Zz/d
M0d45cD6KprhyR7bc6F/znTHSb3AXOifzM59/5AhD847WZqZFXk6D85z+/Tf
SMlEzDVfNeufGcuD9WiSzXL7/n0J+3XQDuNNd0bT763cEV+GLspeV1+lzQdT
yAUP0znnw/uNU568r1mwaTZiTiHO+BxtAclkxJZ14UdBZwugnlZ2jzJfTgGc
16ianjVntQDmU1s8uvnaoBCczRB3Zy2pEPqjFqRYdAYL4bzXFWp3RRx4Bed1
T5CXsbV5BfdH/0xerTjlFfR/tpj7yjP/Ctb3t9O5tWFSBA5g9R8pT0NP2CoJ
zS8UwTxmbdsSa6IY1ncJaw4OjCmG/V49uv1O9BDmtF13XVzFXkPuqZAgfi5y
01uIk8mmMrcm0C3WxmQDciWw37IaZQlXzxLYz8Blk+TrTSVwv4TgFQpF0Tew
nkGugp6g9xvIxWm7vpZ0voH5z3YYXnLgKoX6/dlPc6Yvl8J8Pw+7vi9JpdBf
wKPm8pfmLd73h+jbcuc3Pav4Q+tpS+L7t1DPN7D38ultZfB50CtKKuNTLYPz
K2mIXed4gq6p73z3aRLtS881sChVDut946HIeBBUDu9rrZ4wy9KCuYuZKmWa
SAW4hy+F0TiyAvYnsZBitm8YPaZyZ82XtxLq74wMPOExQ4+7sx+2DqyE+7dO
v2utUlgJ57MPMeae6aqE8yn5qDFPLGD/15zuXAqed1AfyHwrYIv+O6hPpZkq
rA56B/XDdiVfbha8g/chzK44q4+/g/tw1vOlq2esgnkpUh8vEIpVcB7y0F9d
g9fQ3W3fXToSsT57hHn/tZoqWI9phdZQ6jvmH/pLIn35q2H97H3xx9mNqmFe
JbtUjr1fNdTfiG05cSMf83NsXUsdY5gLcFuZS/DWgH22RP/z9hSYzPqEJw93
cA3sh5ObzVe1tAbOO3cvflfkIPZbGAgd92d4D/c3Sr1eWnnkPeS6+eNv9O3e
w/6n0t24rPIxz55hTon9hPmRoJE9XylrwQHbk4LnDqB3y8eHmJ+phf6LFLM6
HGGYJ31xTVZrhJzsvLdFq94U5iFWXQ+e7PkA/eMBJ2W4lD/AeZsFyI0bb2Ke
zpt6jDP7A9ynW2g+pd/gB5jHsTa2PZC2DmzXphVDrVwH9+Hi1q/rer0O+s9E
R1wwjK6D+cJ3A6JNK+tg/bC2T2MvJuvgvlVmb4X6sddD/R0xj0S9E/Uwz7bM
4MmYdz2sL5Mh8PRNCeaMh7+bVCxiv7RMgrW9UAOsx2+yVe6ncQPk/W6hF328
0Zl13IU9hWiqntnVPSsNMJ9yft+NScmPsH70fB5b2rmPkC+rTdDnh32E9Zw1
d/rH1WCuGqUdcHkB++23jXet8jTC+yn1eJsFmoKJrCqWRHn/RrgfwTPPlJUK
MBdtbXe71YU2V9vmd4KyCebL7tdzkhZpgvVpS92oqi82Qb3UxNir5Vg0r4HW
8631YLI6FhPdJdpmmMdlpJKfI98M8y7VpL2tuNIM9TFx7sdHksDE1poftjnD
WM9Cru0+zdUC5ldx8omzQndvvR5yOqUF+jcCTR+y92Eu+vjBADddK9wv3Wnl
Ss59rbC/mT0Cn7gVWqG/60DgwqgRumisyMLeDt173iRGLBT7pZhqyVPSMBe9
RnPSsqoV1mdUDVaNGcB6Pg7KefE1rC+wyro/xtUGzn9Zv6Qo1wb1n8zIdfMN
0WJ2D2PWHNpg/u0ZqsjJEPSM0pA3cyE6vd2gwP8zzq/a/pOhdhHzhdptHBXb
2uE9ODruNksLt0M+FXvVqVwVXbnU0h5ljN6dN72ecRNteYD7wY04nOe1f97V
rRzzRMFA9qU+zK/KiKnXroKJdxHeDmscHXBe5suavNpyHZDvd2GRETIGkx1+
6mA1eQ39fNyO5Vgo1t+Mi8rzyMI8SDuY830V+tI0bbbUJNZXi51n42HqBF+T
lc0POtQJ+08YePS1Rh9NYSO4WmyP9WFVfqM2QZvmIKxTzWaK0rB+a2TVnvoq
tO+AmFLJCPY78H449JS8C9/PwLG9jw8ddYH1C48yOrizudn7YhecZ/B7rt0u
bzDBcTzdvjYTTTQ4Bqe9RRcU7PSPHMR59yOpgir/dsH9R7H0xq5xf4L5T3eZ
69MbfoJ6CaPnImIemIdos5QbpKKFPVKc7JrAxOKBfE+PRczlOaMbfzJ9BjsK
PXGikvgM89M6b3IGG6A5o1PcGW+h1+/TqJc/RtfeiHN8W4TzPB56ZvwdxnxO
RzLYkL4bcn3yyh0t0t2Qu1O1nvlljPmM5U9BWWfMK1oa4pnjMN+Y9FPNeIdm
G8yfo/2B9Y2vm7Uu0fVA3v/NoTvzKJgYN1tvzj3VA/VhnQqxZC5YX3r6TVtj
BOYfna5pcFZg/0fnydXzo+gHi8Hzx+l64f+7akPhb7GivfCe30+NWrRc6IV5
bRq/uGKCe6F/o/BP090XYLJ6RaEy71604Km8bx4UX8Brg+Lq3SLoykXtJvJz
6LsGOk63wr/Aekp51BzPKtHM291VhsfRQsKUXbJ7+qB/9GTeZLAm2kWI3yTL
Df1Yll3ybAJa+tcthsH6PphXfcDpdNkc5oqzgT0OzP1w3vvmwdHnJPuh3mA2
sXbVAHKyM5JnotWdMdecTuj4nIj5am69knMN5kefZ/wNXML8QGuify/nV3wv
xyZ/ZrmvUE+WKm1+9CJ6ZThkrjIa6skcdbs46CowL+WOfNnxDfPgWNuVLXQD
+H23ldIi6wA6xXLF64/hANQvH33vzeaLjr82MchVgfWnzYTFBX9ifiWLsY+L
4Rvk1onaEYF7vkFe17xr3FAUPSXAv5KliraNNPKOPQMmAkIilVqcMT97JUA4
1gcdxLkRUJqG9koeEKB7jeur0lh2X65H15q9j5js/D/rL98hL5zC9VJZU+Mp
KQYhb34ZeYFy5yD0a0XNaeRLYE69vjNG5wTmeWysGh8vYm7c5v/64m30q32O
zE/DNr2FyOiua/r0DPud35XN91eh2anZZk52oaXbZT4fWMD+j2nM1w0YhmD+
w4xrbqcEhiC3Kkl4aiM/BP1vXOQFaI2wXuO8DUOLE7rr2OnwnGCsX/wjzsyf
hvPGIvmyDMrQc3MaZoc+Y7/AYw9thVl0jiVjcSTTMMzLumf+dfTQMOSRz3z2
vtJF+6vHZq5dxvqz8jrUVv6YT3fb69MloxdcixoN36APz9betu3CfrXTms+1
lzHffdFa3WLHCFg0XcMhV2YE6qcUEjUsz2Cu65DynxtF184eF9d7iPXr5U2p
LqWYh9xz5dzRDSaKW0ZFHs9inly2zfE78yjkLl9Yl5IOouPsWtqvao/CfEMi
RFLHHs1JNcBaF4JW/rkqoPEU+9dk2NxKKsBkWyikBSiG0F9sG6sW/mB/kKzO
w+fcY+AfwxOJKgS6wl48we/cGLw37aVrxbXeYzCvI9iJszcdfbPB6gZDNZio
+3Vy+N8hzL374kckqMfBTOv1O+IF0XfDs24w6qD3zH424b6OZq9nEWtPRs9K
3GR2qUPHJ1DUBk2Mw/77vtEME9u+Q76LcKsjxL5D3tYbSfSdQFtpBtFPOGD9
1gabt/XR6DQ9v7ahcrQ+y5NKt1H0Bc1m689MP2BeyZ6m7cnyPyA/N6Jr+a8F
+v3LLJ6IIDT/wcNXVF5jv7BEuixbN5pJRjlnZgXrWSvW1cJ4JvD7Kt/9+6lz
E1DvavRayOYB5taDUr+NGtD75bb06EygDRpOeTvSTeL3k8pozg7pSch/2Tb9
YLPGPEZL8eVkLOYbRr2MHa3oK7bVFdcpp8DCqk05c/xT0O+xMGMbooUe2bYQ
aOGO9XYcJtbS5ejEHkbXY+Po0fSUMeO90+CDNJal5iZouVynN4IB6H3Dpran
69EnlKVEHObQywXpN3w4fuLnZUo+3ufET9if26uA9lkHzMvdzZXXYtGl9db1
mt/AhOhSmlLejhnoHw62in6oMgP1eqaiyy+90VmcYw0zDWjqyS1j01SzYJ4s
3vV0frSdmUGtgyY6+n6qxyNLdOfzt8W+XuhdqkOsdEnoyO4D9P/UoLv8bydG
D6EfFY7/eLNlDj8/z4V8RwXm4DziXYdqYvQwP/ja80nBLfR0UYRuazbaUViG
Za4N7Tp/79njCXSYUIfxx93zYF9jJQ5bXbQAz2/bybvoGlnzT8up6JIg/Rss
tehklVOeVPPzsN8l477irfwL4InlF9rW6gtQ32K9z5zrHnpXVM9AYRGaJuTg
gOwMevF8neWjXYvgCn/G8wL6aPO7mZdNvRZhvUOdd26tlWBuer+b0p5iCXJT
M7ev0jJLkF+cujz10xHdumxJvzMKrc2bEJ7Zh/3HmMxXFbh/QZ57xSPMxBRt
bmXl5Bf/C+qPOw4b7N1A05hHSR5SWAb/4QqnMI1chn46l9Hj2/rRA6mNP81U
VsDhCh175x+gE9Wmtba2rcC8anf6zlKV32BJkQZ/rtDfUN9sY2E7/QvzzHg2
UYWrq5CP/zYwejSxCvkU37O8zHNrkPt8VGFVnUEfWfrPH8em6+DX6v3k1Ovo
C2kPqfMe/cHfn9mD1nTSf2F+eIlFT+DqX8hZjrwN7aEnIzYdL9cfoeq56VlF
7Sq3pfUBzF8ucJbnJpCDB01S+/XNKcAaoRaibomU0K94hIoy5RIV5MW7s630
XGnAi9pPAjV56cCTeTziXxrYwP8D+fqmlw==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1nk0levbB3BRSTSQSo7U0S8aVIpKdeKLlKRBhKSBkqKigQaJg4yZZ8k8
k2Ebt3HvTQ4qqSiaJKEMmVJCp1/v+1xrvWu9/rE+63s99/jc97P/NLM+aM7P
x8f3dQof3//8//9/yvItwQFPtVUZbYAT67TC7j2GZE3ssxUtD/MiO2lif/Ba
IXaAKWPo4pFa/ltWnQXVG6B9R6Dz1l1nqN4Af6+xKxPfeoExxxjXnBUu1Xtc
ovwYJhbY3NAt/D+71cq4nbCyJZ/A5uCIpi9NV8lmqNULrA1LdmAcaw4ztaNH
V71wovGcgYXDvsA1Z50Zn7DCvJ7qY2aRruQLeFx+tHVftBtjGxuYPFUSGfnD
g/H7i1iTt+enxUovxnMvg/tDLKfm3B3GjVcg7rswXcfUl563xVTJ9XIbrPxp
fnZYuKzzz2qHAMYK17D71331WsVAxv7XsVHkXa2GehCtlz0UR3bsiTIMpv7t
Ud4un6d2IYT6uwn+0mkHhT1CqX0H9MxvOd57JYzmfwuKiR5Gy43CaTyOUJz1
kL/RPIKed4T2wgYRx2WRjA84QfXxwKNA0bvUnxN+FS30u7k1isb3NwbjNyhI
rbnHWMIZrksnZy4/Fc3Ywxn6i4quam2IYdziDNUHczWWLIul9XXBs+AfksW5
ZD5XtJyOsJ+3PY5xqiuOJqkviWkm59xG7K8qfz/teNo/Nzg/OyHl1ELmc8fz
y35+7oYJjD+5o3ds7fRHg+RGD5hf7Z4/5ptI7XnCNzNrdvj2JMbKXth5tC45
9jV5hjfc5wd+czydTPXeGHUqfRA7N4XxmTuQPsyTXx5AXuoD/fNOrarzUmm+
PhiLnm79K4hs5AupwbK9d3an0fviB2nz9BtrRsmNfrBs71u+Ljud6v2h6vxP
a9eWDFpPf+ioq0TeHiQ3+mPu2Q/1F8wzaf4BMPUfV6rqJ+sHYHFghkPW2fuM
8wNw4fsRrcof5BmBON/fOgTnLJpPIDS0/eMc52QzfhSIIeMFB/d7kiWC0JuR
/SBUJIfG99ulaelBBuTgINww+DdIMYYsEgztggbdI13km8GYHmeS/eY/ubSe
wbDW8VuWZEteGgLhJZwFUeVkpxAUZkxqjQuyaPwh4N/q3SFkS54aim6Bg3e0
88g7QjGkEml0TDCP1isUMyblI7yOkj+GQnDLYvXlWWT5MBhWCc/LGiefCcM0
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
qMJ/AQxwopA=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Maximum Computation with Time\"", TraditionalForm], 
     PlotRange -> {{0., 2.040426179363076}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"k", "x1", "x2", "y", "z1", "z2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8163788595526867`*^9, 3.8163792709010954`*^9, 3.8163793967168627`*^9, 
   3.8209422709446316`*^9, 3.820942401045331*^9, 3.821203256005368*^9, 
   3.8212065053897867`*^9, 3.821287874644139*^9, 3.8212885343938427`*^9, {
   3.822411459249213*^9, 3.822411469025836*^9}, 3.8224363112324967`*^9, {
   3.823634018365156*^9, 3.8236340220223603`*^9}, {3.824248704866758*^9, 
   3.8242487107003045`*^9}, 3.824248827985618*^9, 3.824249195694889*^9, 
   3.82667525430187*^9, 3.826677157856151*^9, 3.8266785958057575`*^9, 
   3.8268245370262804`*^9, 3.8268246334516096`*^9, 3.826824709797413*^9, 
   3.827283516047195*^9, 3.8272836301846037`*^9, 3.8272840237939367`*^9, 
   3.8273438020095673`*^9, 3.8273440720647335`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a853fa45-6da7-47be-8c84-e407f608958f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys2", ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{
  "PlotLabel", "\[Rule]", "\"\<Maximum Computation with Iterations\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.824248743764718*^9, 3.8242488223425684`*^9}, 
   3.826674955137864*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"9a3e4e57-79bb-40b2-aee2-7bd46ea02ae9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TimeSeries", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30000", "SummaryItem"]}]}, "RowDefault"], 
                    "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                    False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                  Background -> GrayLevel[0.93], 
                  BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                  Identity, Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{0., 50.}, {-7.030970816185017, 
                   4.273359296964368}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{1, 1}, {1, 1}}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30000", "SummaryItem"]}]}, "RowDefault"], 
                    "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["30001", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[TimeSeries, 1441216, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           TimeSeries, 
            6252323590198298951927499111175791484615542572641551427272, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("TemporalData[TimeSeries, <<1>>]"& )],
  False,
  BoxID -> 6252323590198298951927499111175791484615542572641551427272,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.82424882313247*^9, 3.8242491965706034`*^9, 
  3.8266752555663214`*^9, 3.8266771601651254`*^9, 3.826678596621211*^9, 
  3.8268245395833197`*^9, 3.826824634414349*^9, 3.8268247105489235`*^9, 
  3.827283517129117*^9, 3.827283634667631*^9, 3.827284028224049*^9, 
  3.827343806375534*^9, 3.827344072303094*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6b531596-8836-49de-837d-3460eb830f61"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
2QzDLvvxOIL9S7hhpfbJuEg2b+I42cvCjuxsxXk613f34hjZlNjHf0v7k/Z6
2fnGXi+7P9jrdd/A3FclZ8teCHa5rxCB61do/zjOkM1TOEL2huNy7lP8GafK
7nQcLZvX7fXLtU+zjy876+z1srsNV+m+iCnCRvYO40jum5zGDW9q/y0OyOY/
eKTsBZ2RHdlphQO6L+M+iuNk0xOHyN4gXLZU+RyeKrs+HCabmbhI94G8FGy4
L/Q2jpbd9fbxdR/J7LDXy95+HMl9piP2+kXan8XJsvmXff2y12BfD/etmp5V
+mS3DQ6RTRdcZbTvg5Nl5xl7veyOwRkLtX8BO7KXiEdyH22RvX6B9qtw/Xzt
A9jI3i5c/bryUxwtu8cx9+3MV7h8nvZ12JWdO7ggWfvm53j+udq3w67sdcMF
3Cd8AjuyG4NHvqr9OBxI0n4Krua+4xx7vewutdcnap9pX88s7Tfb62XnI+z5
tS/GEbL50r6+mdpX2+tf4XHt9dO1/9G+vpe1f/g8fkn7Dtg3VflrzH1Xd4C1
7suaP9jrE7SfgO193JexN1H7eTjg0z7VXq/7wN5a7PxJ+b71eO0LrXVf2Xxu
92O0r7TP95zykr1+pPbXrGO1b/QVHqp9S2wGKzva/gnto62jtP+ddStlrLXj
/A+gigWz
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
5OaW9Rsp2mkq
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxt13m4lnMaB/A3hVSUQaKTQUnJctBiSF5nQmOqoUJFSSqhqdMqdcrTgtRo
0aaQOraWo05SmiKvtJzRqhq0xyipjCKcRjTXXPfn/OG65vxzX5/z/X2f512e
91ku6tijReeTUqnU0VKp1P/m//9rlP7tbB4zaWY2/+3/U/fEzNwdM92e25nt
f/v/9IO201HeJWaHzjEvfCjmdE49al1X67rzI/Letuf/G/vJe9rOALYud3DM
wr72NyTm2Mdilh2m93jMw8PltvPZUzGzB9ruCPvPizlzZMxK9jP2bzFrJTH7
j465h7PHxizyOmqMs9+hMas8F3Ox11VhvO14XakJ9vdkzKO8n/dPjLnR694x
yf6e9v/J3q/3seL5mE2esd8pXr/3VTBVPkrvBfY+J7wY845nY454yfS+86bZ
7piYuS973z6Ha6bHTLiAL/S51JwR8z6ezhk+P996n9sE7s9nvBKzks9xBE/g
k16NeZTzuJXP9Udewbmvxazgcz7Aw7nT6/bnc9/Fedz6jZh7eBM38b00nRlz
B6/iXN9TelbMsr6nJdyJ686OWcBzOe17rDUn5lrO566+16yCmPt5Euf6niu9
GbOYR/JY33uZufo8mHMdB8VczL3mxWztuDjExXxtYcxsx0Uu9+E3eTof4CK+
dH7MKo6bTtyBZ3Ae7+IMV33L+873OjnNE7kPb+KZXHGB7XJTznIcPsPdeRUX
cOm3Yx7mNF/muBzEHXgJz+WfeD/XXRjzcsdtT+7Ac3kqH+TPuNaimJUd1535
Ec7nt3g3f8dZ78Ss4rhvw914Es/kzfwJV1oc83d+F824MY/kPF7NJb+jMn+P
uYdv5nJ+R4O5ES/loVzMi7nekpiHuRfX97ubx3l8iAu49tKYP3IXvs7v8hXu
w3u4kKu9G/NLbss1/W4nc1vewvl85nsxN3JzruB3PYpzuIjz+ORlXg/ncDE/
wXX97t/ljnyMZ3P992Pu495c33mhkDvxN1zA52Ri7g8n13J554UWfE04yeU7
5WO4p/xNHidfy/PkB3id/LQPYh6WX8qnOa/cynXCSSduLh/G3eQzeFzJeYnn
yXfxx/JfeL+86vJwWeel67lmOGnNt8kf4/byiZwnf5unyDfxe/IjvFte8cPw
cfmVnBXnuaQp13Xee5Rbyp/hvvKZPF6+imfI9/JKeekV4YPyi/mUOC8mab7Y
efJ+vkU+iNvLX+R+8iX8gnwrL5T/xDvllVf6POR1uZrzbEvOCSc9+Q75WO4h
n8uT5Ot4sfwgb5CXWxXziLwWn+U8fRunw0lnvkc+nHvL83mc/AN+R76bt8p/
5WJ51upwZef5G/iKcNKG/yLvz93lk3ikfCG/Lt/MRfLv+IC8UlG4vOvEVVwn
nDTjW+XduJt8JE+Qz+LF8tX8uXwfl47rSFLmH+GLXFeqc2P5zdxO3oEHygfz
8/KXeJF8KX8i38a/you5muvSuR/FvD6c1ON75K14gLwXj5eP4znyebxavp6/
kh/ilOta+TUxLwgntflWeRPuLO/CQ+VP8jT5K5yRL+cv5Hv4Z/kJPiuuk0m1
teErXDcbco68LbeXP8795ZN5nHwRF8q3cMl1+Xs+KD9zXbic6242Xx1OmnMr
+V/5cfkoHiufzXPkRbxO/hXvlZ+8Plwsr8EV47qd5PBlruMPcFP5E9xdPo1H
yt/lWfLtXCQ/xkfkVTbELBXX/aQ+V3cfcBc3lPfmdvLneJi8kGfIN/BS+Te8
RX7KxpjHwulz+Iy4D0hq8HnhzLV8ifuEP3J2ON2CG+o/EE5u18+Vt9VPuKv+
GB6gP01/lP6b8mn678kX6K+Vr9TfLt+kf4D36f+Hf9A/7eP4f6m470iqcMVw
5lKu7r6kQTjJDqdv5bT+Xdbfod+J79Xvww/rD+PB+s/Z3hj9GTxdf771C/Qz
vEx/A3+kv4t36v/b9r7W/0V+TL/Cppjll0e/ajhVJZyqw7XD6eutrxdO/sSN
9VtzK/2u+p30H5Pn6j8lH6I/kUfrv8Yv67+tP1f/Q/ky/U1ccp/3Be/RP8Lu
+5LU5pil4z4sU5FL7gN/z9XC6Ss5O5zcyDn6TbmF/n3hVGf9R7mf/gAeov8M
j9GfwjP0Z9p+of478uX6q+Tr9T+Rb9ffy1/rH+Vi/dJbwmXcB57FWeH0xeHk
8nByNd8UzqS5uf4dfK/+/dxNv7vt5+kPko/Sf5an6L9o/Tz9ObxUfwmv0f9I
f6f+Vvlh/f18Qv8n6093H3rqP8NVwunKXCOcXMINwpm64VSOfmP5nfot5R30
O/Kj+j2tH6I/RD5ef6w8X/9leaH+XPkK/WXyLfrr5Pv0d8gP6x/kUu57f+ZK
4XS5T8IXhJPzwskV4UwteUP96+S36N/GLfXv5gf0O3Nf/b62N0J/uHyq/nj5
HP18+RL9t3i1/ge8VX8jf62/2/aO6X/L5eI+PP2r9eeGk9M/jbxmOJMVTuq5
b79c3kT/Br5b/3brO+q34d76D/Nw/f76k/Wflr+qP4nnlzxX8Pv6C/XX6q+Q
b9ffLD+k/y8+pv8dnxrPBUmpz8LnhDOVwsnFnhsulF8dTl8lb6TfSN5Evxm3
1m9n/UP63biv/kDrh+mPlE/Qn8r5+rO4UH8xL9NfbXtr9D+Vf66/T35Y/wc+
oV9ma/z/dM8pZ3PVcLp6OFUnnFzDN4YzN3Nz/Tv12+h3kD+s30PeT3+wfJT+
aJ6i/5L1r+sXyBfqL5Wv0F/DG/S3Wb9b/2s+oF/MJc9pZbfFPCWem9LnhpPK
4aSmvE44U4/re866hRvrt+IW+g/yg/q9bL/kOW8oD9IfZ/1o/ek8Q3+e9fP1
35dn9NfLN+jv5G36h/ig/nE+rl9+e7hcPLcl54dTVcKZ2vKS58g/cINwuon1
jfXvkbfU78Lt9ftxD/0nebD+BB6l/wq/qL/A/gr0l8uX6n8sX6O/R75N/zDv
1T9h/Q/6Z+yIeWo8R2aqhVNnlzzHymuE0w3lDcLJnzlHv631d+o/Im+n/zj3
0B9h/UD9yfKn9d/g5/UXWT9bf6V8if4WLtL/knfof6//rf5JO2Me1z8znKro
ufYieVY4nc2XhZObrG9ofVNuui79X9ZOcQY=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxtk3mUj2UUxx9LZamMk2VinBhitMgyllAeu2o4RbKcFmVoURmjJDE9ssQo
W2a0oDGyhaGyNbYXY4hhGOsYhtOqMcpWtOo0z71v5/s9vf/c85nv/dx73/dH
nWeG9hxU2hhzuZQx/9b/f+63vtaT2kNqc18dsekjtZ2v9knh9r4GxHagcEfJ
Bwt39rX2s7Knk/x9iLDkA16mfDjy/hHy926+po1CTkiSfuHaYyXv6mu5cdh/
fjzed2yi+Hr/JMk7+LokWdj6Ov0dzEdOFW7ja+PpyPVmCMv3jJyJ8258T7iV
1FmYX1Zu6+uZFOw/kYr79s8Wbulr1vvCTX1d/4HwXb4u/xA57SPhO3ydNUc4
2tdJc4Ub+Tp6nnCsrwkfY940jfYpN/G1/nzkNOUWvtZIF24s9yjX9/XmBcIx
cp+y7Cv9Cb7PaGW571dlmZ+wUDja1yJl2Re/COcXKsv8vouF5f9bnnKUr3FL
hGv7mk1sl+L8TGWZH/upcBVfM5TFj1mGnK4s+6OWC5fzNXU55hErhOV9k5Xl
fcpmYH+SstxzNQP7E1cKR/harBzpa7NVyAnK0b6uUJb5RcrG1waf4T3xyvL+
85XFLySu+Tn29yVOUZb5ecpyX6UvhOX94pTlvsnKsi9bWd63zGrcZ5Vl3xhl
mZepLPOuKMvvGbsG5w8jzlAW/6yyzI9ZK3y+XUkZpCzz04lPEUetw3n9lOX7
pCrL/oPEEeuF5f27K4ufrCz37aT+sl8it1eWe5KU5d4NyvJ9rlLePBP9ROKV
ynJ/MeUNNyAPJl6gLPtOK8s9tTZi3p94trLMO0R55U3C8r16bMJ8irLcv4v4
us04v4Oy/B5vbsb+jcqy7zfyW2zBfLiyzFu1BfvPKcu9VQNg10xZ5vWkPEFZ
5k2jfAXlOcr+HldE88tvFfa/j2ugLH4XZZkfj2zGhf0lj5uPbALKC3Gf+UvZ
3+NqbsP5rbdh3hfZvIb9LoX81cr+fVwe+ReU/e/tKm0HNo2U5fvFKcv8Icoy
fzL2myXK/v+vyyb/u9AveVyZLGH5PtFZ0O+ssvw+TynLfWOQzZyw38/PxHkm
n/IrlFfbAftc7A7oN72U5f2GYb+Zjv0uQ1m+/16af5bmV8jGPEZZ/K7K8n0G
UT4e2aVTvjWc7+87hfvM3+RH7US/jbL4/UL2dSTlqZSvQXYHleX7X6Q8Yhfu
v2cX9LvulL+oLPuTQ/Z1Kfa7nZR/j+zKfoV5XWX599deWfYPwH6XFLJ/5iK7
DTT/OM5zVymvvhv95sjmUWXxE5HNjLDf37eS8n3kF9P8inswb4hsulE+WFl+
3wnKcv+CkH3dhuxOU36N/Fo5mLfNwbw/snldWe6bjWzW4jx3iPxLyvLvr/Je
zBsry/welL9E+RRk86myzN+FbH4I5/n8un3Apl7IJY/rgGyeVpb9b1I+j/yN
lBeQ/xvtj8zFvEUu5r2R3XDsNzPJX0V5LuXnwnn+uX4/zLdVleV71lP2ftAM
2XREtj2R3dPh/JInSEA2DtlOQ3bzyF9B/ibyc2h/AflF5P+O72vLH0A/8gD0
Bw1C9rUl5rYL+b2xP4jHfvMK5nYc5m4m7Z+P881ntD/AeS6X/ELyf1KW9/+L
9t+YB/1BTWRzp7Lc3xpz90CY+/19kc1z5L+GuZtIfgr5C5Htatq/nfw88r8m
/wLtNwfRr4RsbkO2jZDdfeTHkf94yCXVDlGW+0eRPxn7zQfkLyF/HeZBNu0/
gv32O/IvIwdlDqF/C7KNRnZNlMW35D8csr//Kex3L5M/BvvNu5jbObR/GXKQ
Sft30/355J+h/VfIv+Ew+tUOQ7+7HTmIxX7Tifxe5D+DeTCM/LHYb6dj7j6m
/Rnkb6b9e2n/Cdp/FnPzB/kVjuD+W49AfxCDbFphv+2KuXsM82AQsnmV/PHk
v0d+Ovmfk7+V7t9P95+i+38m/2/ybzqKftRRyM1dyLYNsnuQ/H7kP0/+SPLf
Rg5SyV9E/hrys8g/SP43eJ+9SH6pY3h/xDHITW1kew+yux856I7zzBPkv0j+
G+Qn0/4PcZ5diuzW0/07yT9K+78n/xfaXzYf/Sr50G/rYu6aIgftyX8E2Q4g
fyj5SbjPTCV/LuZuOfkbyN9D/nHa/yP5V+n+csfRr47s6ivL92+Ouekcckm1
j5I/EDlIxHnmLdo/g/w08lfS/i04z+4j/yT5xeT/SfsrFsA8V6MA8qAh5uZe
ZNsN+10fzIPBmJsRyHYC+bNo/wLa/wX528g/QP5p2n+e/Gvk33wC/VrI5m5k
2xbZPaQs79+f/BfIf538SbR/Ns4zi8lfS/4O2n+I9n9L/iXyS59Ev/JJyE0d
ZNsY2bVD38T9l/8DTc0vaw==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxt2HucjXUeB/BJEkpGN5Lawmbs2rIurWS3w1qqHbKlyHZxT6gYXZDLk0uh
VUOMS9SgJHdRNKTjEjaTexeXNNuWpMmmrEaL9rWv73v+W/98X+/z+X2e88zx
nOdyru76yO09ymRkZBw/KyPjf/P///tDKmYjs63ZImbCCWd0MNvETN1nto+Z
5jSnuul39HpPr98b86oH5JzRJ2bnLubD1nWVDzB7xNzxeMx828kfbPaO2W+Y
/kPmU/bjkZjlR3q9f8zvRsVcyp88bT2nx9h+Tsx546y3X7l/i5n5WMyBz7H9
rJ+r/0TM2hO8PihmtYn2g89/wfv6uzImWf9kzOPcbkjMw5NjJkNjHsjzfj6H
HVNsb3jMjVNjdk5irppm+z6nhdO97wjbeTHmFp40I+ZUn+OYmd7f5zjkJdsb
HbPfyzF7cYN8+8ULearP/ZpZMZdyPn/H1Wfb7jP2h8v7f7pgjv0fa/94IJd5
xfvzEO7s//UEF3G/V2NmPRvzCM/j7nOtcxwc5MzxMTu+FjOXd3GG4yR7nvfj
Tbzl+Zip161zHBVwX2403/7wYs50nGUtiJnwbD7MNRbanuMwj9OcuSjmxY7L
cTyKyy6OuYKH8VWO0xLuxzlLYm7kYq7nOG641P5wP97Ii7iEj3Btx32dZTEn
cXcu4Vlc1vfiIPfiy9+IWcQdubzvzWTO5l08iisvj7mGs7me79lYXsqbOMP3
7uwVMe/hFM/goXyKC7iX7+mPnOZGb8as5nvbn1vyYp7K33AJZ70Vs53veQ/e
wbM52/f+M57KNVb6e/lubum8kMdjeDev4sxV9ofbcA3njXHckjdzDpd9O2Zf
bs4jeBjn82ou5BI+yo0LYl7ovJTDt/ISzuFizuO6q2Pu4J58iudw1uyYRdyK
r1jj7+FOPJWncAHv4WKu8k7M8s6LbTmLn+UUb+FefM7amM9xC17Lw7mI13CG
8+pJbsDXvxuzKw/gSbyUl/K3/Dlfko6ZGeflpCHXc56+nbvL+3Gu/HleIV/E
h+SFpduP83pyhJs6z1dYF7OXvA6Pk7fiAnl3PiwfyTXiupDM4rtcJ9I8WH6Q
8+Wneb388vXhL+RN+dK4riQduYXrzBN8l3wyD5av4Ffku3if/BiXjetSUnlD
uJ7r1LXcXp7NveV9OF8+lrfJ53GxfBMfl3/J18Z1Lzl7Y7ir62BNHiVP8Tz5
/XxAPpRPyGfwhXHdTAq4levoXu4r/7F0+/JL34u5R96Iy7rO3sH1w0l/birP
5fvki3m2/APeJf+Gj8orbopZI67bSRa3cx1vzVPlPXhF6XWeP5LP5p/k67hZ
XOeTz7i36/4ZzpPX2BwukN/Ie+R3cxn3BQO5fjjJ47byN7mffDfny78v3b48
c0v4LPcN13HVcNKG65Teh/DN8nH8gPx1HiHfzK/KD/Faedm/h3fIa7H7mKQ5
/yTvzOfFfUoyjK923zKTG8pX8y3yfdxHXsLD5VXfj5krb8yvyNvzu/IcLpRP
4A/lS/gr+Tb+WV7Mldw3nbc15pXhpC7fJL+Z28t7ck/5aB4sn8MT5Ot5vryI
V8p/5g3yKwrDO+XNeK+8Ex+RD+KT8ilczn3dW1w9nOzh6+U/8E3yKh+EO8jr
86PytjxB/hAvkj/LK+Tz+T35Fj4o/4q/lp+zLXxUXptPyVtwRfeZXbhmOBnO
zeQvcRv5Gu4q38+Py0/yNHm17TFflF/Py+V3clo+gD+WT2T3xclSruA+dztf
Fk6+5TrycjtitginLuGO1tfmbuF0Q87R/yM/qX87j9bvwtP1+/ES/YTT+s/z
Pv2X+IT+Ir7Iffg73CScKuS24WQ/dw2nj/BI/Z94on6FneF8/Wr8hn4d3qn/
O/6Hfisu0b+Tz4/7/nR3ruo54FG+JpwaybeGk4ncU38WD9NfxjP00zxHfzsv
0T/I2/SP8l7903xM//xd4Urx3JG+nKt7Dvk1NwinmnIqnNzCd+h35D76vXiY
/hM8Xv9pnqM/mZfrv8qF+iu4SH8Dn9DfxVU993zOWeHUMfYclWTsDt8XTlfm
Xvq/4EH61/I0/d/zcv1s3qp/Dx/S78MZ8VyVDOaK4fRYvsxz1zRuGE7N41v0
V3J3/U08QP8jHq7/JefqH+fZ+mfvCS/Sv4gP6Nfk7/V/y1XiOS+d4tqe+9px
g3Dqfs4OJw9zF/2h/Jj+eH5Gf0bp/ukv4JX6Bbxd/30u1t/LFeK5MjnM1cPp
H/k6z53nfhizSTh1KTfX/yV30W/EvfRb8lD9OzhXvytP1+/Paf2neL9+Lh/T
f5nP6C/mWp5715bufzj1AbcPJwe4Uzj9Defo/4dH61f8KJynfxnP18/itfpN
eKN+a96jfxcf0u/B53rOfoxrh1OjOBVOXuAO4fRs7qv/Bg/RX1e6//o7eJH+
Z7xe/198QP8MH9Gv9HH4tH4Nvshzfj2uH07dyM3Dya3cJpy+mx/Qf5AT/YE8
U/8ZXqCfx6v153Kh/pu8V38jH9XfzWX8TvDPcFIhnPqeLwwnZ30Ss3o4nRnO
qKl/FdfTv479zpH8Qb+xfht5c/17OVu/r/Xt9Z/kv+qP4wf1p3N//ddtb7D+
KvkI/c08Vv9jnqF/SH+u/r/lS/TL7g2/rX8xr9OvxX6XSRrwXv3m4YxD+n/h
Yv3O1p/Qf4RP6w+zvrLfVZ7jauHUTOuvDCcL5XXD6dXcUH8rN9Hfp99C/2t5
a/0S+W365ffF7KhflbvpXxNOHtVvzIP0/2T9U/rt5eP0u8mn6Odw6e9QI3iu
/gRepp/P6/SXcKH+u97vQ/1tXKT/qfVf6hfLj+mfkp/RP29/uNz6WFc9nFQK
p+vKS38Hu0FeK5y6mX+l34Eb6ffkG/Qft71W+qP5Nv1J3EF/DnfTX84P66+3
/YH6O+Uj9Yvk4/W/k0/U/1k+Q/+CA5Ev0L8inCzT/w2v0W9m/Vb9P/N2/U68
T783F+kP4m/1x9j+D/pT5Cf1X+Ny8Ttd6i3rLw4n7/GV4fQeruN3vS/0m+j/
wK31y3was61+Fb5X/2rurl8/nPGQ/k3ywdZny8dsSP0XrOw8bA==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iterations\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Maximum Computation with Iterations\"", TraditionalForm], 
     PlotRange -> {{0., 30000.}, {0, All}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"k", "x1", "x2", "y", "z1", "z2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.82424882313247*^9, 3.8242491965706034`*^9, 
  3.8266752555663214`*^9, 3.8266771601651254`*^9, 3.826678596621211*^9, 
  3.8268245395833197`*^9, 3.826824634414349*^9, 3.8268247105489235`*^9, 
  3.827283517129117*^9, 3.827283634667631*^9, 3.827284028224049*^9, 
  3.827343806375534*^9, 3.827344077904885*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"05a103e2-a725-4f95-abe2-d31da118c79a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateBoundedTauLeaping", "[", "rxnsys2", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", 
  RowBox[{"PlotLabel", "\[Rule]", "\"\<Maximum Computation with BTL\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8272836934622297`*^9, 3.8272837143027277`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"be71b19d-cc4d-4d67-b562-c1e6cc4e2114"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], {FontFamily -> "Arial"}, StripOnInput -> False]}}, {}},
              AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6.464335718435113`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15239", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], {FontFamily -> "Arial"}, StripOnInput -> False]}}, {}},
              AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6.464335718435113`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["15239", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.24857479910645`*^-9", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJx03QW0ldXe/fF9dpyiQSRFJUS6FBEDUAwUBREVUDBBUQQVRAxMwg5CRAUD
MMBAQEBR7Gt3J7bYgWDrfy73d413jvU/3jHecV8+Y965fms9z372PnA4bH3U
uEFjc5lMpkT/N32nTKY0U/zPhfUymWt6Zv6//wSf07OYz2T+77+n41nM/Wp5
XCNrPluex3Pms+QFPG8+s2dxvuAF8xnyMrzU/Cp5OV5mfqW8Ai83v0JeiVfg
0/BqzO5+ubw6XolPxWuwJ/fL5DXxauaXymvh1fEpeG3OIPoFeB3OwP0SeV28
hvnF8np4Tfx8fDPOzP0ieX28lvmF8s3x2ubT5Q3wOubT5A3xuuZT5Y3weuZT
5I3xzcwvkDfB65ufL2+Kb25+nnwLvIH5ufJmeEPzc+Rb4o3Mz5ZvhTc2nyzf
Gm9ifpa8Od7U/Ex5C3wL8zPkLfFm5qfLW+Fb4ufh22SK97L7JHlrfCvz0+Tb
4lubT5S3wZubnypvi7cwnyBvh7fEz8XbZ4qvoejn4B0yxddK9LPxjpnia8J9
vLwT3gqfjHfOFF8r7qfIu+Db4GfhXTPF14T7yfJueGvzk+Tb4duaj5Nvj7cx
HyvvjrfFz8R3yBRfc+4nynvg7czHyHfE25ufIO+Jd8DPwPVo/vc1Gv10fOdM
8TXqfrx8Fzycd0nisSf6aPmueMxPwnslPafhvTPFZ0D0iXifTPEZEP1UfLdM
8Rngfpx8d7yT+bHyvnhn81HyPfAu5iPle+Lh+mcTr0M++jHyvXDPHy3fG++G
T8D70R99PL5PpvgMi34Kvm+m+AyLfjLeP1N8hrkfJd8P3878SPn++PbmR8gH
4N3ND5cPxHcwHyE/AO9hPlw+CN8RPwk/MFN8pkYfhw/OFJ+p7ofJD8J74mPx
gzPFZ637MP1iCB7u31zioWcn8yHyYfgu5gfLD8N7mQ+Wj8DD/ZhPPOyrt/kg
+RH4buYD5Ufhfc33lx+D72neXz4K3xs/Ub6v/DjmCfdRAd9HPpp89DH48Uk+
+N7yMfi+5nvKx+L74Sfg4zjn6MfjJ2WK73XufeWn4APMd5NPwA/AR+OnZorv
jdGPwydmiu+N0Y/FT8sU3xujj8InZYrvje695WfgB3KewXuZD7Z89Kbkg4+U
7yo/y/Klicd88GPwybZu8KPxszPF9+rgZYmH/CDzneXn2rrRe8rPxw827yGf
gg8x7y6fhg/Dj8KnM0/0I/ELM8XPCNGPwC/KFD8juG8nvwQ/DD9c3k1+Wab4
2WE4PgK/PFP87BC8PPGt6anAu8qvsP7oneVX4SPMO8pn4keYt5fPxo+ydduZ
H23eRj4HH2neWj4XP9a8lfw6fDQ+XN5SPo99HW/eXH4DPsZ8K/lN+FjzZvIF
+EnmTeWL8FPww/BbOGf3xvLb8AnmDeRL8NPwQ/E7MsXPdKdxnsE3l99p+eDD
5PXld5OfhA+V15MvyxQ/u51Bf/R7qvDa8hX4ZOupJb+Xfvfq8tX4ufgQeaV8
DT3n0x/9fvMy8/sSP8TyrfBSvJz+4FPwg/EHMsXPku4F+UN4eP0V8Lx5eP3l
zdeax3yOfKsknyPfqor8Wvbl64Y310fwi/GD5H/rTfpxei5lfveQv8T8D/mT
+OX4YPnv8qfpuQI/UP6b/Fn2dSXn7B7zwQfJf5G/QP4q/AD5JvlLmeJn8xlc
X/eYr0i8FesGHyjfKH8lyQ/AX6U/+v74a5niZ3/3n+Rv4rPMv5e/g8/B98Pf
zRS/VnD/Rv4Bfi3eH1+XKX6t4P6l/GN8HucQ/SPzmP9C/gn98/F95Z/LPyN/
g/kn8vX4zZni11vBP5Z/SY/7Ovk3eHg+VcM/kH/LOUTfR/6e/Afyt2aKXye5
h3x4ntVIvDU9wfvJ35X/lOT3xjfQH30v+dvyTezrNnxP/JdM8Wuv6HvI35T/
nil+7bUY7yt/Q/5npvi10RLmj/6HeY3EvWf3pCf6bvhfmeLXQMFrJh7ytyf5
PxPvk/TcTk+fpOe2JP9n4r2TntvYb/DX5H/bnMF74f9kil+rLea697J89Erz
v6rIv5r0B98V9/7qicf9Rn9Jni0p+h34LvIX5fmSYs+d7Nc95msmHq9v8J3l
L8hLLV/DvJCsGz3/H3nvD76T/Pkq+nviZcwffUe8vKT4NXFcN/hz5nfiPfCK
kuLXvndyzsGfllfDl3K9gj9lfo/lo3dO8k+a34PvIP+fvAY9y+hxj/nqiXei
vwb+uLwW5+P54DUT7y5/VF6HnuX0uHdknuDb43XJL6Mn+MPyevgKyz8k34ye
FZZ/iLz7dpbvZN4Nr885RO8qXytvwLndy7kFf9B8peXXyBvRs8rywRuaV0+8
Ez0xf7/5Kq5j8NX0B78P7yJfJW9C//14Z/lK+RbMGT5PVZg3TbyT5bvilYl3
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
W35H+fnME/0O/ALLV+I95FMsH3wJPjXpD95dPg2/0fLbyS+k5ybO2b1RFfnp
iS9OeqLfLu8iv5R1FzBP9EvMy80vNi/D28qvxBdbPnpY93brbyO/ijlvt3wb
8tHLzK8wLzW/3LxgflkV+W3oD/f5EutvKZ+RLf691Dvw2+Qt5LPI38mcwZvL
Z5O/0/LNyUcvNZ9pXsCbya/G7+FzTvAtzJfxuSj67MRvtXxDPJ947I/5pkl/
Fm9ivhy/Rd5IPpf+e+kJvrn8evKrLF/ffDW+CJ9HT/SF8s3kN3C9wp9PlpjP
T3yB5Rub34zfyH14H/3ujVk35uvIb8bX4DfhC+hZQ0/wWvJF5B/Ab5TXlN9K
/kH8Bvw2nj8Pcm7Ba8hvt3wery5fTP+D3CfBq8mXcA6er0a+UZIvl9/JOT/E
fegersta7lv3zekJPl9eJr/b8qXmd5kXzO9MfJ68lB6fx72qvPfn8Zx8Kf4I
fr28RL6c/sfw6/AVnE/0a/F7OefHWDf4PzvoPib/uOWDrzQvJB7XLcX/pqeB
+Vx8teUL+J/y+/AnLB+9AeuWJb550r9JvhZ/2vp/kj+CP8++gv9o/gJ+Df4o
60afgz/GnC9wPwf/wfxFy0f3nqvxx5Oe4N/In8RfsXz00PMy+wq+Xv4s879m
+eDPmMf+z+TP4W9a/n35a9niz5f4wPqjh5+P8T7n7F4vU/zz5+Cz5e/K3yQf
e6K/YZ43fz3xWfJ36AnzrMNn4m8x/zr2Ffxt8w8tH71+kn9D/g7+MT4Df5ee
j3mOzbB89BLzt6vIvyj/kP71+FX4R+SjXyl/Vv451/cb5nEP+a/xK/AvyH9N
zxVJz9fMGf2zxC+XP0NPQ9YNfpn8KflXvN6/o9895L+1/P/kX+PfB8Qfl3+D
/2j5R+TfM88Gyz8o/wn/Bb8U30BP9Evkq+W/Meef9AdfIf+L/D/MH3y5/G/6
o1+M/2P5HL4sfKNi7v/yeXypPJvjZ1lli/e5e33ypfgd8tJc8T7PZovPMffw
OirJFj9fudelP/hFeBn5DD0XJT1pPvb8w+fP4LfJK3PFn58T5qlMvDbzeL7C
vNy83LzMvCzxCy1fx3ouTHoySb4s8enyW5nHe4LfkswffBpeLclPxatzPnHO
qZZ3n2L5eL1KzauZF/BF5ln8Ary63Q/Bz8drcP8Ez+MLzXP4eXhN7sPo5+K1
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
b8O69zNP8IvM11g+em3y//4cPLy19fz77/Pg23IO9zO/ex3mqcCny9taf/Ct
5NPk7W2eysSryrczr0y8lq0bva15OX6evCO+Ft8S70T/WvYb/FzzhzjP6B3N
Y/4c8rWS/Dm2bpoPXpN1Y/5s84e4n6N3SLyZ5X3dZknPWstPrqJ/C/lZ8s70
PExP8DPlXcg/bPnT5V3xR3m9B59k/hjPmehdzGN+orxbvvg+/rjlJ9ITPYuf
It8ef4rnZPTtzGP+JHn3PH9/zPIn0RM95seRr2beFN8hyTfBe7Bu9MbysfKe
7PcZ1o2+Y+KN5MfLd+X8X6DHPeSf53zcw7rP4Q3xXuSjN5CPkvel/yXO3z3k
X8Q3l4+U75nk6+N7cf+/RH99y9dO8kfJ+9HzCr6Z/HD5fuRf574KPkK+P/nX
LT+CvHs9+XD5AHreYJ7o+yde1/J1zOvID5MfwPPtTc4/+KHmb1l+mHwQPW9Z
fhj56CXmA80z5gP+Ix/35fMMpacWnku8JvvK44cwZw3ywWvjB5KPPbUtX9PW
jX7Af+QPoD+eZ62k5w16aiU9b7Df4Acn/cFryg9izlp2zu4+Zw18sJ1P8Ory
wfKDOc94Hd2ryh9kXmL+X/2DbV+5xGtw3wavJj+QdT1fiR9Cf7yO7jXt9eIe
+l/DK/Ah5F+jpyLpiV5u+VrWU570vMr7QvBB8qGs+6rlB5GPHvsHWj6+fsvw
Ycm+3OO+ShOvbuuWWb97adITvSAfID8sOYfoh5rn8P7y4cn9Fv2wxPPyfvIj
OM938Jx8D/lI7sMP8Kx8d/lxPAc+ZN3gu8lHk//Q8n3MP7J89FpJvpf8ePxj
vAQ/gZ7o4WG3q/xE5vmEfveYz+O7yMdaf8zvbP6J5XeSj+PcPuG6BO8pP4nr
Ff2fOkU/Ocn/Ld9RPp7+T+mPfop5IfHYU5p4DeYvS7w65xz8L1u3Bl5qfop5
Ae8un4DHOaOPNy8kXt32+2fSE88z+HbyU/HPOP/oE8zziVdn3ZjvZu75rvRX
M/9D3kV+GvnP6Yk+MfHfLV8Dz+Kd5JPw9fhv8o7yM7heX+K/ytvLJ3N9v6Y/
eBv5ueS/xX/BzyP/LT3BtzX/Dt+En899Hn0jfgGvi+/od69Nfx5vLZ9i68b8
Nuax52d8qq2bT9x7fk56vk3yUziHb7h/3GtwbjHfyvwb699aPh3/Ad8g30p+
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
v5Pn4SrLbzJfbfvdRH/0XOJl1jNbvlF+l+XziZfZ/LPwu22e4DPlP8vvYf64
bvAN5vcxZ/Sl5jH/E/ly8xnyH+XLyd/PusG/la8i/6Dlg680z5rf+x/5e9nv
A/hV8m+q6L8SX808DzJP8PXyB8g/jF+BP0j+YXqusHxFFfnY85DlP6fn359L
jl+Or6Un+mX4Q9yHj9Af/FP5I+Qf5T4Pvk7+P/r/Z/kPzJ/EL8WfpOdJ1r3U
8u6XyN+TP808T9MT/F35M+Sftvxb8ufw5/CL5W/KX6Dnea5v8NflL+Iv8pyM
/kLiF1m+mvmF8tfkL/N8eIn+4K/KXyH/kuVfJV+tivzLybrRX0p8etITfZqt
W918Kv4qz7foU+Qvy98oFL9ee5l5gr8of4v8K5yne/Uk/4L5K/gF8ufl79Dz
Kn6+/Fn5+6z7On6e/Bn5ugLfn8a67jGfx5+Wf0j/65Z/mnyNKvLrmPM17ufg
T9FTzfxc+ZPyj8mHnlL8Cfmn5MOcZfjj8s+4XtHPwT+3fHnilfQHP1v+mHx9
0h/8EfmX+FvME/xh87fxyfhXzP82Pe6xJ/hZ+NfkY/9ZSU/0M+UPyb/hnOO6
Z8jXyr/jer1Dv3uaf0D+Pf4u5x98jfl7XMfg95u/j5+O/8C673M/BL/P/AN8
Ev4j99sH9ARfLf+pivxq8u6nyVfJN9CzDp+I/1wo/j7POvqDr5RvrCK/knyt
KvI/J+tG35D4qUnPB7y+gq+wdT/EJ+CbmPNDng8TLO8+Xr5c/kuh+Pta4e8R
Zsw3JX6KfnG3/I9C8fucP6Mn+B3yv8l/YfnF8n/wL/GT8XDT1MVL8NvlJaX/
l88mHuZfz/kEv1WeKy2eg+cXygv4N9Z/s7wU/87y0f/9fjDrv0leVlq8P6Of
hJdbPo/fKK+oIn8j+RpJ/gby1ZP8DeTdx8nnyyvp+Y6e4HPkdcj/bPngtRMf
K79aXpeejfS4x3wh8fCc2WD5WfJ6eOw5Ed+Mno30uFez/jHymfLNLZ/HZ5hv
Yv7gV8gb4r9Z/nJ5I/qjn4A3tnzOvFHix8svlTflfP6gJ/gl8i3I/2H5i83/
5L6K3tQ8l3g16xmd9EQ/Tn6RfEvm+ZN5gk+TNyf/N+cZfKq8Bf1/W/48+TZ4
Nv9//eeah79/mU+8sop8K/Osecv/yAf/998Ft/5z6CnHY34y65YzT9a8lXnM
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
8Dfwe7iO0V/Hl/G6+4f+4F/KV5HPFYr+mny9/D7y+UJxTvc0/4W55z+X38+c
0V+Vfyh/hHwl/or8ffkTrBt+3kkOf0/+P/I1LP+O/Em8luXflj/FurUs/zb5
6CX4W+a18Zfxp+ivTY+797+EP23zBH9R/ob8OfZVh/7ozyb+gvxF+as8Pxvi
z+Ov8f4S/Tn58/I3+RzVmHXdQ76R5Z8zb4w/K39G/g49TelxD/kmlv+f/H18
y0Lxfov+nnlJ4mFfzSz/hLnno5cn+cdY999/B8Ly0cuSeR6jpyzpj15Kf9zv
o/QU8BLz9xJ/Rv6wfB09cZ6n8Q9ZdyvmedryZVXkY8+Wll9LT/Ct8afkD8g/
oacFPcHXyD8l34J9uYeK5rxegq+Sr+d52Ap/Ur5S/hX58PNg8olXlf8y8f/J
V8i/oac180T/OvEn5Mvl3zL/tvjj8mXy79lvG/wx+T3yH7kf2nIOwZeat+Pc
gt9t3h5/FP+J+zD6I/I75Ru5nzvSH/wO+SbyHZnHPfR3sPxi+S94J+tfbPlO
SX4T+/X+RfI/OJ+unHPwhfI/Oc+ulr9J/je+vfXfaN7d8tHzSX6+/B98B5t/
vuV3sPw88rkkf715D8vPlWfL+f4Y/GH5HHmhvJjfmZ7oefOYnykvp6eX5YOX
Jf6QfIa8gp7e+Fq8sry4r+gPyq+Q1yzn+8zwB/Ba5cXrEn0NXru8eB2j34/X
Kef7PJnfPeR347q4h/4+Sb524vclPdFXyy+UN2LdvZkn+DR5Y3wffJV8qrxp
efE+3xdfKb9AvmV58XWxH/3u/34/JH6v/Dx5c/L70xN9a/OYP1vekp6Blg/e
wrwk8TD/AMtPNvf8WfSX4dnES+nxfAvzmD+TfCHJnyZvjR+Ir5BPkLej52B6
go+TdyY/jNd18LHyLtyHwyw/lnw+yZ9IPofn8RPk3bj/D7X8aPl2+HDrP858
hM1/nPVEX275HJ4x72Ye80fId6JnJL4M35l89HvkQ+R7sN8T8aXywfJ9OLeT
8bvxfTnnk9lX8APk+5Mfb/kB8gH4qfhd+EB6ot+JH8D9cyr97iE/gXN2j+vm
8f3lg9hX9Dvk+8kHkw89hcSryh9onjP3/qz5AeYl5gMTX2L5gvUsSXpOwRfb
ugXz2+X9mb/U+oPvIz8oOefb5HvJh3LOk7ivgu8uPww/y/K7yYfTE/1WeW/5
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
N7N89Jz19JFvLx9Nfit6oh9nnsG3M98a7y3vJj+e+ZvjveRd5WM4hxb4rvL2
8vGcWxvWDd5OPoF89F3kbeSnkW9HT/Bt5KfjHS3fSn4GPR3Zb/CW8jOZsyPn
7B721SHJn2GeSzz8un2SP908ztPC3Pu3kp/Ffd7J8k3l5+DdbL+N5efi2+M7
yxvJz6e/O76TvL58OvP3pN895He0/GbmPfGe8nryi+jZCd9RXld+Cee5M94D
v5Tzj76DvLb8Cq7Xrnh3eS35VXze64Vvj8+oKH5d34v5g1eXzybfx/LBZ5nH
fDXyZUm+0nw3y5fL5zD/7lyv4KXyuey3L74dfi356N3kefk8+vekP/r15hnz
6xLvKi+R38C++tETPCO/kXw/y//dWV9T4ftaPnqI7sOcwf+QL2Rf/fEu+CLy
/enpYvnoGfMFiXeW/yxfwjwH0uMeooPwTvgd5Acxj3vIH5Dkl5hnzBcn3jGZ
J3oH6y+3/g7JPAOZp0MyzwC8vXyD/K4k3w6/m/6BPE+C/yRfWkX+O/lyfDDe
Fl9Bz2DmDP6N/F78YLyNfL38fl5Hw+hxD/mhzOMe1h2S5O8zzyUezuGQJL86
8W2TnkPoCf4F65aat8bXWD6LfyZ/AB/KfoN/aj7M8tFLyQffRv6JfK3lS/CP
zQ+1/Efyh+iJ3kq+Tv4o+eHMH/x9+ePkR1g++GPmJfh75odzf0Z/NPGW8nfk
T7DukXgL+dvyJ7m+R+HN5W/Jn+Z+OJp13WM+i78pf4b+oyz/JvmypP8N86Px
rfFn6I++Ff5sMo+7zx/8dfPYs6X8Nfnz9BxDj3u59TfDX7B1s/gr8pfIH8N1
dC9L8i/KX8FHWX/wl82ziYfRR+JbyF+Qv5r0RPf+jPnLiTeVP09PmP9YeoI/
JX+L/Al4E/nj8vfJj2Oe4I/JPyA/jnMI/qh8HfNHb4x/aPms+brEG1k+rluC
P2J+Et5Q/qD8M67XBPYb/VPzksRDz3jWdQ/znJLkPzGP/Q+Yj7d89FLy2cTD
++nJSf7jxBvI75N/Tk/cV/TPzEsSL9g8m8tXyr8kPxGvL18h/4b5J9Ef/Wvz
ksRD9DT25V5I+pfRX0j6l8q/xc+wfPTwefJ0fDP8O/Kns657nv5c4jmbczPr
jx7zd8m/5/PzJMvfRU/WziH4YvmP+Fl4Pfnt8g30T6Yn+EL5r+TPs3zwXxKv
K18g/42e8zm34DfJf8enWH6+/C96pll+rrykku+zwevIZ8rLK/k+KnqCT5dv
Rv565g8+TV6/spi73vLTyEeP/VPN5+G15RfIG9B/A15LfrZ8C+ZZiNfEm1UW
r+9C1g1+lnwr8ovwGvjW5KNXl58pb1FZvH9uoT9688SrWb4UL0m8YP2VeEvy
izi34KfLt7H+EvNWiVdYPq6bTdzXrUh6FjF/8En/0R/dz6dcPlG+Lflb8TK8
DfNEL8XbVhafD9ELeLvK4nP1VuYPPl7ekfzteB7vRD56Tn6KvEtl8bm9mP7o
nRPPyk+Wd60s/v2RJfQEP0nejfwSXu/u5fQEL8G3s/584nHOmB9nvph1o3dL
PGP5CvN/amUyY+Xdbf4cfqJ8B5s/a97dvAQfY36H5aOXV5Hf3jzmTyBfluRP
IF9WRX577pPFSX4785g/jn0VmDPu91h5D+5Pn/9Y8vkkP4p8LsmPIh89zjPS
/E78b/nR8p70343/he/EnHfz+go+Qt4LX4H/ifdmvyvocQ/55czp/u/327Av
93+/3wb/A+9D/h7uz+DD5btVkR9OPnrW3PtLzHtVkR8q353n9grLD2Vd998t
nzP/De/L/NF/xfew88ziQ+R7VpE/xPxe/Bf5QfJ+9KzCN+H7cF2ib5QfKN+P
+/k+1nUP+dWWH2R+H/4zvn/SE/wA+QDLB9+AD7R8LvG4bh4fKD+AfQUvJJ5n
X54faJ4zH5D4T5aP55bFB5ivtvz+tu5qy+9nHvf7Iz6InnhuwfeRD8YfwH+Q
7yUfwjk8hH8v31M+jHN7mNdd9KHmJYl7z3fyPeSHWj6L95UfRv5hy/clX1pF
/lDmf4jzcQ/nsJbr4h5yDyb5YebeP9Tc5xmS+LeWz+MZfHfztfg38j7st2Dn
+bW8t3wE+30E/0q+q/xIzu0x/Ev5LvKjeR95nHmC7yAfTf5p9hV8e/kJ9D/D
OQTvJj+ReZ61fPAx5rG/i+Wft3m6WP55y3cmn8eziYc5nrN8J/PYsx4fm/S4
x54c3lE+jufkc5bvSD5bRX4sn5+ftXx7ekps3S/wk+iJcwZvIz8Ffwn/XL6t
fAJzvox/Jm8tn8i+XsE/lbeSn855voZ/Im8un8x1fJN5gm8tP5t89I/lW8nP
Jf8WPdHPMc/gW5q/jX+En8t99TY97rEnm3icx/PnJP5h0hN9HX4e677JPMGb
mb9l+eje84F8C/kFSf59fAqvo3gO71u+PMk3kU9NzuE9fBr5eG7BG5u/g7+L
T+dz4zv0BG8kv9Dywd+RN5BfQv49zjn45vJLyUd/G7/M8iV4ffP3LR899uTw
evIr2K/ng19uHvvrmn+AvyWvKZ9J/8f0BK8mv5r8p/ib+BzynzKP+7/ff8Vz
Pnil/Bqu+yeWryRfmuQryBeSfLm5z1NOT/QS86sTf8PypdYTvCC/lvznlg8+
1zzm8+TzST5P3v11eU5+HT1f0BP8706ZzI3kv7Z88BsSf83yBfNX5X/KF7Cv
b+kP/od8Ifnor+CLLF9ivjDpCf47+UKS/838O15HwX+R34L/YPlN8lvZV/SX
8dssn0085L9P8reaZ8xvSfwlyxes56Wk5zvL/2zr/oC/iN+e7Ms9rptNPEd/
8BfwxbZuCb7BPM4f/Af5HfhP+PP4ncwT/Tn59/K7uY4b6A/+nXwp+Q3ME/wb
+TL6f8aflX8tX0F+I/4Mfi/9G+l/xvLRM+bLq8h/9R/90eM8Mf+luec/k6/m
nH+1fPBV5nGeT81/s3z0rPU8Lf9Yfj/53+kJ/pH5H5aPniUf/Cn5h/IHLJ9N
vKr8msSflK+TP5is+z98LecT/Qn8Ic45rhv8A/nDVeQ/IO/+uOW95/Gk53fL
vyd/BP/T8u/KH2X+Py3/LvnoGfwt+WP4P/hj8tflT9If/l2LksT//f2psuK6
7v/+PpTlX5U/hWct/4r8aT5nRn8UfybJPyJ/Wf4c6+boj/6seQZ/0fIF/GH5
M/JX2Fcl/pD8KfnrnH91+oM/KX+DfHXmCX6f/FP6G1l+tXlj6w/+iXnML5ev
Z7/N8LXyZfKvyG/JusGXyr8hv5Xlg3+d+IPyu+Tf0dMcfwD/nn1FXyO/U/4j
59ACvx//iedMC+YJfod8g+WD34f/nORX4xv5PBP7gy8xb8m5BV8k/x1va/no
ob8Nvgr/g3z0lfiffL6Kfi/+F58Po6/A/64s/n5pG+YPvlD+TxX5m+Xhh9oF
b8f80WO+XZL/h3naWv+N8pJqfL+Z5efLs3gHfDmeq8bPAcOXya+TlzFPZ/we
vLxacV+dWdc95MO/v5FLPPR3TPJliS+VXyuvSHrcq8p7fy7xuF/PlyXnEHy2
vBrelfOPXmke87PIl+LZxMP93MXyM+TV8W6Wv1Jes1rxdbQdfrf8Unk98j3o
iV7XPGNep4r8JeTz5nfh3p9NPOR3SPJ1E78z6Yl+h3y6vCHnsxP97iHf0/LT
zHdiX9EbmMf8VPJ58yV4I8tnE8+zbvDFeONknsVJT/TbLV9qPbcnPTvit+FN
yO9Iz21JT/RbLV+GZ8wbJ36LfIq8Kfd/nDP4+fJm5OP5LMK3JB/Px73MehYl
PT1ZN/h5/9F/Lj3xumfMm5mXJB7POZt43s4n+DnmPk/wLcxjfjLz5JJ5JtOT
S+Y5i3zWfCG+VdIT/HR5c3xXfIF8krwl8/SiJ/hp8lbke1l+onlvy58q34Z5
elv+VPLuN1s+Z34T3pp5Yn/w8fI25Ptw/u6xP5d4CfMHvxFvS74XPTcmPfEc
om9rnjFvnfgNls9ZT/BTquifj7dNznm+5XNV5GPPrswffJy8Pfvtbfng7cwz
5m0Tn2f5rPUEP1bejfxelg/eNfHrLZ81v04+Sr49+9obvxbvznWPPhffgddd
9GvwHrxO92ZO9wLrBp8jP0q+C/l96Qk+XN4HH4hfje/Gc2MgPe4hPwCfje9O
fgDXJfgw+Z7kD7B88D3Ms4kXWDf4LPlQ+V5Jfia+N+tGn4H34/kZ151hefer
LF9hPVclPQN5HQUfIt/HzifmDzH3/kPocb/S8nGeDH6QfF/8QPwKvD9zHkiP
e8gPwi/H9yMf/TL5gfKBfD4czPzBB8kPID/Y8oPIVyT5gfJBrHsQ5xN8gPxA
9nuQ5fc3P9j696fH/VL5fvLB9B+CX4IfxDzRL5bvKx/CvoZybsH7yYfih1p+
b/kweg5lzuB7yQ9l3egX4Ycl+Qvle8pH0H8YPh0/vFrx52AfxrrTLe8+Tb6H
/IhqxX8nZTg9wfvIjyF/BD4VH0k++hR8VLXivx90BNfFPeQPLys+b4L3lh9L
/+GW700+etZ85H/kR3IOIyzfy9zz0SuS/C6sW5HMvzNzlif73Zl8eZLvKT+O
++pI22/00iS/o/mR1t/D/CiuV/RjzbOJF+jx/KjEL0h64roXJD1xv+fLd5CP
tnwJ3k0+Bh+Jn4efyDmM5HURvKv5KMtHjz3ZxMM8x3BuwbvIx/L+Ff1cfJzl
83hn+UlV5DuT/3903XWYVOX7BvBzzswu3V0iIKAMKQj4FSWUbqQEAUVCaRAE
CRNJSQkVULCQkAbplBYEAYMUkEYJQQWJ3/Psud+L+/dcw/4z13y8vd/nvOfs
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
0+D1A9HPrvmvcJ2oNxevgf6vKN8c+cQ4+eqY/0v4GdPj/LR4U/HaNGfEuOuP
Gnf9nK9l1nVek9wnr0HukVc3foryidRzyvS48/s7rZsID4wn4DpRP0nzJ8Ij
8CZ0vM5PiD8rXo/micIbidc3++O8ntkf53WNH6c8n6/fqD8Z9bO741U/Bm+A
vNsH9Ybkbj+dc7/LN0A+0eQb0LrufDmvFydfV7whfX555A2MH6W8+/zy4bXE
GyM/i/Lqz5K7fA3xJvh8n035quLN4N9Q3rnu41zsg/oz4s3xOOP8iHgV8ZbI
z0OP8xbkHryi+PPwhfDD8FaYx/kh8cfF2+G4vkU/u+aXYR527V9q8i8ZPyhe
Xrw99Xjk3O/yZcRfRs8KrKteSrwz9se9vyu7/v8rKV+SfBX1q3cy/qt4CfEu
6F+NOdWLineDr4P/Au+OOZ3/LB4T74njWg//Cd4L++z8APxVXIfrMY/6w+Kv
Ib8Rvl+8kPjryH+H41UvKN4f+e8oX0B8AHwL5Z3rnJtNvr/xfeL5xQdSj/qP
4vnE38A8W9Gv/qD4m8g73wt/i/IR4zznXtPjfI/p2YKePabHvS8uexT74/J5
yTdTf16s69zl84i/jfPu1v0B/g7ybk71nOKD4duxb87fNb6b8gnku+Dv4Xid
fw8fgsfV7VhXPYf4UMpH4NnFh1F/QD6UPGJc59yG/WSP4DwmGA+wD4nwbFjX
hyeQDyV3/Vkov43myUL5bTR/FuyDc5/8vTj5DOLD04SfhzvhO+EjkN+Jnp2U
Z99B+YB61NOIj0Z+N+XVR5EHxvVjF+WTi4+D/wjfDh+Pnh/xeKKejHwffJt4
RHwy5vwZPep3i8r3x8gfpLz6x+S+cf34lfK30aMfh+Bb4VPR43wLfBrmOYR+
9Vvin8TJ30KefbP4f+KfoucwethdPjDu0XGp3yTn/hvkh+Hfif8t/jn6j6FH
/ZL4bORPUV59lvFN4sfEV6LnOnwjfBWO6zr62ZP+/WnyK41vMD3O18NX4/PX
+Tr4Gny+X8O67En/XjX51eS+cV33KuWPkruetfA1pkf9sPg6M7/zteS+cd/0
/yK+Af4PfA18I3qcr4Zvwjz/oJ9d83/jumJ355HzG42vEt8rvgM9t7Cu8+3k
vvGknwdRfrf4TvgdyjvXj9vwlfDvkXe+QnyX+G6s63qWi38vvgf7cBfrOv+B
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
3gr9Eczpw1uKV0L+N6zL7iOv/jC8MvKu52HTcwzrqrcw/fpRGF4Z8zgvBK+C
/fwN/ewR6i9keo6ZfGWzD4XMPM4LijeKha+XqT2n0cOu+VOUrxcLX9dT/Rz8
IXhd9JxDD7vmz1K+Tix8nVT183B9PkHtWPg6r9pzAT3qtWLh68IGcI+8gfH8
4tVi4evXas8l9Kg/HQtf31fzVyiv3sy4Pu+hSix8nWDtuQp/EN4C58t5XvFK
sfB1kfXz7hrWVS8XC1/nW/O34Po8jDKx8PXRNX8X15t66Vj4OutRuE/eidyD
P0qe9CK4Xvh8jpKx8HXitT+A6/NCSsTC17PX728ieP9Y9eKx8PXyE+CB8Sh6
XL4YeYT6i6E/avqdR6gnl3jRWPj6/VFaV71ILHwfhqTnqVJevRd5YDxAT8S4
j3Vd/hHyCPU/gnnYc4oXioXvL6H/fyKOV70geTJ4DvGHYuH7WugcydGjXiAW
vu9HAA/g+WPh+4T4Jp8feXZ93k++WPg+JPr/p0APu80/SJ4Cng0+wPSo542F
76Ni8w+Qp8TxOh9gPCvlA/Is4jli4fvq6P6kg+vznLLEwvdxSnpeJdZl13xG
kx9C7hvXdTPAM5meDDhedr2fHp4RPgz59OjJaHqcZ6B8lHoymJ508PTiGWPh
+3FFaX71dLHwfcbUs1DeufZkNvlR5B75+8bTiaeMhe/bpv054GnFI7HwffOS
XqcL/eyaz2vyHxlPI36rSPh+idpTCD3q/xQJ358z6fsDeGr4TOSd6/Pt/i4S
vr+oPl7F4Cnh+j6lychTwPX9TpPDA+PJ0B+BXy8Svp9qIjwgn0Pu+q+Rx3C8
zmebOdWvFAnfJ1aPqxg8OXwe8sWwLnvS63FR/lKR8P1s1YtT3nkUPRHjEfRw
fh45939D7pHPvU9+Lj5fYiY/h9zlzxUJ3/dY75eEJ4MvQr4ketTPkpeCJ4qf
KRK+n7PO8yh62F1eXZ+HerpI+P7VLh/ATxUJ3+86oB7ny8g98qXGo5SPkEeo
P0r96ieKhO/7rfkylFdfQe7yx4qE7zee9O9Pyh8lL0f5n4uE7w+v95+kvPpG
4wHlA3If/h3meRL96nvFdyBfBe7BdyJfBT0e5SNx8q6nMs6L+k7xPZizGuXV
fzCuzzvfIb4XPdWxrvpW8X3wWvA78P2YpxZ61LeIH4iT34J8YPKbkfdNfqP4
z/C68Nvia8SPoKcR/Bb8KOZphH715eInkW+K/VFfIn4G/c/B9e8BFomfR74l
HgfUF4pfQL4l5Rci79wnP0fukZ81fpPyAfXcND0tKL8gTr/+ncMs8SvoaYse
9a/FryLflvJfI8+uf0cxQ/wGel6B699dTBO/g33uin71j8X99GG+O+UniUfh
r8L170MmiiemD3t6w6/Dk6UPP9+dX4MnTx8+bjv/S3yCeMr0eB4L/Co8VXo8
LwV+BZ46ffh1rQ/mZ09G/VdMT2/KjxNPi3Vfo7x6GnLfeAKte9n0OL8ET2fm
Vx9L7tb9E54ex+XWVR8jnoHygXG3rvof8Iy0bsR4IvaB8xmMXzQ9bt/UR5t+
jzyDcf27smHi2XFcA9DDrvn+WFd9qHgOzONc/x5siHgu5AfguNjj5XMaP2d6
+qPnnOl5PWV4/bLree9n8jnJuT9HnPxg9ETR7/LvkvfH/qi/LZ4bPhD76TyX
8bOUTyA/I/6G+IM4rjfhp+H5sA/OT8Hz43w5/x1eIH34+5Q3MSe75t/AcbFr
/yDKDyJ/g/oHYV32k5R3/b5x7j8Bfwj5QehRH0j+BuWdJ4uTL2D8uOlx66q/
Ll7Y7KfzQuQu3w/5RJPvhzy7/l1oH/Ei6HkHPerdxUsiPxT7z67XwxDKdyMf
Cj8GL0U96kfFu4iXwbrD0a/eSbws8iMor/4YuUdeJk7+FeQT4K7/ZfRHyfXv
aTuKl0d+JHrUO5C/j3WdlyN3+Xbij6N/FOXboYdd/x64rfgT6BkD178HflH8
SRzXWPSzx8tXIHf5F5CPwgPj+jgymvJtyLm/DfrZD1I+Sv6reGvxiphnLPwX
8VbilXFc47Auu8ur/wyvQvvgwZ8nHwf/Cf40rivXr95S/Bmz7gF4VZPfD6+G
z0fn++DV8Xg1Dvup3kK8BuUj8GbitdH/AeXVa5G7/qbkEyjvPDFOvia5R17j
Pvka2Ofxpr8GzuM4k69O7vobiNeBT6Z8ffG6uE6c/wivZ/J7xeuKN8Q8H8H1
7/briD+L+T/GnOwuHzGu/R+afCNy7m9o/AfKJ1DPD6ZnMtZVr411I+S74Y1N
fhe8Cfono38X5RNof3ZRf7y8O95J8O9NzyT0fG96JuE8Om9kXF9vohZ6Emke
du7fAW+CvJuHXfMTsQ/sUbrOd1C/c9dfk3wi5Z1HkI8YD+jzTr0GOffXwP4E
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
fwb/UW6riLdA/nP0OH/O+F65rSzeEuf9C/geua0o3hpfT7+C/yC3T4m/gK+/
M7Gu+pPiLyI/E/vMHkUP518g98jbGN8ttxVMv37sgrc186iXE++I/BzKq3cw
/j3lE+G+cc3PxnGplxV/GXM63wl/xeR3wDuhfzb6d1A+0eQfQz7B5B+7T39p
8c6YZw6uf/VHxbvgvM+h/KPIR+h4nXeKky+JHr0/l/IlyL/BfjrvTO7yxZH3
Tb6oeFf4fMrHxLvh82g+5WPIs2+X24fFe6JnEXrY9WMhfBu8F/LOt8JfxfwL
0a9emHwR5Z27ngBeSLy3WVe9IPki6n+IfDF8C7wP+hejRz2veH/kv6W8+uvG
N1Peh/vw3OKDkF8B/w7+BvIrcFzs+rGc8rnIV2Bd54OMb5Lb7OJvo381etSz
ib+D/GrKZxF/F74WvlFuM4u/h5518A1ym058ZKZ7c+vHevj7uM6/w7rsAdZz
feqjkN+EfWAPMAfn3yf3yEfeJz8S82+A6/GlNf0eue1fI7dpxEfTnG7/UomP
w+PD5tT39tu52wfOjzW+Sm6Ti09Az1b4SvhEPC5tRT97FNcl5ycYX2F6tqS+
d91xz2bsPzufxxXUz/OrJyPfTPlE9ASmPyL+YaZ7n7c++WRy1x+Qb6P8nUKe
NwXX7U7K/yc+Db4bvhz+CXqc6+frDfEZmHMPfJncXhf/Cse1H+uqXxOfifx+
yl9DPoiT/yrTve8zOP+l8aVy+5fp943b/FVyN88S+NdmzsXwWea41K+Iz46T
/0P8m0z3vk/Vj0Xweej5JfW9rw/O3fevLn9BfD78V8o796lHH9fPiy80+QVy
e058caZ739+7r29nxJfhej6MdZ0vNT6P8gnk+vXzlPgKfP9wNPW9r6vONX8k
9b2vw85dP+eXG59repzPga/Eum6eOWYem3c9h+CzTc8h9Kj/Hqd/ltyeFF+d
Kfz50hH0sMfLrzLzqB8VX495fsP+sOs+HDP5deQe+do4+cPoiaDfI19H7vIH
xLfg+jlNefXN5L5x9/MLvf3a9JzCcbG7n1Ooz4RvRf539Mw0Pc6/onwE7pFv
Mf6l3O4X34b9OQX/Ar4d++/mZ49Szxemx/nnpsf5Z/AdOO9ufvUfxb+ndT3y
ncZnUD6R5pxhetx+suuc+vMd9++2veK7sD/qUeP6/58w+e/JXf8e8pM0zx7M
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
fyd+AD2j0KO+Sfwn5EdRfhPy7BXFV4kfRc9E9LDrxwTKrySfCH9KfJn4SfR8
BH9SfIn4aezPFHgF+BmcxylYV32x+FnKB8Y197HJnyH3yE/Hyc8V/wPzT4c/
IT5H/BLyM9Dj/E/j/xP/Uvw65pwJf1x8qvhdHNcC9KtPEfeyh3nn5eF+9nt5
j9zL/v97ypue+ZT/+D79H4oH2cP7Cyn/IdZ17vKTkfdMfjLy7OUoz/1lxT8Q
T4Z5lqJffYx4KuSXU340+QrKO/dMfhT5Cvhj4m+I50LPNngZeG7Msw396oPE
81A+MK4fW00+N7lHnst4afGe4g+jfx961LuIF0P+Z/ij4p3ESyL/K3rUXyE/
CC8l3lG8NI7rMLwkvAyun8PoZ9f8IZMvbbyEeHvxsug5Ai8OL5c9/DrivJh4
O/HHs4dfd45iXXabbyv+P/gxyjuPoIfzjxsvKv6CeAX0/IYe9dbiTyF/nPLq
TxqPibcUr4ye39HDrvmTlH9OvAr8FOWbiz+N/TyF60q9mfgzOI/Oi8CrUt4n
f4bcgzcWrwY/C38EXh3zOH9YvJF4LRzXefSza/4cvDC8NvLn0KPekPw85euL
10XPBcqr1yF3+erijTH/VeyDejXxJtifq5SvSv4X5Z17cfKNjRcyPW5d9afF
myH/F+XVm5J78Crk1+AFxSuLN0f/dfhD4k+Kt8Lx3oAXEH9cvC325zbWVS8n
3g75O5RXf4nc5R8VfxnrBunD2/zipcQ7IR9JH96yu7x6PvGS4l0oHzEeL9/Z
rOuc+z3yV+Lki6PHw7ouHxPvCk+EPyj+iHgP9CSH54X3xPzJ0a9eWPxV5P+P
rvuO97n+/z/+er0Pxzki2evYK2QnWygru5QRRYlsKntEMrOVkWyyV0ZGZmUT
2Ztkj0i2+D0eXvfn5XP/Pn6vXv/kff3cur9e79f7feTDcU4sPCP8M/TOM4jn
FO+M1yUh9p13Ind9DvQR8jh4F7MTR32U6bOJd8XOc9Rnww57euqjyNPBu+Hj
9Dnss/P1pDM7CanPIN4b501CfRz5C/C04unF+2AnKXbU04n3RZ+U+rTkyah3
7qOPGPdwXtenFv8Cnoz2U5Enh6eB98N+cuyw804as+M8tXgy8YHYSQVPJZ5U
fDCeV2rss4f1g4ynNDupsJPS7KSk/oWQ/RTiicWHYSctPDl8OF4v58ngI/D+
cZ4UPhL/fU+L61FPJD6K+ohx3U9j+pHGXzA7abDzgtlJDU8CH43e3eckZic1
rj8JnTesd9eTivrnyN3O8/BRZofd7USMR/B6cT+SPGJcuxSmH2E8sdlJgetU
T2j29UgEd9fp/DnxWPExeF7uPiQUTyA+Fq+7e73Y+T7Ewsehd68Xu9t3fTS5
u8/Ow/bjiY+n94/ro8jTUh8Rn2De/+o+eTrqnfu0EyP+NIv8fzz06bHjfCK5
b9yn/QRmx3k0fBKu33l8+GTch3Q4b3zq45n+ofh07GSkXn0auW9cryeD6aeS
u/4Beh8eMa5HHPX3cD2euZ5/xGfCs8DjiZ8WX4P9V7DDrkdReBR8LXrnEfhP
uP6i2I9Qz+5TH0XuwdfhPjt/mlD+P4j4BrzPX4E/ET8hvjlN8PlIxXE97NoX
w31jj0fP1/kmcrd/nLwY9c6j0EeMu+fL/Ubj/5od54/Fj4r/QueNGI+i63f+
s7kednde/ecjs+PO+8jsuPvvfLPxh+KHxX8194edr/MBfIu5zw/Mju1/Ndd5
3+w4vwffitfd+V34NrxP3H1QPyi+g95X6nfgO9G/gl+fq/8uvgd9cerVd5P7
5LvIPfKd/9HvNK87O99P5zvIeX97SL8PfcT0e8mLwf8R343nqzsl4bfhv+E6
S2JffZf4XurV/xbfIb4ffWk8L/Vt4gfRl6Fe/QC5B99KXpb6LdiJwD3yA+S+
cR/7EeMerpP7/eS8/7vxW+K/mn09bsLddbrny+7Tef+CH0Lv9v8yO9z/gt7t
RIzrUcr0B8nd/s/k7rw3xDeKH8X+q/Dr4hvEj+N6ymGf3fX6z2vwE+jdzjWz
w/169L7p15t9Pa6KrxM/aa5HfY34GfQVcH/Y9Shv+tPkHvkp41fEV4qfw35F
7KivEP8TfUXql5NXgl8WXyx+BTvV4JfEF4pfx/OqgX12fVwdz4vdww7314xf
NDvVsHPR7Lxh+mvGL5idN3D9F6j3Tb/A7Lt+vrl+Pc7Db5j786f4XPFbdH/0
OCc+S/wuft6og/Oya1/b9HeM/2F2amNHfYb4ffR1qFe/R+766eh98rPwB2ZH
fRr5m9RPFX+InTepn4qe/Yz4d+JPsPMOdtQnij9F/w7135LXg58WnyDupw12
6mNHfbx4JG3wuD7149Gzn6Ked9THiUeF9ONC9k+KjxaPwU5j+Al4bFp83gX2
2bVvZPoYctePQu+TH4cnNDvHqWc/Rn0U+VHxkeKJ0gb/fXTXqT5CPLG5/iPw
56mPwIeLJwnph6NnPyw+VDwpdt6HH4InSxv8+uR9XOch6uObfoh4cuw0wfWw
R4X0ycjd/iDqm8IPig8UT4n9D7DD7vqI8Qiux/UDyJvCD8BTmR12txMF7y+e
Gu+HJtT3R+/TeZ2nJPfIU/xHr+7R/XGe3Ph+s+P8d/F+uE5+vux8Pep9xdPA
P4Dvg6fFjrv/6n3E01Gv/9wr/rl4HPoPcX/Yw/r05rzqPcUzwD+C/wbPiP2P
sMOuj5vB98AzoXe+G54Zr3sz7O+mnn0X9fFoZ5fZcc9XvYd4FroPru9O3ox6
535In5ncI8/0H30mvE/cfd5pdtx93ml2nO8Q7yKezdxn9c7i2el10X9uh+eg
3iPPbna2m51mps9mXkd2j+6D+mfY8ei82+A5zPtnq/in4rlwPc3hW+Av4nVs
jvOyu+uPGOfr3EL7/Lyc5wzpO2KHr995LuO/Us/3X72DeO6Qvp14HngL+C/w
vNhx/rN4G/H8eL4t4ZvhBXB/nG8Sby1eCB8XrXA96q3EC6N3vlG8pfjL6Ftj
x3kRct+424nAP8ZOxOw3Fy8Kb0P7zal3vkH8I/FXsN8Wvl68mXhxXE87+Drx
D8RL4b+DHXBedu3bU9+UvAP8J/H3xcti5xPssGvf0fRlyH3jUSH7pY2vFa8v
/jp2umBHvZ54RfRdcJ/Z9XFn/HeQXf/9TqZ/nZz3XyP3yCsYXyP+DnbceX3j
Yb3dXy3+lnhl7HTFDruP5+v6N8m7wleJ1xZ/Azvd4T/Cq+G+OV8pXku8Bu5z
D5yXPayvbnyF2emOnRVmpxvuPzs/X/Wa5NzXEK+J59uN+hro2ZdTzzvq1cVr
UR9l3MP1uL4aOe9Xwz77Murdvkdur1+9qnht7HSnviqd1/kP4hXF62KnN3yp
eHnxBni+X8CXwBvi/n+B86qXFW+M/kvq1RuR+8b1cT/Tv2t8sXiZkP1F4iXF
m+J6BmKfXfsB1Jcg5/5l8eY471fUq39kfCH1EbhvXB8Pob5IyP4C8fzibbAz
EjvqOcQ7oR9Pvfpn5K7PJt4Zr+8E6rNhh32+eHrx3tiZBp8H/xzX43yueGrx
L3GfZ+G87NrPpD4VOffJxQfivLOpVx9gfI54MvFB2JmDHfaw3u7PFk8qPph2
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
8kHwcuK/ih/AzlD4q+KbxY/gOkdgn10fDzf9YeNlzY7zMuKbxI/h48vts7te
vTT8OHq3o76RfAT1ziOm30DOvXM/pD9G7vr16D3TryMfAS8FP4Ed5yXhJ+l6
9CgBP2WeF7t7XhHj2g0z/Uly3j9hvLj4WvHT5v6o/yh+Dv1onJddj1HUryQf
TfvqfxgvJj5f/Ab2J8Ffgf+F65mEfXZ9/J3pbxgvKj5X/BZ2JmNH/Xvxf9BP
pV79tvGXxWeK38XOdHgR8Rni9/F6zcA+u+sjxrWbhl8Hsns4L/f3yHn/Ljlf
zx3jhcWnY8edV49C4lPEH+E6Z2Kf3cfz4v6h8YJmx92HgmZnuukfGi9gdqZj
R32y+OOQfnLIfn7xCeJ++mBnNnbUvxaPTh88nk/9GPIF8HzwBNhZgB31UeKx
6BfCX4InRO88r/gI8cTpg9d7MfadJyL3jevOIuqHk7udPOJDxZNgZyl21AeK
p0C/gvoB5Cupd+6H9MnJXd9XPE36oFsNzy3+uXh69GvxfmbXYw31vcnXwl+E
x9GOR57eeC7xHuKZ8LzWw3OKdxfPgvuzAfvsro8Y124dPk7Z9fjJ9JnJ3X43
8nV0Pd1wnew5xDuLZ8N5N8Kzi3cUz43r/BX76u3F86LfAs8m3lY8P/ptuE52
7baaPh+5R/6S8azircULYH87dtRbiRdEv536Vuj9kL4A7sM26luSu50s4s3F
i2BnFzyz+EfiRXE9u7HPHta/TO76JuIlcN691DcWLwXfD88k/q54WewchGeE
v4rrcZ5BvKF4ebwPD8HjxBuIv5Y++H3jw7ge9rC+Arnr66OPmL4++khIX8Fc
v3o9cu7fFK+M+3CMevVKxtNT78N943ocNX0l4+nE64hXoR090sKr4nm5fXYf
OxHjehwxfRVy3q9sPI14NfGa2D8FTw2vhes5hX31N8Rrh/RvoGdPJV5VvA52
TsNTwt/E6+48BfwtvH9O47zqVcTrUh+BVxSvh/2z+PlN/XXx+ries9RXEG8A
P0d9efGGuD/nqC+P3rlPXt94cup92kludv6gvlzIfjJ4Q9rxyBsYTypeVrwR
7sN57KiXFG+C/hL1JcgvU19cvCmu5zL1xcivwF8QLyLeHDs3sKNeQLwV+lvU
5yf/G55EPIf4Z9h5BH9ePKt4VzyvJ9hXzyTeA72X7H+9enfjicXjxHtjJypZ
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
uP4dnvhw3/izz18yfWNy37h7fblvZDy+2XEeT7xMXPB3jfh61PXvHjU11++8
CbnrS6F39yFiPELX77wJecS4e59z/755/6sXx776Seqde+b6i2OfPSo2+DuF
rbBzHjvq+ncx26C/AI/EBn93sx36i9hRz0t+ifo84u2xc4n6POjZfep5Rz23
eIeQXv+u6ifwq3BPPHtc8Hdc9d+/jh11/bu5XdDfoF69s/GnMcHf2e2Knb/g
T2KCv0PcE6/j39hn18e3TN/D+L9mx/ljeC+8r25hX13/rvPndF6PvLe5Hnbf
7Mdhn/2R2XH+kM4bRf4A3gcfF+461dOL9w3p06OPCun74Lw3Tf85uW+cXxfn
vY3fNzt/YUc9Hc5r+3Qh+/fE0+J58XXeFU8dF/wd9Si6/+zufqrfEU8VF/wd
eNdHjLte//kPfCDdN/Xb8EHm/t+mPl5I73ZuUp/S7HvkA4z/TT2f92+zcxPn
ZXf3/9nzgw9C716XW2bH+U3q49Hrop6C/Cb1Kcx+xLg+vgH/Cz4Y/Q38OpZd
u+vwG/Ah6K9j54bZcT//3DDXY3t3PddMP9D49ZjgazwMoeuMGI/QedWTkruf
35wPJveN88+f18zOdexcMzvOr8YEX+tiqHkd1fVrYwyj94NHPtR8nLL7dP3O
vzJ+xey453XF7Fw3/VfGL8cEX9tjpPn4VY+JC74miE8fv+xeSD/K+CWz4z5O
L5mdm9QnMPse+SjjF2OCr3HyNfZvwy/EBF97ZiKe1wP4efh3eL0e4Lzs2t+H
/xkTfG2bydRHjNtev9bOFPhDnFf9Efkj6p37pn9Izv0D8am4D4+of4Ce/VxM
8DWBZmDnCfyPmOBrKX2P6/FSBP87uz5+Sv1tcu7/Ep+H80al+F+vPtf4Wep9
8jPw+bieKOyzP/v1Vorgf2fXwzf9PHLen2v8tLket3Pa7Ljneyom+JpYC6j3
yOebHXa3w/084ydjgq9ttgI7CeEnYoKvkbYa9ycx9tVPiq9D/wL16j8ZP059
BO4b18dJcJ/Z9Xje9D+Ru/0T5Engx8SPi6+n6/HhR9MHX8NOj6TUq28wfjQm
+Bp4m7CTDDvqh8U3o3d+JCb4Gntb0KfEjvp+8lTUO/fQqx+GbzU76r+Tp4If
Et8nvh33OTX8oPhe8Z34+SQN9tV/E9+F3vkB+G7qPfJdxvdTH4929pud1Hh9
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
iqfBeYdTr57a+BPqfbhvXI9hpk9t/F+zMww76p+LpzPnVe9NPgL+WLy7eCbs
jMGOejfxzOjHUN+V/Gv4I/EO4rmx8x122PWYaPoXjT80O84fiLcTfwmv1yTs
s7vzcp/XXI96G/F8OO8k6ttgh/0+9T75PXh+cz3qrcULhPStyCfD78ILYmcy
dtQ/Fi+Mfgo+jtRbiBfBdU6hvgV65x55IeN3qPdp547ZmWz6Qsb/EX9b/HXs
LMGOeh3xKuiXUV9LvCp8Bfy2eA3x6tj5ETvseqw0fTXjf4tXFa+NnTXYUa8k
/hb6n6hXf9P4LfGK4nWxsw476q+Lv41+HfWvo2e/KV5evD52NsL/Ei8r3giv
+8/wG/DG+Pn2Z5xXvbT4++h/wftBvZR4E+z/Qn0p9M498vdC+pLoPdOXRM9+
XfwV8Q+xsw076i+Lf4R+O/VFyHfAr4kXFG+Jnd3YUc8r3g79PurV2xq/Kp5L
/BPsHMSOek7xT9EfpD4H+SH4FfHs4p2wcxg77LbPRn4Yflk8g3hP7JzEDrse
J0zfw/gl8TTifbFzFjvsepwxfR/jF8VTiPfHzp/wC/ABeF/9iX12fXwO7zd2
Pf4wfX9y3v/S+Hnx+OJfY/8WdtSjxMei/5t69W+M/0m9D/fhnvgE9P9Q/ySN
530Lvws/J35PfDp2/oX/IX5XfCbuzxPss7s+YlyPx6afQc77042fpd4nP2Ou
x+2fMdfzCH4aPgv9I+ycNjvc30Hvm/5v8dnwJ9Q79+i+qd8ifwI/BZ9jdtRv
iM9H76X6X39NfAE8Aj8JX4gd5yfgi/C8nB+HL8bPq+q+8We/TjX9IuPHzI6P
nWNmR68/Yly7pyn/b7+InPcXGj9qrsftqF81+66/Qu6l+l9/WXyJuc/OFxs/
Qj3vqF8SX0r9s58v4T9Q78EvkvvUO+edQ/BlZueQ2XF+kPoI7Rw0O+7+HDQ7
7n4eNNfj3p8HzI57P6tfMPuuPye+Ejvu/eN8hfH94kfEN2EnEa6fXY/nTL/R
+O9mx/k+8d/Ft+H+JMW++j7x7eiTUr8PvR/Sb8N5XzD9VuN7xXeK78FOKuyo
7xD/DX0q6negZ/9NfLX4Gezkwg67HjlNf9r4HvGV4uewkxu+G/4n7k9u7Ksv
F7+APg/16ufJfeMe7ewyO+686stC9neK/yB+CdeTF75DfKn4Ffz88xL22V0f
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
1el/8M/5KXyueoZ0qltnsuxfhf/J52r/FfGpsk88Stn/YV4NPg/+Nzsz2Ak+
F36U+xmyn8u9+sWy187F1plu+7/Nq1pnOjtVrTPN9n+bV7FO4pXpx/iep7Gv
nrzPDPPkven+qL3P4HPEp9IrwZ+H/8v+THaCT4ef5v4F2Qc/ZV4RPg1+hp1Z
7ASfCM9aPnM3T/bBs5hXkH1Mj+nj4Tm4f1n2wbObl4c/DT+bnVfZUQ/nFdvn
NC8HHwfPy84CdtTDmS/7x8QX0MvCH4Wfy84b7KiHs9D2+c0vss5CdoKPgZ+X
sh8t/gb9QnoBuU84ZegFy2f+OkvuqR5LP/gocd0/Ai9kz028oHlp+Ej4+ews
Yif4cHhR7t+S/TDxxfRS8IfgF7CzhB113w8VX0IvCb8ffhE7K9gJfh+8LPcr
ZH8f9+ol4PfCy7Gzkp3g98DLc79S9vdwr14cfje8Ajur6BfQK/LntYr94HfB
L+b+fdkHryoem4ezxvZVzItZZw07xayz2vZVzIvC+8Cr2X3U9bmJX2xeBN4b
Xt066ml7758P7wivx85n9MLw2+GN+J6/oheiX1k+899Pv+Jzg7eFX5Wyb8t9
hu1v4z6mZ9DbwK/mPXXfhvvI+m3YVy8Iv5Wd8Pd/zU7w1vBruP9a9q3luYkX
kL12CljnK9tfbX6edRI/F34j/Hq+n03sq4fPG21/nXiyb8V9ZPtW3Kvnh7eE
38BO8lz1tL3388FbwJtKJ5y89GbyvcI5h96cv36S56pnsJ9hHnYbbN9MXPtN
U/bN2NH7J97MPI/s9T3nsc4G2zczz22dxHPRW/D7JvdUT3696b65/TrMZff5
yvbNzM+GN4C3Z2cHO+rhbLd9O/Oc1tnOTvB68I7cJ/0c8MvgnbnfyU7incRj
86Sj+47m2eG14V3Z+Yl+FrwWvDvf82721ZN9Bv1SeA/2f5L9pdxH1q8p+z30
bPBq8D7s72Un+MXwO7nfK/uLuVfPCq8C78vOfnaCV4b3436/7Ctzr54FXgY+
kJ2/6Bnw0vDBfD+H2VdP2w8Sj83D+dP2A81j6/zJTmydP2RfKqUfwYvDh7Jz
hH4mG/69HD6M3+tv9tXT9g+Jx+YR34/uh5qfhheBj2DnKDvBC8Mf5v6Y7IOP
ND8FLwR/hJ3j7Kin7b3/Lzw/fCw7/7ITPB/8Me7/lX0+7tX/geeBP8HOGXaC
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
saMe8Z66v9i8DLwnvCY769kJ3h1+KfdfyL6b+Jf00vRa7CReil6bv7++ZF89
ln7wruK67wyvy+d+JfvgdcxLyj6mx+Z6/+CdUvol4B3g9dnZwI56OF/bvp55
cXh7eAPrqKftvX8BvBX8ena20YvBW8Cb8T3vYF89fN4u+2bw5vSdsk88Ykf3
zcyLWifxIvCm8Ja8T9IPfgO8lTw3Em9p9wl+PfeR7a/nXv18+HXwG9nZRS9M
v4n32cV+8GvhN8s+wzyS+yR+k3kh6yT3KSR79YLwJvBb5D7hFKC3rpT5ny+S
e6on7zPDPHn/yb6x+E7pN+Zz9T2r68838ZvNz4PXg3dk5wA76uHst30H83Ot
s5+dc62zz/YdzPPDL4H3YOd3dtTD+c323c3zwavA+7LzNzvq4Ryx/V3meeGV
4f2so57sg59D78990jnHOonngVeCD+Cvh7/puel389dP8lz1DOnkts4R2w/g
cw/bvr94sq/IfWT7CuLJc3PBi8OHsnOGneCF4I9wn+2C/9sXFD+LfjY8P3ws
O2fTc8Lzwcfxe+W6IPNfV0/bPyYem/+3s/1Y8xzwXPCn2DmHneA54c9wn1f2
wZ82zw7PCp/ITgF2gmeBT+K+gOyzcK9+Fvxw3ih6iZ2L6Nngf8Ff4fspy756
2v5l8dg8nAtt/5J5Vvgh+Hx2KrAT/Ff4Au4ryP6geEV6FvpCdiqyE/wA/A3Z
B8+gvyn7SPwN6wT/Bb6YnSqyD/6WeQzfA3+bnYvZUQ+nqu2XmEfwLfD32KnN
jno4tWy/yvxM1v/tJH6avpo/91rsq//3n4dt/554sv+R+8j2P8o9Ez8F/wG+
Ru4Tm6ftvf8v/Fv4R+zUZUc9nDqy3wRfS7+M/g98A/wTduqzox5OPduvMz8J
/wr+GTsN6Cfon/M9N2A/+Jfw9Sn7L7mPU/af87n1bf+Z+XHrJN8r+Bd8ru+/
SOkfg38G/4qdhuwE/wS+gfsrZB/8a/Ojso/psXnEvu6/Nv/bOsl9gq+Db0zZ
r0vpH4GvhX/DTiN2gr8P/577q2UffLP5YdnH9Ji+Gv4j99fIPvgP5n/Bl8J3
s9OcHfVwmtH/pO/hPniGeThNZf+2eDM+N/Hd5n/IPhb/Hb4Ivp+/nluxrx4+
t7T9PvHYPJwWtt9r/hv8TevH9IXwg9wn9zkEXwA/xP2NfD/qaftfxSPxg+a/
wl+D/87+zeyoh3OT7X8zPwifCf+HnQ7sqIfT3vYnzQ/AJ8GzVM78+7uzE/xZ
+FmVM3c9ZR88m/l++FPwXOzcxU7wJ+B5uO8r++C5zffJPqbH5hH7us9tvhc+
Bn4eO/ewox7O3bY/1/wX+FB4cXaG0H+ml6ic+etjCPvBh8BLpuyHcB+n7Evw
uQ/K/kHxpLMHPhheip2h7Kin7Uua74YPhJdh5yF21CP2k/398Avpw+g/we+D
l2VnODvB74WX43647O/lXn0X/G54BXZGshN8ALwi9yNlP4B79Z3w/vBK7DxM
30GvzJ/Xw+yrx9IJ3k9c94lHKftK5tutk3yv4HfBq3L/sOyDVzHfBu8Nr87O
aPpWeC94TX6vMeyrp+1rmG+xTuI/0i+pnPmfB0ezrx72o/jnpHrYPWL7muLa
r5Gy78l9ZPue3Kv/IHvt/GCdh21fw/x7eHf4peyMYid4Z3hd7h+VffA65pvh
HeD12RnHjno4j9m+nvl38Dbwq9h5hh31cJ62/ZXm38Jbw69hZzw76hH7ur/a
/Bt4S/gN7ExiRz2ciba/3nwTvDm8GTuT2QneFN6C+ymyD97cfCP8OviN7Eyn
b6DfxF+f09kP3gR+C/czZB/8ZvFk35j7yPaNuVf/Gn41/FZ2ZrKjHs7ztm9t
/hX8cng7duayE7wevCP3L8o+eAfzL+G14N3YeY0d9XBetX1X8y/gl8K7Syec
9fQefM9JXz1mJ8M8nFds311c+93MP4fXhPe07xW8Orw396/Lvpr4fPpn8Krw
u9hZyE7wKvC+3C+UfRXu1T+FV4L3Z+dNdoJXgN/N/SL6J/R7uF/Ezieyj21f
Fn4fO4tlf5H4Evo6eCn4YHaWsaMezju2H2T+MbwEfAg7y+lr4cXhD/Hn/i77
6mn7oeKxecR76n6I+UfwgvBR7KxhJ3gB+Gju18j+PPH36R/Cz4Y/zc5n7Kj/
93O1/VPmH8BzwMez8zk7wc+CP8v9etkHn2D+PjyGT2FnA30NfSrfc+Kr6dP4
78sb+Fz1sP/a9lPFY/P//nzh71P1cL6U/ZlzMvuR9YNPNX8Pfgo+g/2N7KhH
8r0Sn26+Cv4PfCY7m+gr6S/we21iXz15bgb9JHwW+xtlf5L7xCPxmeYr4Mfh
s9n/hp3gx+BzuP9G9se4V39X9tp51zqbbD/bfLl1kvew3DobbT/bfBn8CPxF
dr5lR13vn/g883esk/hS+J/wV/nz2sy++n//fGP7V8Rj84j31P3L5m9bJ/El
dp/k+wb/DT6f+82yD/66eGweyf2D/8pOON/TF9MXsPM9O+qRPHexdRJ/C74P
voidLewE3wt/i/stsv9FfCt9EXw7fAU7e+hv0lfy/exhX/2//9xo+xXmb1hn
NztvWOcn268Qj83D2WX7d80Xwn+Ar2HnF3bUw/nZ9qvNF1gn8fn09/m9fmZf
Xd/nfOvssX1yn+T9vG6d5H2+bh3db4Z/wM4e2W9mR/012es9X6V/aD/34N/B
P5J9hrneP/EPxZP+t+LJc1+BfwNfa+/5ZfrH9p7V9T7qep+Xpa/+knWSewbf
ZP3YPErZrzV/Ef41/FP5dRjOPPhX8M/5vfayr562/8x8rnWSX+dzrfOz7T8T
j83155L4p+Zz4J/AN7BzkB31cA7Y/mvz2fAP4d+x8zt9Fvx9+A/8Xn+yrx4+
/yH7NeK6Xw3/kc/9U/aruVd/Ab4KvpWdw+yoh/OX7beYz4Qvg+9i5xj9efpP
/F7H2A/+Nvxn7k/IPvge8xmyz6DH5uHzcdvvMZ9unePsTLfOMdvvEY/Nwzlq
+93m0+BvwffK94rNI7ln8EXiyXuYSt9nHXXtTLVO4lPgL8EPs5OleOZfg8+D
/8191uL/tw9+xHwyfDb8ODvZ2VEP5yzbHzOfBJ8J/4ednPSJ9H/588rJvnr4
nMP2/4gn+6nwqErmLrfsg5+p/L/+nOxj8WfpcZXM++RmXz18zlU8819XD+ds
20fi2k/uk/gE+CR4FvbzsKOu9088w3w8/Dl4NnbOYUc9Yl/3Wc2fgY+H52An
Hzvq4eS1fXbzp+Fj4fnZOZ8d9XAKy34M/Fx6EfpT8BHwIuyUZEc9nBK2P9/8
SfgweDF2StGfoF/An3sp9oM/BC+esh8CL0EvI/vEwylt++Lmj8MHw0uxcyE7
6pH0x8EHwi/k/iJ2Ei9j/pjsM+ixefLcDHN97mPST1z7pc3H2n2STvAHrB+J
e/9R2WvnUeuUtn0Z8zHwfvDK7FSkj6ZX4fupyL56+FzB9pXFY/Nwytu+kvko
65RnZ5R1ytm+kvkj1inHziPWKSv7vin9h+F3wavafdTT9lXMR8J7wWuwU4md
4D3hNbmvJPue3KuPgN8Bb8hObXbUw6ll+8vNh1unFjvB28IbcV9b9sGvMB8m
e71P8NvgV6bsb0vpPwS/CX4tOw3YUQ+nvu2bmA+1Tn12hlqnnuxbwa+jN6AP
gTeHN2PnCnbUw2lo+6bmD8JvgLdk50r6YPg18Fv5++ta9tXD5yayv1pc94lH
KfvW5oPgV8HbWCd4I3hb7q+TffDbzAfCG8LvYOcGdoJfDm/H/Q2yv5x79Qfg
9eAd2WnOjno4zWzfwfx+eE14T3ZuYUc9nJtt38P8Puskfi+9F39eN7OvHj7f
ZPue4sm+Ory3PTfxXub3wC+G38lOa3bUI35f3fcxv9s6iQ+AV4X35fdK+sGr
wPvJc5N9ZfFbZZ94lLLva94fXhE+gJ027KhH0u9Hv1ueG4kPMO8LrwC/h9+r
Df0ueHn4fVUy/+fqt7Gvnra/Vzw21+cmfo/5nfCy8PvZSZ6rHstzE7/P3o96
lNK/17wPvAx8IDtt2QleGj6I+7ayL829em94CfgQdtqxE/wC+EPct5d98KHm
vWQf02PziH3dDzXvCS8KH85OB3oP+gi+5w7sq8dynx7WaW/74fbcxIeZd4cX
hj/MTkd21CO5Z+IjzbvBC8BHs9OZHfVwOtl+lHlX+Dnwx9npwU7wPPAnuO8h
+zzcq3eB54I/xU4vemf42fBn+J57sx88J3w89735z8/qETu6f0Y8En/avJPs
9T4dpZ8h/Y52n562f8a8AzwHfIJ0wmkPzw5/jn9uJN83eDb4JO77yD74RPFk
n5X72PZZxO+UfQZ8Mt/DnbLP4F69ney10846fWw/yfwOeASfys5d7KjrcxOf
Yn47/HSeKJrOTl921CP2dT/NvK11kvsEPwWfkbI/ldK/DX4CPoudAeyoh9Pf
9i+Yt4H/DZ/Hzr3sqIdzj+3nmt8KPwx/iZ372An+F/xl7u+T/Z/i99Nbw/+A
v8rOA+yop+1fMb8F/jv8NesEPwhfyP1g2QdfYH6z7GN6TD8AfyNlfyClfxN8
N3wpOyPoN8J/gi/j76+R9Fb05fx9OpLPVc9gJ8P8v//8Y/tl4tp/x7wlfJf1
Y/Nkn2EezjDbLxPX/jvmLeCb4R+wP5Yd9XAelf134mPpzeEfwDezM4PejP49
v9cM9tXD5+n8XurhTLP9ZnHtf2feFL4cvpP9ufQb6Lt4n7nsq4fPc3gf9XBm
236nuPZ3mF8Pfxu+h/0X2VEPZ57sl4i/SL8OvhB+kJ3X2VEP5zXbHzC/Fv4q
/A923qA3gb8MP8z3s4j94C/Bj3C/SPYvir8l+8SjlP1h88bWSZ4bfB78b9kH
v4Z+1O5zjezjlH3SedP2R8yvhs+1fkyfBT/B/WLZBz9ufhV8BvwUO++wox7O
Utv/a36ldZayE3w6/HTKfnpKv5HstdPIOm/b/pT5FdZ5m50rrLPE9qfMG8Kn
wc9YJ/hUeFT1/54b/HJ6XPX/9pF4VPV/O5dbZ4ntz9h9Glgn8frwKfCMqpm/
L5K+uu8ni+s+8ShlH5vXgz8Jz83Oe+yoh7PK9rnML4OPghdk52N21MNZa/sC
5nXhI+BF2PmUneDD4MW4/0z2wYua15F9LF6bfgHf82fsqyfP1X0xu09tu88n
ti9qXgv+ILwkO+vZUQ/nc9kPFl9PvxR+H7wsOxvol9DL8XttYF89fP7a9mXF
Y/NwvqLXtM5X7NS0ju+Tzpe2v8i8hnW+ZKeGdb6w/UXm1eH94ZXY2ciOeiTv
LfGK5tXg3eC12NnKjno4W2TfVXwr/WJ4Z3hddrazox7ONtvXMa8K7wS/zDrB
28MbcL9T9sHrm1eBt4U3YmcPvTL9Sv762cN+8NvgV6Xsb+M+Ttlfyefutn0j
80rwW+CN2dnLTvCb4Ndyv0/2wZuYV5R9TI/NI/Z138S8ArwZvDk7h9hRD+dX
2zczLw+/Fn4TO3+yox7OH7a/0bwc/HJ4O3ZOsqMezgnb32Fe1jon2ClrneO2
v8P8Ing9eEd2/mFHPeI9dd/B/EL4ZfBO1lFP23u/DLwGvBc7GSUy/6oeTlzi
f/c9zUvDq8D7snMWO+rhZKOXovfjPhs7wSuLnyX7SvD+7Jwl+4ri2ekl6QPY
yc6OunZKWifxEvAK8LutE7w8/B57buJ3mxeHF4MPY+c8+gX04fxz4zz21cPn
c2VfVFz3iUcp+2HmxeD54WPZKcaOejhFZZ9PvBi9KDwP/Al2SrATPDf8Se5L
yD439+pF4Dnhz7BTmn4+fTzfT2n21f/79SH7HOK6TzyyfXbx5LmF6ROsEzwb
/Dnuy8g++LPmheBZ4JPYuYhekD6Z3+si9oNnwKek7DO4j20fwafyuWVlH7Gj
XgB+Jjf+mZ6dcuwEPwWfwX152f8rXoF+Hv15diqwE/wf+MyU/T/cq58r+1g8
P/wkfBbfT0X2gx+Hz+G+kuyDzxaPzSN2dD/LPB/8b/g8dqqwE/wI/EXuq8j+
CPfqeWWvnbzWqWz7eebnWKcyO8EPw19K2R9O6eeB/wV/2e6jnrb3fm74Ifh8
dqrTc8H3wd/iz6sW++rh86W2XyQem4dzie3fND/bOpewc7Z1atr+TfOc8J/h
S9hJ7h98N3wp97Vlvwv+Dr0uPQd8J3w5O5exo562X2aeHb4J/jE7jeln0dfx
PTdmP/hG+Ccp+w3iTWSfeGT7r+Cf0q+lZ4N/DN/ETit6VviH8M28z83sB/8A
/j33N8v+A+5j27/PfWT7NeK30LPA34NvYedWdoKvgm/l/lbZr+JePUP22smw
TmvbbzGP4Svh26wTfDl8J/e3yT74DvPwfzxpGXwXO23ZUU/be/9MFvyahe9m
53Z21CP2df+T+Wn4G/AD7HRiRz2cjrbfb34KPh9+iJ0u9H/hr8H/4K+fbvR/
6H9Wzfyf83fjc9XDvmuJzL+qJ33d/2HPDf6qeFf6Sfgr8L/kPrF5LM9Vj+S5
if8pnvRfFk+eewI+C36C/T7sqIfT2/bHzY9bpzc7x63Ty/bHzY/BX4CftE7w
mfB/7LmJnzQ/Cp8OP83OXeyoh3On7U+Z/22dO9kJPg1+JmU/LaV/RPax+GF6
dHHmzzXpqyc/F92fsZ9X8KncR7afIp489y/4s/Cz2B/Ajno4/W2fzfxP+AR4
dumE8wc9B79X0g8+Hp4zZT+e+zhln8Oem3h289/h4+B52XmAHfVw7rf9Oea/
wR+D55NOOIfo+fm9kr56LJ1D1rnf9vn43PtkP1Y86fwKfxR+rn2v4GPg53H/
gOzHcK9+UPbaOWid+21/rvkB+Ej4+ew8yI56OINtX9h8v3UGs7PfOoNsX9h8
H3w4vKjcJ5y98IfgxfnzGsp+8KHwEtwPlf1Q7uOUfXE+d4jsh4gnnV/g98LL
sTOKHfVwHrF9WfOf4XfDK7Azmp3gA+AVuR8t+wHcq++B94VXYWcsO+rhPGr7
yua74b3h1dl5nB31cMbZvpr5T/Bu8FrsPM1O8K7w2tw/Lfuu3KvvgneB12Hn
GXaCd4DX5/5Z2QevZ75T9jE9Ng9nAn0HvQH3E9jZYR3fJ53xtq9nvh3eFt6I
nUnsBL8NfiX3k2R/G/fq2+A3wa9lZwY76uFMt30T863Wmc7OVutMs30T8y3W
mcbOFutMlf2NKf0f4a3g19t91NP215n/AG8Bb2rvR13fQ+I3mH8Pvw5+Izuz
2VEPZ5btW5lvhl8Lv8k6wRvDb+F+juyvEZ9L/w7eEH4HO6+yE7wBvD33r8k+
eDvzb+H14B3Zmc9O8MvgnbifL/u64gvo38AvhXdnZxE76uG8aftu5pus8yY7
wWvCe3K/SPbBe5hvhNeA92LnLXbU0/be3wCvBO/PzjJ2gleED+B+mewrcq/+
Nbwc/F52VtC/gl8IH8h//3qPffXweZXtHxCPzcNZKfsy4knnS3hp+CB2kueq
p+0Hmn8BLwl/kJ3V7KhH7Ot+sPl6eHH4UHbWsBP8AvhD3K+R/QXcq38OLwAf
zc4n7KiHs872o8w/s846doLnh4/l/lPZB3/U/FN4Pvhj7HzGTvC88HHcfyb7
vNyrfwLPCX+Gna/ZCZ4dPoH7DbIPPt58HTwb/Dl2NrETPCt8IvebZJ+Ve/WP
4adz4c9Hdn5gJ/gp+Azuf5D9Ke7V18peO2ut873tp5t/BD8Jf4GdLfQP6bP4
+2sL++r//fuK7I/B59C3yf4ofC6fu032R7lX/0D22vnAOlttP8f8fetsZSf4
YfhL3G+XffAXzdfIPqbH9D/hr3C/Q/bBXzZfDT8Af4OdX9gJvh/+Jve/yH4/
9+rvwffBF7Gzlx113+8V30tfBd8FX8bOIXbUw/nV9u+Yr7TOr+ystM5B279j
vgK+A/6u3Sf4dvgK7g/Jfjv36u/KXjvBt8FXpuy3pfSXw7fCV7HzGzvqaXvv
L4P/CF/Nzu/sqEfsJ/sfxH+nvwPfCF/HzlF21MP52/Yfmy+1zt/sLLXOEdt/
bP42fD38C3ZOsqMezgnbrzdfAl8H38jOaXbUwzll+w3mi61zip3F1vlX9mvh
m+in6W/BV8N/ZCdrSf5zEHwVfCv32Ur+3z74FvNFso/F36Rv45+r2dgPvhK+
XfYZ5pHcJ/Ft5m/AV8B3SCf8dSF9pzw3or8rfpbsE49T9jvMF8CXw3dZRz1t
v9PuGXwZ95Htl3GvPh/+DvwndpLnBl8K3839WbJfDP+ZnpP+Ov0XdnKyE/wt
+N6U/ZvwffRc9Nfo+9lJ/FX6Ab6fXOyrh89n236/eGyu9wn+hnjSeQX+IvwI
OwXoL9P/5n0KsK8ePp8n+7nwo/SCsk88sv5cdtRfgs+GH2enEDvqEfvJfpZ4
IfqL8BfgJ9kpzE7wmfB/uC8s+5ncq8+TvXbmWaeQ7U+az4VPhUfVMv/+YuwE
nwKPq2Xuisl+Cvfqc+CT4FnYKc5O8InwrNwXl/1E7tVnw5+DZ2OnBDvBx8Nz
cF9K9sGzm8+CPwXPxc6F9BfgT8DPqcb/eyXsq4fPF9k+j3hsHqX0c5vPhI+B
n8dORXbUw6lg+3PNn7dO4jPoBfi9KrCvHj6Xt/155tOtU56d4KPhBVP2o1P6
02SvnWnWKWf7AuZTrVOOneCj4IVkn2Eeyc838YLikXgB8ynwh+GF5XvF5pHc
M/FC5pPhw+FF7eeurj/fxIuYT4I/BL+AnUrsqEfs676Y+UTrJPcJPhRePGU/
NKX/HPweeHl2LmFHPZyati9n/iy8H7wyO7XZUQ+nlu0rmU+wTi12JljnUttX
Mh8P7wmvyU59dtTDqWf7GubPwLvA67BzBf1pel3+er6CffXwuaHt64gn+87c
R7bvzL36U/Db4Vew05id4G3hjbhvLPu23Ks/Cb8Z3oSdpuwEbwW/nvvmsg9+
nfkT8Bbwpuy0ZEc9nBa2v8H8cXhzeDPrBG8Gb859S9k34159HLwBvD07HdlR
D6eD7duZPwa/DN6Jnc7sBK8N78p9V9nXEu9GHwuvBu/DTh92gl8Mv5P7PrK/
mHv1R+GV4f3Y6cuOejh32b6v+Rh4KfhgdgayE7wk/EHuB8q+JPfqo+Hnwh9l
ZxQ76uE8Yvsx5qOsk/gj9LH8/fUI++rh88O2f1Q8Ng9nJP1h64xkJ3h+6yf7
fPDH2HlY9vm4Vx8JPwf+uL0fdX0PiY8zHwHPDX+SndH04fAc8Al8P4+xr/7f
rzPbjxePzf/7dWP7Z8yHwbPBn2NnHP0heAZ8Cu/zJPvq//25QB9Kn8r9E+wM
tY7vk87jtp8snuxj7iPbx9yrD4GfPhv/HMTOU+yoR/xeup9m/iD8H/hMdp6h
D6a/wO/1DPvBT8JnyT7DPJynZX9CXPsn2FcfBD8Gn8P+BHaCH4XP5X6C7P8W
f5Y+kD6PnWfZCX4E/mLK/gj36g/Af4UvYGc6O+rhTLP9fPP7rTONneAH4QtT
9gdT+vfJXjv3WWeq7ReY32udqezca50ptl9gfo91prBzj3Um0++mv8H9ZHbu
to7uD3Af2f6A9cMZAN8Lf0veTzj96Yv56znxfvQl1TL/9/SS96mewfeTYZ58
3yzmyX10v9jeQz+5p94/+C/iyXvuS19s7zn4Hvjb9vNNfIn5XbLXn/td1pli
+yXmd1onuU/w3fClKfvdKf0+8J/g79h91NP23u9tneQ+va0z2fZLzXvBd8GX
SSecnvTl/PWQ9NX113NP60y2/TI+d5Lt3zHvAd8Cf4+dGewE/xG+mvsZsv+R
e/Xu8O/gH7Izi53g38I/4n6W7L8Rn03vBt8A/4SdefSu8C/gX/D9vELvQv+S
v79e4XPV//v/XzZ/v6iH3Uu2/0Jc++tT9uu5j2y/nnv1zvCP4ZvYmc+Oejiv
236jeSf4h/Dv2FnIjno4C2T/gfhCekf4e/At7LzFjno4i2S/Svwtegf4Cvh2
dpbQ29N38P0vYV89fF5s++3isbk+N/i74kmnHXwJ/Gd2lrOjHs4y2+8xvwO+
CL6PnRXsqIfzru33mt8OfwX+Jzsf0tvS/+L7Sfw2+mH+ev6Qz1UP+w9s/5d5
G/jL8CPWUU/baz82D5/ft/1f4rF5OGts/6f5rdZZw86t1llt+z/NW8NnwU+w
8zH9FvpJfq+P2VcPn9fa/oR4bB7OR7Y/bn4zfAb8FDufsKMezjrb/2t+E3w6
/LR1gk+Dn+H+E9lP4179Rvh4eI7qmX//BnbUw/na9tnNW8GfhOdm5xt21MPZ
ZPtc5i3hj8PPYedbdtQj9nWfx7yFdZL7tLDOJtvnMW9unU3sNLfORtvnMW9m
nY3sNLPOBtvnMW8KHw0vwM5mdoKPghfkfrPsR3GvfgN8BLwIO1vYUQ/nR9uf
b349fDi8qHXU0/bevw4+DF7MOsGHwEtwv032wYubXyv7mB7TB8FLc79D9sFL
mTeBD4SXYWcnO8EfgF/I/U7ZP8C9emP4ffCy7PzEjno4u2x/kfk11kn8avi9
8PLVM/8cS/rqafty4rG53j/xsuZXwe+xfmyetvf+lfC74RWsE3wAvKK9h8Qr
mDeSvXYaWWen7SuYXwHvD69kHfW0vfcbWif59dPQOjtsX9H8cnhfeBW7T/A+
8Grc75Z98IvNG8g+Fq8P7w2vwV8/e9hXT9tXN68H7wWvaR31tL32Y/NwfrJ9
dfPL4F3htdnZy456OL/YvpZ5XXgn+GXs7GcneEd4Pe73y74j9+p1ZK+d4B3g
9VP2HVL6teE3w5uwc4Qd9XAO276xeS14K/j17BxlRz2cv21/nfml8Mvh7djJ
USrzr+rhZC/1v/s7zC+B14J3YycvvSa9O3/95GVfPXw+x/bdxGPzcPLYvqt5
DeskXh1+Cbyn3Udd75N4D7uPepTS725eDV4d3pudfOwErwbvw30+2V8snp9+
Mbwq/C52zmVHPW1/p3lVeHn4PewUZid4Ofi93BeWfTnu1avIXjtVrFNI9mVT
+pXp91lHXTuVrZN4JesUYqeSdQra/l7zivAy8IHsnM+Out4/eGnx8+kV4CXh
D7JTlJ3gJeBDuC8q+xLcq5eXfSxejj6Uv56Tvnr4XMT2Q8STfTH4MD63GL0s
fTj3xdgpK/vY9kXgI9i5QPZF2FG/SPYxPTZP7qP74eYXwgvBH2GnBDvBC8BH
c19S9ueJl6KXgZ8Lf5Sd0uyop+3HmJeG54Q/w05FdoLngI/nvqLsc3CvXgqe
Df4cO1XYUQ+nsu2fNS8Jz4BPZudidtTDqWr7SeYlrFOVnRLWqWL7SebF4RF8
qt1HXZ+b+BTzC+Anc0bRC+xcwk7wE/BZ3F8i+xPcqxeDH4PPYacWO8GPwudy
n3hR+jzZR+JzrVPUOpfafo55Efhe+FvsXM1O8J/hS7i/RvbBF5ufL/uYHtP3
wN9O2e9J6ReG74YvZacxO+ppe+8Xgu+CL2OnCb0gfTn/HGvCvnryXN0vMy8A
3wl/1zrqafvl9r3U9f6JLzM/D74B/gk7N7OjHs5Ntl9nfi78S/jn7LSm54ev
h3/J79WGffXw+Vbbf2Gezzq3spPPOuG5Gebh3GL7L8S1v948r90n6QT/3PrJ
/jPx5D2cA18L/4ad29lRD6et7TeZ54F/BP/WOuq+/1D8dnpu+AfwzezcwY56
2v4781zWSfxs+vf8eSX3VI/lnmdbp63tk/vcZvvvzHPC18B/sPcTfDX8R7t/
4j+Y54CvhG9jpz076uG0s/1W8+zWSfws+na+n3bsqyc/F91vs5/XWXaf222/
1Twb/B34T+x0ZEc9nA6232We1Tod2Am+FL47Zf+2eEd6FvoeuU84GfSf+X6S
ewZfDN/LfadSmf+6epSy/8Wem/jP5jH8DfgB9ruyox5OF9vvNw//jxkL4L+y
040d9Yh93R80P4MvNx9+yDrBX4f/xn3ip+m/yz7DPOnr/jd7buKHzE/JXt/P
Ket0sf0h83/hL8KPsNOLHfVwetr+sPk/8Nnw4+zcyU7wWfAT3N8p+xfE76Kf
hM+An2KnPzvq4fSz/b/mJ6yT+HH6af567se+evjc1/anxGNzvf9xu0/ix+DT
4GfkPrF5JM9N/LT5UfgkeJYamX//3fS/4RPh2Wpkfq972FdP22cVj83DGWD7
LOZH4E/Cc7MziB31cAbaPpf5YesMZCf44/BzuB8k++B5zP+CPwbPx86D9D/p
+fl+HmRfPXweXCrzX1dP+sl+rPhg6Y+Bn0sfQv8DPhJ+Pvsj6L/Ti/A+I9hX
D5+H8z7q4Qyz/fni2i9s/ht8OLyo3CemD4MX436E7Idxr34IPhBehp1H6b/S
L+T3epR99fB5jOwfEE86B+kXWUddOwetM8b2F/L+o21fxvwA/B54eXYeY0c9
nLG2L2e+3zqJ76NX4Pcay766vod91nnU9sl9xti+nPle+AB4RbvPL/C+8Kq8
z+Psq4fP42xfRTw2j/jedF/Z/GfrJO/5Z+uMtX1l8z3wXvAa7DzJjno4T9i+
uvlueE94Teuop+29/xO8O/xSdp5iRz1iX/eXmO+Cd4PXso562t77O+Gd4XXZ
eYYd9XCetn0d8x3WeZqdHdZ5yvZ1zLfDO8Evs07wdvDLuZ8g++ANzLfB74A3
ZOdZdtTT9t7fap3Et8Bvhzfi74ukr562v0I8Ng9nvOzbiiedH+Et4E3ZeZ4d
9XBm2P4G8x+sM4OdH6wz3fY3mH8Pbw5vZp3gzeDN5bnBN9Nb2P47eku+z+Se
38k+w/ZNuU86GebJPXXfwu6feHPzb+HXwW9kfyY76hHfv+5bmX8Dvwbemp3Z
7KiHM0v2V4vPpm+i32odde1ssk7iG+FXwm9jZw47wRvB23I/R/aNuFffAG8I
v4OdeeyohzPX9rebfw2/HN5OOuF8Ba8P78if+0vsq4fPL5bK/NfVI7lP8Hri
L0o/eAfzL+E14T3ZX8COejjzZV9DfAH9C3gVeF923mJHPZxFtr/LfD28Mryf
dYJXgvfn/i3ZV+Je/XN4RfgAdhbTP4OXhd/P9/wO++rh81LZXySu+9LwQXzu
ctkHH2j+KbwYfBg7q9lRD+c92z9k/ol1El9HH87v9R776uHzKtkXFU86H9NH
WEddOx9bZ5Xth/P+K20/zHytdVays9Y6K2RfJKX/ETwf/DF21rKj/t/O9mPN
P4TngT/Bzjp2gueEP8P9Z7LPIf45/QP46Rz4c5adb+nv02fwPX/Lvvp/f27a
frp4bB7OJttPM18DPw6fzc4P7KiH873tZ5mvts737AQ/Cp/L/Q+yDz7H/D34
7/DX2NnJjno4O2z/qvkq+B742+wcYEc9nP22X2K+0jr72VlpnX22X2K+wjr7
2Flhnb22X2L+Lnw3fKl11NP23l8O3wF/l52D7ATfDl/B/UHZb+defRl8G3wl
O7+yE3wrfBX3v8p+K/fq78C3wN9j5xA76ml77y+1TnKfpdY5aPtV5m/Df4Sv
to562t77S+DfwT9k53f6YvpH/P3+O/vq4fNvtv9QPDaP+N50/4H5W/BvrR/T
v4Gv5f432X/Dvfoi2WtnkXUOyX5TSv9N+sfWCb4Rvi5lv5F79Tfg6+FfsHOE
HfVwDtt+vflC6xxmZ6F1/rL9evMF8HXwjewcY0c9nKO232A+H74W/g07x9lR
j9hP9h+JH6e/Dn8f/j07/7CjHs5J2a8R/4f+GnwFfDs7UelMf5W+g7+eg8fm
4fOZUv+73y4em4dzWvbviiedV+g7rKOunVesk/jL8OXwndYJvgy+y56b+E7z
l+Bvwfeyk43vQT2crKX/d/+L+Yvw+fBD7JzNjno4OW3/q/k8+Evww+zkZUc9
nHNs/5f5XPhM+D/sFGIn+PPwf7kvJPvnuVefA58OP83O+eyoh1PY9qfMZ8Mn
wzNqZv79xdhRD6eo7WPzWfCJ8KzsXMCOesS+7rOYvwCfAM/OTgn6THqOmpm/
L0qwrx4+F7d9dvHYPOI9dX+W+fPwp+C52ClFn0HPzfuUYl89fC5p+1ziyf5J
7iPbP8m9+nT4aHgBdsrTp9EL8j7l2VcPn8uV5n8PWDycsrYvIK7988ynwkdZ
P6Y/Ai/EfTnZPyLPTXwKfCT8fHYqsKMeyfdNvLD5ZPhd8KrsNGAneC94De6v
kH3w6uaT4D3gl7BzJTvq4TSyfU3zifCu8NrsXM1O8C7wOtxfLfvO4tfQn6PX
ZecadtQj6T9Lv0yeG4nXtfsE7wivZ88N3kG8MX0CvD28ATtN2AneDn45901k
34579fHw2+FXsHMdO+rhXGv7hubPWOdadp6xThPbNzR/Gt4W3sg66ml77z8F
vwHekp3W7AS/Ht6K+9ayv5579SfhV8JvY6c9O+rhtLN9G/Mn4PXhHdjpwo56
OJ1t3978cfil8O7s9KKPo/fgnz+92A9+Cbyn7DPMw+lp+x7ikXh388fgleH9
2O/Pjno4/Wzf13ws/CL4/ezcT3+U/gC/1/3sq4fP9/F7qYdzr+wvFL9P+hfy
uepj4CXgQ9gfzE7w4vCh3A+WfXHu1UfDL4A/xM6D7AQvBh/G/YOyL8a9+ijZ
a2eUdQbb/iHzR+D54WPZeYT+MDwffBzf8yj21dP2j4nH5v/tbD/WfCT8HPjj
7CTPVY/kuYmPMx9hneQ+I6zzsO3HmQ+HZ4M/x87j7KiHM872z5oPs07iD8Gz
wifxPSd99bT9RPHYPJzHbP+c+VDrPMbOUOuMtf1z5kPCpeFT2XmCHfWI30v3
U8wftE7yHh60zjjZn86Ofw6iP0EfDP8HPpOdp9kJfhL+AvdPy/4k9+qD4Cfg
s9h5hp3gR+FzuZ8g++BzzAfC/4bPY+dZdtTT9t5/wDoT2HnAOuNtP9f8fvgR
+IvWUU/be/8++F/wl+17qev9E3/J/F74Ifh8diazox7OJNu/bn6PdSaxE/wg
fCH3k2UffIH53fAD8DfYmcKOetre+wOsk3yvAdaZZPuF5v3h++FvWkc9be/9
fvA98LfZmc6OejjTbL/EvC98J3w5OzPZUQ/nedsvM78LvgP+rnWCb4Ov5P4F
2QdfYX4nfAv8PXZms6MezizbrzLvA/8O/iE7L9J70z/in88vsq8ePs+z/Yfi
yf5b7iPbf8u9ei/4Rvg6dl5mRz2cl2z/sXlP+NfwT9l5hZ3gX8E/4/4V2X8p
/iq9B/1zdl5lR107PayTeHf4x/BN7LxJ70b/hu/5TfaDr4V/m7Jfy32csv+G
z33D9pvMu1rnDXa6Wmeh7TeZd4F/AN/MziJ21CO5f+LfmXeGvwffws4SdtTD
WSz7VeJL6J3oW62jrp1O1km8I3wJ/Gd2VrKjHs4K2+8x7wBfDP/FOuppe++3
hy+EH2RnDb0d/Vf++lnDvnr4vLo0//f9xcN5z/YHxbV/wPwOu0/SucM6q2x/
wPx2+CvwP9n5kB31cD6w/R/mba3zATttrfO+7f8wvw0+F36UnY/pbejH+J4/
Zj/4HPhx2WeYh7PW9sfEI/Gj5rfCp8KjSzL//i/ZUQ/nC9lPEf+S3hr+NPxs
djbTb6HnuiTz3pvZVw+fv7P92eKxeTjf2j6n+c3wcfC87PzITvDH4Pm4/1H2
j3GvfhP8Ufi57GxlRz2cLbbPb34jfDS8ADvb2Ak+Cl6Q+22yH8W9eiv4w/DC
7OxgRz2c7bYvZN4SPhJ+vnTCaUEvwp9X0lePpdPCOtttf77dP/gI8aTTHD4Y
Xoqdn+nN6KV5n5/ZVw+f99i+lHhsHs5u25c0bwofZP3YPG3v/Russ5udG6zz
k+1LmV9vnZ/YCf4A/EJ7buJlzK+D94Bfws5hdtTD+cv2Nc2vhXeHX2qd4F3h
tbk/IvvgtcybyD6mx+YR+7qvZd7YOsl9gneG17XnJl7H/BrZ632usc5h29cx
vxp+B7whOyfYCX47/AruT8j+du7Vr5K9doK3hTdK2bdN6V8Jvw1+JTsn6Y3o
V/H310n21WPpNLLOCdm34T6yfRvu1a+A3wJvzM6/7AS/CX4t96dkH7yJeUN4
c3gzdjLKZP41eDN4c+6DJ/um4lnol8Ovht/KTi521MM52/atzRvAr4Dfzs45
9PrwhvB2fM952VdP298hHpuHk8f2t5vXgzeAt2cnea56JM9NvJ35ZdZJ7hO8
PrxDyr5+Sr8u/DJ4J3bysaMe8Z6672heB14H3oWd/OyoR+zrvrN5bXhNeE92
CrKjHk4B2/cwrwWvAe8lnXAuhVeD38mfe2H21cPnQrbvY36JdQqxc4l1Ctq+
j30vdb1/4r3Na1qnADs1rXOe7Xub17DOeewErwq/y56b+J3m1eGV4f3s/VSj
97f3o67vp5p1Ctq+nz038b7mF8MrWT+mV4QP4L6g7Ctyr14VXgj+CDsV2Ale
ED6K+wqyL8i9ehXZayd4AfjolH2BlH5leBb4JHYuY0c9nLq2n2heCX76rCia
zs7l7AQ/BZ/B/eWyP8W9ekX4SfgL7DRiJ/gJ+CzuG8n+BPfqFeDH4HPYuYod
9XCutP1s8/Lwo/C51lH3/d/iV9HLwffBF7HTkh31cFrIfq94S3pZ+C74MnZa
s6Mezi22f8f8Ivg2+Ep2bqNfSF/F31+3sa8ePrcpk/mvB98Kf4/9NrLfyn3i
kfhK8zLwH+Br2L+dneDfw9/n/nbZf8+9emnZa6e0ddrafo15KfiX8M/Z6cqO
ejhdbP+ZeUn4F/D11lFP23u/BHw9/AvrqKftvV/cOl3YKW6dzrZfb34BfB18
Izs96MXom/jrpwf76uFzd9l/LK77xKOU/Ubzotbpzk5R63ST/dqUfhH4B/DN
7PSin0//nt+rF/vq4XNP228Wj80jeW+Jf2deGL4a/iM7vdlRj+Seif9gXgi+
BP4zO/eyox7OPbJfLH4vvSB8IfwgO4PYUQ9noO0PmBeAL4D/ah31tL33z4PP
gR9j52F21MMZafuj5udaJ/H89OP8uY9kXz18HmH7Y+KxeTjDbX/UPB98tvVj
87S99/PCp8HPsDOGneBT4dGlmbsxsp/Kvfo58MnwjEsz//6x7KiH86jtY/M8
1nmUnTzWGWP72Dw3fBw8LzvPsqMezgTbn2OeCz4KXpCdKeyohzPZ9gXMz4Y/
Ai9kHfW0vfdzwkfCz2dnKjvqEfu6L2yeAz4cXpSdaeyoR+zrvoh5dvhD8AvY
mc5O8KHw4txPl/1Q7tXPgg+Cl2bnBXbUw5lp+1Lm2eB3wyuw8yI76uHMs315
86zWmcdO8P7wSty/KPvgFc2zyD4Wz4D3g1e5lP89TfbV0/aV7Xup6/0Tr2Qe
Wyf5XrF15tq+knm4dF+5Z9IJfhe8qj038SrmZ/A39YFXYyd5D+r6PhO/2Pw0
vBu8Fjuvs6Mezmu2v9T8FLwLvA4789kJ3hlel/v5su/Mvfq/8I7weuwsZCd4
B3h97hfKvgP36v/A28EvZ+dNdoLfDr+C+0WyD97Q/KTsY3pMvw1+JfdvyT54
I/MTso/pMb0N/KqUfZuU/nH4zfAm7CxlRz2ct23f2PwY/Cb4tdIJ5yj9Ov7+
SvrqsXSOWifxv63zNjt/W2dJmcx/XT2cxba/Vlz7TcyPwG+0fmyetvf+YXgr
+PXWUdd7/oX/T0t4U9lH4jdYJ3gL7iPbt+Be/U94c3gzec+xedre+39YJ7nP
H9ZZLPtmKf3f6c2to66d362T+G/WSd7nb9Z5y/bNzA/BG8NvYWc5O+rhLLP9
zea/wq+Bt7ZO8Kvht3K/XPZXib9LPwi/En4bOyvYUU/btzE/YJ132TlgneW2
b2O+H14X3pmdD9gJXgfehfsPZF+He/V98Nrwrux8yE7wWvBu3Ce+l95d9hnm
kdxnr3WS5ybe1fwXeCV4f/a/YEc9nPW272f+s3XWs/OzdT63fT/zPfBy8HvZ
+Yod9XC+tP095rvhpeCD2fmGHfVwNtl+kPlP1tnETvCS8AdT9iVT+rtkr51d
1tlo+8HmO62zkZ3gJeBDUvYlUvo74OfDR7LzPTvBC8Mf5v572RfmXn277LUT
vBD8kZR9oZT+NnhB+P9r6z7Afa77P45/jj2ydRtRZiozKyurkj0qO7RsGkYi
FSoU2bO7ZRSFFuEcLYkIla1UJJtUyEF193+/+76+1//ldX0/13Wu+/bo5fn7
nmOd8Tu/3zPofIsOe9Je+9+bZzefgs4hdNj//fWW/WTxfdL5GZ190jko+8ni
35lfyGwfA6NzFh338+YLsD9He/f54t/SPgWeIh7Q5/188b3Sia9nr3TOyH6+
+B7zM+aL0DkP320/+M38LbzfcgF9dv9xuuzfJE8RDwn9xeK7pHMenV3S+UP2
i8V3mp8yX4bORXTYA71eO+BvY38BnR3S0X3cSZf9UvHt0onfPu4ncbu6P5nQ
32Z+wDwVnQylI//GfrDffA1+vTKWjv47e9I+jTxF3E+K7FPFvzb/Ufop4kl7
7X8lnRR0vpJOkH2a+FbpBHS2SuefUpfv08S3mO81X4tOZnTY/WQqffn+U/HN
5jvN16OTDR12P1ll/7n4l+Y7zDdIh13328mzwTeZbzHfik5udNj95JL9FvGN
5hvNt6GTDx12P3ll/434F+ZfmG+XjvsG8x3Y56P9BuzZN9CeO+7rzXcm7Ncn
9Nebf2a+B52C6LD7KSD73eKfS6cAOp9LJ7/sd4uvk05+dNZJJ5/sd4t/Zr7W
fK902JP22l9r/on5d/J6sfP1x/6t+KfmqeYH0CmMDrufQrLfL/6J+Wrzn6TD
nrTX/sfmK8wPo3MVOux+isr+kPhH5u+bH0WnGDrsAX3eHxH/UDqxr4Efw9/z
8XWyp9D1rJFO7GnSKYpOmnSKyP4oeYp4wNuf90fEU6UT/3qlSqeQ7I+IrzZ/
x/wEvV4p4oGuP/bj4qvM3zL/FZ2r0WH3U1z2p8VXmr9p/pt02JP22v/AfKH5
H+iUQofdT0nZnxNfYT7fPB2d0uiwB/R5f158uflr5hfRKYOO+yvmf2Jflvbu
l8TfN3/J/G90yqHD7uda2f8l/p75LPOMNaKfXwEddj/lZZ9B/F3zSeY50amG
DrufqrLPIf6O+QTz3OjUQIfdT3XZ5xJ/23ykeXF0bkGH3U9j2RcTX2Y+1LwM
Os3QYffTVPalxZeaDzEvKx32pL32l5gPNK+ATht02P20ln158bfM+5tXQqct
OuwBfd5XFH/TvKd5dXTao8Pu5y7ZVxNfbH6/eU10OqDDHtCP9/eRd4AvMu9u
XhedLvA34PVq4PlB0Gf3H3eWfV3yFHE/nWRfR/x1807mjdDpjg67n26ybyi+
0LyjeWPpsCfttb/AvIP5LdJhT9prf775Xea3odMDHfd25k2xv5f27reLzzNv
a94MnfvQYU/aa/818xbmrdHphQ67n56ybyX+qnR6ovOqdB6QfSvxV8ybmbeV
62Hn2429jfjL5o3MO6EzEB33huadsR9I+4bYs79kXt+8KzoPocPu50HZdxH/
r3kd8x7oDEKH3c8jsu8u/qJ5LfN70RmMjntN8/uxH0L7GuRD4XPNq5r3Rucx
dNj9DJN9L/E55lXM+6IzHB32gD7v+4jPlk58PbOlM0z2fcRnmVcy7y/Xw863
G3s/8ZnmFc0HSIc9aa/9GeblzR9EZwQ67AF93g8Un25+g/lD0mFP2mt/mvn1
5g9Lhz1pr/2p5uXMB6HzOHyK/eBa8yH492Ik+uxJ+8HkKeIB18n7QeKTzctK
P0U8aa/9SdKJ3z6TpDNc9oMTPJf5BPhU+AvmOcwnoz8DffZ/f/1kP0l8onSm
ozNROtNkP0l8gnlW82nozESHPeA6eT9V/HnzLObTpcOetNf+c/6TzOei8yI6
7H7myn6O+Hjzi5ns3yt0XkOH3c+rtL9A/hp8nPkf5gvRWYAOu5/5sl8gPtb8
d/PF6LyBDruf12n/G/kb8GfNfzFfis6b6LD7WSz7JeLPmB81fx+dt9FxP2K+
HPu3aX8Ee/anzQ+Zf4DOu+iw+3kHPga+Evt30BkjHd4fNF+Fzru0P4gO+2jz
Xeafo/MROux+PpT9OvFR5jvMN6DzMTrsAX3erxd/yny9+U50NqPD7udL2e8Q
f1I6X6LzpHQ2yX6H+BPmn5vvoo6fkfaDdeZ78Pd2fJ3sSfvdcj3sfLux7xJ/
3Pxj833ofIWO+0fm32P/Fe0/wp59BO25M0I6W2W/T3y4ear5AXS2wR+D/4S3
zzb02f3H35SO/ju7n69lf4Cc+/vFh5m/Z34M/T3osPvZLfuj4o+aLzX/BZ19
6LD7+Y72S8j3wYeazzdPR+cQOux+fqb9PPJD8CHmr5lfROcwOuyB+oPhl+h2
A/lFuZ7B0vlZ9hfEB0nnZ3QGSeeg7C+IP2L+kvnf6BxBhz3g9eX9X+IPm881
DzWjn38MHXY/R2X/T43L/SHzWeYZ0TmBDruf4/AH4ZmwP46O+0zyE7SPPSTs
M4oPNJ9mnhWdU+iw+zkp+yziA8yfM8+Lzjl02P2clX0e8f7m483zScd9nHl+
7M/Rfhz27P3Mx5gXQuciOux+Lsj+P+J9zUebF5YOe9Je+32kcwGdPtJJl30h
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
uN9XaRd8FrwpfDf6s9Bn9zNT9rvEbw/RfYa+RWcOOux+Zst+r3gT6cxGp4l0
Zsl+r/ht0olfr9ukM1P2exPc7+vzPXwu+Wp7OQB/mdzv23EIPg9+a4juG3EM
17MQ18PuZ4Hsj4rfEqL7RhyXDnvSXvvufl+BU/BF8MYh+tr8r+i/iT67n8Wy
Py3eSDqL0WkknUWyP53g/jX13+FvkfvXns/Bl5HPs5d0+Lvk/rXPS/Dl5P41
wr/hK+ENQ/S1ulAnuu7VuH52P6tk/0/ty71BiL5WlyId9qS99uuH6GtpGdFJ
RYc9oM/7DAnuX+vKDF8DvzlEX4vKiv6H6LMn7bMkuH/tJzv8Y3L/2sYV8LXw
evBcuN21uF12P5/K/grxuiH6mkdu6bAn7bVfRzqfolNHOp/IPpe4/zbwr53k
kQ570l77/uU8/5pHPnm92Pn6Y8+b4P41hgLwdXD/Nhb/msGV6H+OPnvSvqC4
P5yLf06/EDrr0WEP6PP+P+L+cOKj7KUIOhvQYQ/o876wuD99nn8uvqh02JP2
2nf3z1kXg28kH24v18A3w6uF6HOvpXC7W3G77H62yL6keFXpbEGnqnQ2y76k
+I3S2YzOjdL5UvYlxatI50t0qkhnk+xLileWziZ0Kktno+xLilcK0eeUy9D1
+KkIL1sn+rgvvk72+HZ5X0auh51vN/bS4hVC9LnmstJhT9pr390/t1tOfh3L
w6+TX0f2QG+H8tKJ/YYQfQ73eumw6/4h8s3k/jnW8vCt8OvhFeT3P7ufLbIv
L35diD6XWlE67El77ZeTTvznqJx0Nsu+QoL751Iryevr7p+7rAL/mryXvVSF
b4P7//jn/qrjerbjetiT9tUS3D9nVwO+A+533/HPwd2E/k702ZP2NcX9YSzu
tZda0mFP2mvf3T9HVhu+C14aXgf9XeizB9wu72uLl5JOfJ2lpLND9rXFS0pn
BzolpbNd9rXFS4Toc3x1pcOetNf+NSH6XF496bAn7bV/dYg+l3ezdNiT9tp3
98/B1Ze3f3F4A3n7s/Pbubh02P1zag3l94m7fw6rMXwPuX/O6Fb4t+T+uZsm
8H3k/rmSpvAfyP1zFs3h++HF4C3weu3H68Xu50fZNxe/Sjo/onOVdH6QffME
989ZtJTrLBqiz0G0Rv8A+uxJ+1biRaQTv75FpPOj7FsluH+uoQ38ALwwvK1c
JztfT2HpxF5IOvF1FpLOj7Jvk+D+OYh2cp3u/jH8nfCD5P4xc3v4IXL/GLIj
/Aj8P/BOuM4juE52P4dl31H8SukcRudK6RySfUfxgtI5hE5B6fws+44J7h+j
dpbrLADvItfJztdTQDrs/rFiV3l75offLW9Pdr6e/NJh94/9usGPwvPBu6N/
FH12vp580mH3j+V6wI+R+8dg98CPk/vHVPfCT5D7x0j3wU+S+8c898NPkfvH
JA/AfyH3jzF6wk/D88J74fU9jdeXnTt5pRN7Hun8gk4e6ZySfc8Er5pwu+7+
MUlvuX53/xijD/xXeG54X1zPr7gedu7klg57Zdpz3z/26Af/jdw/NugP/x2e
Cz4A1/M7roedO7mkw16B9tz39/UHws+Q+/voD8LPkvv73A/Bz5H7+9APw/8g
9/dlH4GfJ/f/OwieDr8CPhivbzpeX3buXCEd9rK0576/TzkEfgGeEz4Ut3sB
t8vOnZzSYS9Ne+77+46Pwi+S+/uCw+CX4Dngj+F6LuF62LmTQzqxZ5fORXSy
S+eC7IcleImE280GHy59du5kk07sWaUTv/2zSidd9o8l+DUJt+vu74OOkOt3
9/fhHpe3v7u/TzYS/ie5vy/1BPwvcn/f6En43+T+Ps1T8P+R+/soo+D/kPv7
BKPh//7hgfu/8WPgKeT+b/bT8Azk/m/tM/CM5P5v5LPwTOT+b9tYeGZy/zdg
HDwLuf+dPh6eldz/bn0Ono3c/457Hp6d3P8umADPQe5/VifCc8KzwF/A7xP3
FHHuZJEOe07ac9//LE2CX0HufwYmw3OR++/pKfDc5P46TIXnIfeXafC88Mzw
6Xi98uL1YudOZunEnkk6edDJJJ3csp+W4JkTbjcjfIb02bmTUTqxZ5BObnQy
SCeX7KcneKaE282A254p158BL7Pk7e/mtz8bng+egpc5uM585f7fYudOinRi
D9KJf32DdPLIfnaCB7nd/wPbXSok
    "], CompressedData["
1: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
wpJYt3xAvMuGhL/+AufSbUl4tfGeVLAdCVvsXpwJvUCCmwq1mdeRqN+oae7o
QgJXev5XQ3cShLbUGqd6kCDCa9Tu6UuCqI5ubyDh39SfHyiBJNzf/Jb1fBAJ
/P6vdI+FEPkOPKfujCRBZqvGm2dxJCT/e9P4jbDb5loXPZmEOJ55LqEUEkol
Vdh50kko6lqNcyXkti/SZOST8MBzrquukFhv/aHqdgkJLzXD78eXk+Bf1Ji+
hUrsz83dxL6GBCupvmtf6ok5uDzbPneD2I+oVJJFGwn2M69LqgnZ7q2baO4h
Ee+LtbyKD0joZLnAxtlLgtRt5SdJj0kIjDCtbRwjYV3QC2GOlyTsjH1uGzRJ
gpj1jVrGFAnuTntqT8yQsOrEXlv8hgTja0wKpvMk7A3dP/XlEwlaYhHvDb+T
4MB3p3f+F4l43hvc+ekvCf3iAbrn/5HAXHpAe9sqCaMe161aWMhYX1csULyZ
jJq393q7+ckQmBe6EidEhj+b5L6tImScuNhObhMlo1NG7v5mcTLYMp5o0CXI
iCvM+BgmTcb0AnU8cBcZHodtRvMIR00nZWdkyDhwWvh3iCwZVr05JyvkyLAZ
PLc8p0DGcI+9zj1FMsRPTAmTlMj4s1vJYUqFjJ2FL912qpOheE1Moodw4aHx
ZOF+Mviq5Z9pHCZj0XsgLVGXjIIcl7Duo2RIy0frPCCM+PxBZ4MBGf8+Ba6d
PEaGwzdepbtGZDw55rv/mTkZ7JfSPFlPk3H2YGay3FkyuPmNBe0IqabtkxvP
keEkm5a804qMl3LjTt2XyNglq/ar2YOYC4nqvu4yGSI54Z7KhNIx1/fGBJBx
9KycCU8gGcZ3R+yaQ4k6gZf+S7pKxAfdshuPIKPFOOqMTSQZTV2XtV5GkSEn
oRWuHEsGVyjT5xdxZHzjpNHLksj4vFPN2S2FDJ2bQX/S08joZ/y965lOxusv
rxtk8sjoXlBY25pPxu7uN6sXyUQeFRU1u3Iy+lgk6JZVZJRLtg1H0cgw4m5r
H2MQc8v/Uzp/g4xMu6X3Na1knGt2JEncJ0Mwsve0Rz8Z18Zyno09JqOx9pTO
3VEyQu+cLT42Tsbl/QLuMhNk5Gg/y/vxkYzVAPsC6TkybjPLxs8vkFH59HXn
1kUyLppW/vfiBxlLi1MbWv6Rwfvvhu5tdgpizx9rYeWkwPfQuo7DWyioU5s7
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
BrOOScrbC2wwLXXTmkZvazb+tzwfzyOvO51yaMn17lMqqEtGybt76El7SQ4V
hea6TboFbNjrnb9nqJANh94fu6B6EfvQtT1RD9WeJLOULuH1AackNqGJqswH
zuhErIREGioW3xrShE5R71tR0JFNVtsX0M2eB0bVi9jgu2zOuR21zLwVs74Y
c/QxVu9lCeb4ujjcvMyG59qTZ2rQ6qGTrXylOK91PEUJaJqbcNqFMsxt+lW+
x6guiLW/QiM8t+S1VuH5065y9ymqc2v9xVM32aDweOTBWbSyezaWr5oNN4u2
xlnU4Hlto5k7hvZMjRitq8U6C7T0rNC45H/1NmiYWsHQmno8X7pj1UVvsyEk
8u+iA3pbNGDTJbRM3yD2YCPu9xeWjED0YtKfuiN32NCe8ozd2Izn9WJqke5d
PG+DA6NzUC+dm7UfUONIXcvd99lw7Jnc4Rr0xvae1vgHOP/7cioX0GClqHN2
D3FuKq+Up9ETC/W/Ax6x4a/oL6llbWz4trvh2Bl0Sx6/8Md2PMfOCXw27WCD
nXBZoUAXG4yGr/ZvQQs3/TwQ182GJ5HS6QFP2ODnZd9m/RT36emHPWufsSG6
J7BXnoB527Y5eBG17NhyVp6IueUtHUkgY/46X79IoOB+7LCzb0Ul7X3N26mY
502GXWtpbCC/so8koSf+Gyf0oXKH++VesdhgUS7q5/AC36f2q8Ni0X+vc7+v
fMkG9+Ylj21owH9JT1xfsSF73iXOsxfzl+MQlICqWL/rEO/D96XkhPwVNDCV
INaP+tW6/zDvZ0PSxbqwYFT6uGBD0AC+v8nXuJ/fsGF6YV+N9CAbmB9ypv5D
b3qf1nuChsh5pyS/ZUOx7eeEavTZyac9S6ioffnfoHf4Xngg3P4KLX+alf35
A9Zdl6xl9BHfg7aaobGf8LlMOvcHqvzRocl0CPed0udNyp/xXDD5upSHerjO
3jwygvN9vlNTfxz7Gb9gtx9dZ7dS4xE6zjSoPzKB7+f7GSvdfrKBlTYwpDeF
eWbL9wyihqsby3+h+9T0H72cxn5/lrHwmWXDhZZn2QW/8XwdB2PWHJ577yTM
/ObxPdC30JuFRk+ufzWHzsZIdW1dYINejligMeod3HzFDH3fR3YUW/z/OT14
ZAkNveE+svUPG/ZL2osA6uzTl+WJGj8eqj6DFjv6R65fwvueGs/N+Ifv8eVJ
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
LAXiVYSS7eQooFRBOu+AumrHJS6inCZaqvUKFPhxxf82BY0cuZqroEiB5gIH
OcIhCkzt9NI7d5gC+xzWfao7QgGNSvWDuUoUUItOOhipTIHLbbZr9ajhcdaI
vVoUOCDtKkBA3xytd5w+ToHK/9IplicoEPtXQOkdul5VoOwT+ni7u3HNScyv
QuulNtTxWeSash7ea7sazRtt/SB+cIs+BfZkne0zRCminXHPDfA+Sco36acp
YCO0TcvakAIxOy4GvEJ7mh9x9KKR0tdJLaYUuLk8zHA0o8DvmPGVp+i8nfLh
MbQKPM5FW2CcR31N69D5+/1BW60pwPGP18MNDfCPrq5H943rNbxB78uFOjag
wTPtG36j+gISaZtsKCByyFNbCfX2TvfXRZO7hheSUNK9P1cKUIl3CvdK0Cy2
zC2BthRoqTGuKLKjwHUza29WewqU3LBf4kP5NLRjIlGeXbbP/B0psGEn5fU9
J9xX0eRTKZrQI3My3Bnr4efxSi9XCmyKsSq77UYB4dRWPgl3CsjHaLzQQBsU
9vxJ9qLAZImjx7NzFGjSPkmrQw/euVnCfp4Cq/WCP5fRLPcr2vl+eL/MR7oB
Fygwvr66oQ39PmnXUupPga9NIuPSFymwTe6O5JEwCuR9Pqk3ggoo7OW4GIl5
rrZtuoGagD5XOWqx+Lb5B9ryUWg4JooC+YGncq9FU8BoPJEv7wYF2GXcqCdi
8HwtIcKVaOmjZCPnWAqMFookxqIPg4Oy3BOwXy1z/hWji2rujNwU7Kf+ufkq
lF2SmL8+lQIFdz6HHUJP7WnwPIyym4h3eqZRYK3Zvz0VbQ1o1clGDfwUJ9+g
MYIthyXT8X0pHusq9JdM3YJKBtb9sdtqC/cooDV7OWnDfQrYvY0025OLcQwK
MNJGm18Ecx3Po0BXPJ/zMLqQ364l9gDfP/L2gy0qr2w+cBe1cX9aX4J6wgsR
tXzsy9RdIkbokKuRUEcBBZYUpoIIhVgPBinBHkUUmOaRIHM/pIDfxAYRM5Td
La/OFdXqXVGPLqGA8lHnhnfouNaDr1tKsd7v1/6Sf0SBZWdtPr4yCjz7YbWZ
t5wCUTXemnPov1XVkv+eYp/d0m0cqMa5N1b7IbuGAu1TTqfz0DSDHVcfoVM1
u6+Sa/H8LEuZm+uwX4stXE6gnh27Rs3/79bUwVvonLFHRB0qL67ZS0L908zW
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
YHlp2IntX7Afs6Kiv7DF+4DnhnbcA4ethjd0oA8aD6QdgKlbTW8XwILZGz60
wbNWUd+9GZj70Rv0yuH3BzX7x1mIP7+/ZAUX+fbW9PKCWcd7nZ8IUNebZFa2
wyn74ncz4NWlCe3FPVzSXdH26Ru88SHxksJPxMG/fcFtqJ3ya9UfmJy857pv
L5esaqI9n/5C/mz3JDn34Z62cGalwsl9j7ezYJi1seSkfjz3Y/0sKbjpUdxg
zxDmRkvAQ8nfXNrSsGTQ7g/2seiudBa85e6hWAqDRSJsOuBtjbD4bihTnLpD
aJhL/I2yzFCYuC4otBtmZadYqv7lkulQLF8TTjys8NQIJm1SnuM8ivljntzy
HE5mL9f7Cn9GLTfOH+NSkMehx8/hgTDzT2sn8Oil32rDO/DfRLNT9dDDTXOC
w0QehcT8W/4Pqux2M5g3iUclPa4uynCJf+jwZbj3af+qxzB9i+ZGoWk8+lLy
IS9+Bo+qt5UulRPhUe/Ks4PFUMbt0MQx+JMpv1JMlEemew/bOcN7pZ2/1MR4
tO1P2/P98Gzppdh0KTx30ZHNPPic3aJ5bC6P5o03ecXC2TE2cQ9h+WfNnhfw
uq+kynvId9Pzjp7HoxPVp8pSoENT3K9MGR4151/pdF/Coxt7ry5kwJFfHcKy
sjzaxHV8d2cpjzSXBrcekONRZ8OL10H/975YYD7kyxjaPYLuUbJFkxR4pPT1
ct4iGKve8m8fZCk6hW5R4ZGqznRp8TU8ujg2GqgJf72TzDkPG/SkleKhov57
i0Vr4UmhT+nw+B2+R8U6Hhnbpi9nwJ++FSOfNHmU6v/Bvmojj1493SlusolH
JvmHxwtgmMcCn6laPOoZanvgBl1oiqYw8Wha+VK1j1t49GzFPJFPMIt9fEbz
VuTD1kuYrYPnSGc5DcEHRjvqOw15VCVxI7zQiEdHBGqT7+/kkY9H4H4lYx7h
18tCK6glnvDVH444ju9/CM9GpsU9hg8aOl1G4KWLjKghEx49eWBrOc2UR36b
9q2fBW/eLt/pCNXncl4GwJzpvIVP4Ru+t3MVdJYWO/cFTmPOM91ohvp6F5tl
C3+fCyg8CBtWjO08ClMm5lva7OIRb2yeXvEeHhUyl5WI7UV9eI38Owm15w+9
qICuj/5Km+zjUZRU4NEzMN/qfoGVFepnyvL2KCg8eabffmvE7fCdu8/gfsUa
nXZ4Y1d5g6QNjx6aK0+Sg26rUwLV4e1t/Qu04e9lU3c4wQlLqXG1LY+8Jvir
qEPRd5VKp2HIZ+bScLhvU116NJwzuqqz1R51bproOQYvB6iuCXFGPU5qj0yC
dtPitt2EFVFPhFrgwdfKS0678Wi4z2xdJJzfMEpV0DtwhZbufh5Z3XnID4X+
feanW+CEKTpGl915tHOqO7Mf6r6X3jH9AOpk7PDPuVBXNad2LfS0uZKQ64XP
hw8xZnrz6JzPrCW7oPZX9iV3Px5JTq2rHgrAuftb1JYcRX94uq2OD+LRwndH
Nycd49FJw9sz5YN5pC9iU+gAc8qKTteF8Kg00vTEquM8ChRbGLgPKi/NE157
gkfMfZufO8OcjLQqD8gLdTvqGcqjiXtPNw3C7cs2vPl5Ct8r+dZjFsajDbXJ
Uqeh1p4t9Q/PoL4NTyzbHMGj6IfCPQTDfl19sPUcjz42nlLKgQVmlgMMuNG7
8O0fuKVqy+nkSDy/ePxAFjzn9mSrzQXEN0XveQX0TT2gHRCDfnLqrWuFa3Lt
RiRjEd9ph7+vgtfEG464wJwHN9sY8IxfS6vUJR4dtVG7sj4O80xnbZf+ZR59
K4wU3w/14+Jb7sG8htPbjBN4dOjJSWVraJ5a+m4shUeCNeeWPL6CebSiYkIT
vMrdI919nUeTclLEp95An0na3F0Hza81Lt+Tg3kSG+q0P49HF7ReTeBCj0t7
5P+7j3wXXRo4/ABzYfPFtDMwTfvqvTioc8BR7RZ8yFq88CE8lHdDpR5WbZu3
mwedakTVJ+VjvcoAwfZCHn26/SDbGLp4Nn5ZUsQjCf9F8/c849GxBu59e+i9
8EOzFwwk5Zy1ZTySHjydfqUc84F1oCgbOq3rr7/zgkfjU8VD3sOjhikz22CY
UvXCCa951LVz/oPPbzDXwns4Em95lJQYJ7kbMi84TZOrwhxek7HLGL5c+773
czWPmthOFlI16B/xG76xcFRm9lqvWtTFNEXJw3DF1jarKrjuSN7rsA/oO8Vm
7+vQece+ybkwsDgv8XETj+KfnNxk1Mqj7zV90R5w6lHGwTLoo3l/bQN85eV0
m/eRR3+c154dhSv3bArR+sSjK/t+TVT5jHlwtd1LH+bGqkdbQssbx/dGw5bD
at992pG35YvUBR08arWwuLCSgfr61i97Bi48vuLYAxaPkjdXiBZC1dhz2W6d
uN9uFwxVwyN/FNMCu3h0f07Z61DYtuiyUjo0+vXz9x3Y+9Cj5iWsfbzy+jdo
+S9O8+o3Ho0NaBjs7cf5e44KhUPp6SdFYuCeDw0/lQZ5VD/R4YTWEObtmte5
gbBdYf69MThdqrGD/vKof8DD0xyaSD65IjWCOaI+4dg4rJhab3VylEcdJSaZ
fUJ8GjWvXaU3kU9Ol16LHYe2Prq/Lk/mU5h5rKTcFD65y1ZWqkF1UWuHAhj0
fvTtR5hmKr4+eCqfptwM8g8S4RPnza/p22fySWmo4JuoGJ8qpmU3vf6PT6u4
Nq95sN3AWXbGLD41jrhaKEvx6dgl5daDUMl9Zuo9eHDtrYGz8/nkWb1dU1SG
T6fVuxcvgr5hV2U3w+cTNQT6y/g0bWhq5Cl49EvUkxT40yHsw3R5PvGGeiz5
8N0xzbsj0Pv15xxNRT7FJeXaaEPnPqE1f6BJCivXYAXOEV2ssW8ln5aVa6UG
w3KhKkcODOLJaf2GnV+1+wxX86m6fWjGJWU+fVH8bHoDWj0U59bB/NcH9D7C
5OblLwbgJQkRSyEVPm23XObWC9Uk+miWKp/eq/buloTGRusCo9fwaf0vZkMG
dF0cvXCFGp/ybH5a6sLCM1+qreDW/OyzCzT4dGF2Z9I/2F45zUlek09L7K4e
cdjCp6UKO4P/beWTmcF/F+bp8Gn4qKG5qS6fvPzf0altfHLcnaIaDdm6XK1I
A2gpH1NnyCfzCqXzCjv4lKsffvqEMZ+mHt4XVmnKJwldZmUz7JQ5vmXdLj7R
+63cs3AkKaI0Ekp76julw8WsbcpV8N2FutF2eEv/SsGqPXzqipw0twUGDN5j
fILVEZsqXlvwSawvbPScJfJWwkxohbvj/qZOssLnNtfypGGsTZCeFfSZYH/u
EyS5D+mSNnwyONH2WRv6ql1UzLblU0x4RsI7uC7uyscLdnxqGq8RuerApx1H
Ko6IOSJO57df3wPz5gi76znzyfTq6kJvKGPmsuoEbJ+668v6w3yqK6jJne3L
J/HrvVfeQF+/L23b/XDOWeMPufDFFM2nQkfwftDFnfOgSU6iUSFkbGhjTPTn
06DBnePr4bxthsL2sGVX9mg6jONIln4K5NPndRYa4/CU67W4F0F8mv+Vc0Tk
GJ4rfn2fDnwavqrVGubPm9riBVv/jpwqOvb/fBpu6oDtVTnNs4P5JGJcXCMJ
y2UfxcpDiROfvFXgwtcPH9yF6VMbv3fAFzXTli8PQ/96Jdsdhz+/+7Sdgann
3c074ILab5tWneGTlhj/+ka46p79tqZI9OntOTOCo/hUZWZbXw/Pbpp/RDqe
T6KOV4y3Qjl3195d8IHIaytX+HfbuKFsAp8cQoMvmkLtex3/7OGHlWWivEQ+
XTueJ98Fgw7O/uGUxCeViJGiu/D0+wpFm2Q+/i/Z0NwKswOzf29IwT5FFy+Z
eQV9kKCqNZbJp5PBTk1NOXxyOVF4yPYe+ju8e7vRA/TL/Lgdavn4nsahTB94
Qc9JrAyO/acju+ghn+6aLLu5Br41O1X2uJhPs8IuBlWUoO+N7YSq4LdADrvl
KfKrUXrh+DP05ZcgsdMw8LLDlefVyOfK9319NVh/0f4EyVrEecOcvW/hTJkJ
Gcvr+JQYxIyNgO0pSVPz3/Np3JBnKdKA/W812+wAt5TyvY7CD++nB+RDIQP9
hUXw8hHf9y8gO5Al/qiZT1mbLouNwhlGftqyH1EXjKeOi9vQF3a/vupD3RVq
jFAGn8Ld69w64ctc6ZvmTNThy6w1T1mYN7uTb76Ay16/eDqDzacEUcmHanDV
Z/uCDJg59krzFkx9ublZlIt5025xQJfHp5q42umpcIXTFq/NAj6tEQ/ysujE
fJ3fqCb6lU/254WZrO+oz5ptrBM/+NS3US8qBg6JX7D+0sMny8ht//2D1gsm
Wa/4yac7LhmNyvBFh3+1FmwdS9AwhzY7PilZQ9m8DneFXtwH0iF7VOBIf7BW
Yx/W05jvMmsQ/XI2T2wPfGMYLHz8N/J7vb7vMvzYmRZVB+d2X177ES4esX9a
+gfxL7GbWAHdZv+df+ov+tUkZYLoGOqmZuKBpdBM2D6wBXrwju4wHcf+yKR4
F1xgIj+1ZqqAGqJSJ/VBmSP8rt9wqVE0d4mwgIzO9pSrwLudWx+qwkef1vK1
oEOL1LvRaQKStD8jWDpdQAueHXZXhFs3HNdWhmkGS+X1YGixcsJ7OLfrquin
GQJanHhvzxERAVlJHp+UBm/e0b5yG+6soJAmWNMr7RYuKqCz/ovYkfDbmpZq
p5kCSrY+s79pjoBSr3z6s1lKQBNkPmXvgUvidjY9WCQg/5e+Zf5LsK/hqCVf
oauoy/tjCgJS2/Hy3SZFATHc9sYvWy4g/s6vG2etEFD428LmXXDK0W6bUGip
ca7ivYqArNNMAjpgTfCcuz1wSYGd7P5NAhIV/dtaBI+X/jCV1RJQgUOx6VLI
PNOlqQAbFnqzdsCDK342OWsLaBEjVLEXrhFyjf2/M0UMf2/WFdDlocm67XB1
d9ObJdsEdOTCsVW/9QRU7siz9t0uoOU6tq6v4exX4Tc+Ggho7IHvhdgdArot
o6iTAyML2vJqjAR0SL7g0Cg8P68/aeJOAS0zkRzeAtd6HfQNgY2iExdUwy+q
SYyDxgJK/7TsxW5TAbko15Umw7ILGgGXzbH/gZM5D3Zjn1bPlUX2CCjbhe+1
CIZdsR6uhexNAc5z9grohrdO0ip4ve3g6Cn4WOj3iTB4bO/PjTxYUuiVqrRP
QHXLItVewf261U0NcOlzffvtFgKKTqnViYUeZ3mCj5YCWrdKbLzSTkCbJuWd
lbMX0Hq5XnlxRwGdqX0S7AJv7nSR8oTrCwYkDF0F1Ck2lzsO2+WOCM12w/rt
+pvjPLGPySdFW6D9Vj/ZZV4CGoh8c0vbT0Dz7nx9onJEQFkZX69oQ4FcTu7i
AAG9uumWqRaI9RVOLtgORZg/Z84+gf2lZdr3QKX4NOOKk+iD0rE/hqHI/9Ac
9wB4K+ex3TnYJtMtQ6cENGLTf9sexvUfOHIFckxuWqSFo84tZLwnnxPQT//l
cpbQ2v7UvBcXBDQ+2LNP/6KApI4mnrKAc/ZsWhdwSUAnU+ZdLIasT7VN/+D8
/HnczXHIw+wVbTFwg66kQxK8dbKt6Uc86miN44y5iQJyTP4VVA8z/vQtjktC
X1jvmCmeLCD3pX2zNeHc8pt3pqcg3i9f7K+Dh2Jez2TAsYKJExZeEZDnjfH3
P6DtRdeNrlcFVN9a6up+DfuuWWJrmy4gsdseO0LhrbtJNwKuC+j9V+mRZ3Bo
fVzCFzhnQtb1/1ttOl/J54aAVqjI+V6GAUdev4nLwv4OJ6wdhccOOo9YZQso
505DkPV9AXk3/al2hQ5Tw2cehJs+vxOphZtnhDqeeyCglzLk/n+v/U677FWA
Pro6ofwelCsbu2/xWEDTVYtaE+ChsyM+1fD5UPKfWqhUNKekD35ekZtqX4j8
di3QLoJCmn5vLUsQt6KNBplPUPfDr7cVwY22nZ8LnwlIdqazVyU8OveCRz1c
JfqSJ1UqoN2P0pqWwXfrHas1YJqJheT7cgG1dDtpSFai7lYEz/kBXyibR4+/
QpzKVisse41+uVxsYAvz3kt/vvgGcyzWaUkP7NMRvtsHe4Iby0obBfTw0lv9
NrhWfHLiNzhitnVYvgn5i12RNtCCfHoq/z3QKqDgl8djj8Mk258joh8FNPmH
/WABjCn+kMaEV6OW/BJrw3xzupRr/An1tWGmzU+o1XPb3vqzgAYHOEFMuPYi
V6T0C+KyOD4stUNAwq4Oxj/gpd5jEp4cASXOuZ2lyEUdHLtzT46H/txuQG87
BXQxMSda/ivieH9fmCHccf64QRrUUhX8yIWcELWlP6AL89HPCV0C+mia8Zpg
WFB6TyCcf/TWCm6fgB6wJey+wSXCQ4cM+wWU6ToSUwQN/VxcTAbQl/H79udD
o6bivyVQ/k2okM6ggBI0tKT0oYZeGHMHVL8k9yNhCH+vbg//AMVi1RzdhgXk
xj5TufqvgEbPC+9OgC+WdMsMwbRnDmaTRnDuCi0/DSj/Q6Jx6SjyO29O37wx
zPX/XDe+ho8Oiz58Oo44zJYQvIWPMup3VcFszkRFlX8CUjZb53YCyvhsehwP
p9T/XmUr1ElT1gWsNp/YSWGmJev3w8JpD37nw1lZPurN8L8z/dvUJnVSvoVJ
uT50DIrIjICP4l93XYUPdrreLZ7eSUZ89aBquNrT1O4zPBnO4/mIQT5HRH9W
J1kkcq1s4NHeaz3h0PO91bSc2Z1E7Q2RGyU6SUZucfIYlFjVETNBspOue7d1
zoCLpW3790l3kqit9IdD0CJ9b6XS/E76m2vwQgU6HLHW9YYvL00aqVvQSSYz
Fn4Vkukkv6s+38Thq19xC9Xg8OvK0c1wq9H5X6Zwo1X3mDusfG52y2pRJ31S
37lVaXEnPRuLu5cAd3uXrjda0klFPeGPdsEmw6TIY1Du9o93Vis7ae81U3NZ
pU4yfcMKyoE3TyTu1lPtpDjVt8q28Nvp41JnIFP/b/eSNZ30xa8xRh2aJe96
2gmdJK7I9kCv/GdnjdZ1UoJdTvNOmOgy4fx/ap20zHF0ria82PmyLA+WmjTL
sqDSA49N+uqdpDJ3y7UDcPL5qha7DZ0UsHjz8k+w5c7RX+s1Oqk5ZL5OsWYn
mVvuN/wMU2KnhozC+CbbbW6bsD+NlQk7tDrpz4JGJxPY2z6//5Ee8h5zvnGx
PuKz9V9vJYzQiHn+eCfyne65rR0a7JZWGISWD+bfbjTpJI9FRbPkTDup496F
UQO4RnaztAtME+2OqzTDOWqNtwxDU9dk2wfmqKco51vCezpJ9ebfmBg40yrX
MQ8Gx/BO1e1FnT2P6ayH6/zX2zbAOlPjz0b7OmmoVLzUFk7d+sWea9FJ7NyN
gautOumwbXSrDpSqWvTKF+rtHgjIgBdfzkqaa91Js3kv709y6KTxBHo6F55f
e0JoiiPO8Xs0QhiG7Dq8WxxqjTaKrYKppUYzPJw7qWR5tpGWaydpn3l63BzW
BR+Qv+DeST/f7T6wzKOTAlMPBYbAmP9xXN/xVL5tAMArlOyVWWahrEqFostK
NhlJqEgkZZeihJZChCQjShkNMiKljDKKiDJSmcXZ01Fm7/V7//p+znOe57mv
+xq3IztHVv7kFGydSThviMree3PbGeVSPlRxNnQKSnUcaefD/psnZ/IltDQ8
tyc1agr43hfca0blDL+3dKDC90sDf5+fghY4xMe4MAVnnW8qLo/B/SXuMjJA
G2tf3alBZ0fDtd6iJiMLdZGXpsA9RDKkG32VL5fIQd/8Y5sIXp6CEpcjUb5X
cL39RGeuq9jPj0sqmTemQLuF7SCZOAUyfs9CdqIJsQLPddKmIK1nrvpgBtaD
rnS4DQ149vLp2ttYTyKF6xE6n7t8/YZM3FdE2bcvd6fgitJAuF/2FCzbF3Q4
DpWek/wjmzsF0wUsPU+Us/aJbT66t9FwIuX+FBzyeqsyi5be/hoj9mAKihVC
Ldqe/Lfu8Nov6F1nwuTVp1PADtxu2Vg2BUzHE6sdy9GQ41f8UAJ7k+8Z1Ecv
QOzQc+wfcoNIHCqelfXx1wucu5bxpq6aKRgfdInfWTsFvaujpe3Rg5Ub3va/
xHwvJqX31mHfFqv0SL2agkI9RzNZtCnJUHgDuoeY8T7/zRTcSXa6ZfR2Cs6P
Xh90RKMPmxScQNfYCGZ9RcdPfXlc04D5n8gcnkEPPvd3XN2I9bMYVpZF41Zu
F/ZFjd7MzL1rxr48HqXv8A7jP/NUeR/6rdu0KQxtDk1IuYdWqjZUyrVhHrTH
rRPRv6pHF8pQT4cvcu868Tyuyo9O+oTrTFnkfkG7iTk/6rqnIO9Q0azoZ8yP
N2z3RClV5MmKnilYsW1N8OVe7EtFi9EW1Moi/bXEF5z/SEshJ7RKJvT4eVSO
616hcN8UGGxo/uqKPuklRwSjdc0K6Sf78TxRjhmIRQOCbYcKUM1U23bekSl4
Wv57TAFVP6s5aYlWRAvVnxqbgtgHWhv4xrEeV5WlrdGTsZTcDjSibfFqH0q/
OBHNPzEFF1NpBjG/pmAqL3Y9ZxLP6wJqqtjUFPyK3c02RL843r36loTveZ7g
V0rBuuZcSt5Kw/l0knBwRr9blZ95h0rzpJap0Keg7NfyxyPo02814/oMrOuq
YN5a9N/I39GP6O7cREof4798GhkXsqeg521Pt+s0niMEjQf7Ub0iTV6NGay/
2ZmxLegrwia/7ahnkDvlADpmVPBZ/g+ep+knWxRRwRPfpO/PTsEO/qqbS+gH
n06mxRzGvd/bSnER45zdk/oG9aCTPJctTQFvRm1OyT88VzR13FjLCGASuXCi
bTkBNhlGnT4tQICJoX5eBtq1V3+jtiAB6pYkz3sIE2BjtmCPmBgBxoZFLGVR
p3kupwJUoif7pqMkAc4cMtP3Q1fGBbaXrCOAm2nNJjt5Avg7vbLvQ32WHYxX
UCCAlfwfq3iU+9f4kauoTc2t69f+M2385V5FAnzSdrVYp0QA6ly9kx46o3WB
ywStOvx54iR6cO4176AaAW5OX02wUicAu4XwugTtD6krVjEkwLa3gk+CjQgg
45VuHrubAJ+XEfJq0bYPpGvfUbvECqoMEEDxx5k3GeYE+O3JOiNmQYA1p7h1
JdDl3RQlOZTjERNlgE7P35XzRx+wepRHrQlw2KFN3sqGAOWLSdcL0Edx9y8f
cSBAqYtczxi6/Yz0iJsjAW7kb+7R20+A54bLGA8PEGA8473nbnfM4+bEj1fR
1Kt70yhon8aL17wHCfBTXvLENU+8r+TyVC66vS5jwsCLACq7r/FZozHnh+pj
0KcCnzO5DxHgh0l5mPcRAiypFhpd9yHAlu6mrSlopqzhphV+BBBVGf231p8A
HQEVLAPUZrHu93AA5qNB+s+uQAKks8yCDdEYg8vyY6cIsJv3V4liCAHCFYZC
VdHa+CdCd0Px80rZNcVov1O6WR86v0mZFBVNgJBbtaJ85wngd8ORrofGLO7o
dUY1Y7V8ItHoyvAd91AR8StS6RcIINgxLr0uBvtr4GvxC3R0JFda5SIB7GcJ
v71iCcDbxiy4jLbPftU5nUQAW67hh1HonZW/0omolvjaxtm72K9+uq5d2QRo
OtYkz59DgMDyq1yTuQRQiuf1rb5HgMK11jMf0H+t7VGx+VgXuZmxkAICTDUb
Feaij1fvLahCrXwTv7ahR+17AifRhYSvb9QeEoAyxpmzQs/5m1c+QDlft7Ve
KyHAw3TFh7ylBNA2GDOoQ1VqN469RX9X3x4non3cfwv/ogKRuxZFHxPANDta
4AG6rCDhcy2aUUP7+g5Ncdi3ohP1vCxtP4qKbNn55NhzApx9Mpw2iQYMBum5
VuA+Z9c05L0iwIsPyfARvfYr7JnqawJc4BTm720gAHn7F1k7VIOjV12DGm0Z
7J97R4C42mc6Ha0E2ND/cisTVaONjLp3YL2jax/noMeMe73K0YWT+7/rdhKg
MnJUrf0TAYY2vDVc1kWAzisayeH9+LxhyFLgAPZp05jybbQg45zBme/YB7pB
uyjovg715ct/EOA4x05OaxzrW1Nsdg79vn5LZAz6qDfEg4eAn0X4TVvRRxq9
LTJErP910+IMGq5vvV87mU6A6qdPrGrRgI8a25dQdy1RXT4GAYKoatya6EPp
tBVvpwmwv0Bh2RQH63z11XXzGZwrY6G6EHRhb69hJrrPmCf9MXqtPZDCu4oI
awVs1gMvEX4wjgUGo5OJC8UpwkS48UEmbocIEW5raNkdQHdn93NdRG15Nr6Q
EiOCmIRO5z1U89Ly/h5xIgzJkSwrJYjwNSBXogeVv7z56jJJIlz9Q/x6Af0c
0l9Shb6K3zsprkKEovcPOv1RryJF4mNUg7vIcPN6IjwpNK04qEqEp+orzp5E
P2cKzR3XJULYdaELJJTf6QHRZhsRTm1z+imkRwTtqYlXS2gB74Ebh/WJoC9y
bc3iTiJMWTmL2RsSIWNu9ICFERGCC8n8dajozXJpESCCvVsK/1aU/vRb7S4T
fP7oc67vpkTQO6kyL29GBCu9B/cSzPHzag9nmz34PNFvhH8vEeIcX+mLoMzX
G9ZyLInQW1NStsaKCDXVrleUbIhwnMo72WBLhHL6pVQ3OyLcaxW9MokafWPy
W9oTYWtqc7MHGjvxbBMLTdt951+TIxGqZY/LH9pHBMmzCoYPUJf9QdR/aNbz
og+3nIggyLpK9nYhwoZ9ehDqSgRL/8qCArT7c3+V+H5c57TNeB4aTNDkeo5G
RhXxfUXJHTPqXm5EMNOsOeKHio3x3NriToSUmaR1Eah5rP6702i+cf1fqjcR
OuWbIn4e/a/+zeRYXyI4J9zPLUAjV3ttX3uMCAJcau+00cyh3oOb0bsrVJss
UPvjMoGuaP+o2ZeaACLs2RDLcyiQCKMf+KXeoq45IeFuJ4kgkmfPTUYpL36v
mEF11V/RBqOIoLzSL2tHNBH6VqSevImWDn4u60H3cGtXM1EtY+tbtPNECA06
+4n3OhGI5dHumkn4vV/Mk4todbbkm3h0KcCDUJRMhJL6/FVSN4kgTBrgNkO5
xoeSmSnY33/6RlamEmGCYqp6Ip0IKoYFKYvo9q4kR7EMIqhZlIVboLb34nv3
3yaCt2JUSwdqEdNp3ZmJcUp8eK+cRYTN/oqSWWiU0eyfortEeMF5sMidTYSK
1z7Ea2jlpX5Jt0dECHias8cDDftuJXwGzdSK+zn+jAiNfCWWgWVESFLXnPiG
il447q9ZjvlXKVsThC5u7dh/HT2Ru/bjPVReK+eB5nMinA+6w3UR3cHOH7+O
Vn46/6UAjXn87MbtCnxvwwernDoiCAXyplWgX9zkBV+jGlQ7xwGUOhOg4fsK
4zBTUshC27dYUj+9JsLLl/7v5N8QYWDpIFsLLXs+tmHZO4ybW6vKENUL0HN5
hMqtr6qVaCECvJdL4KB8mwxczVqJ8Jae3TuP/vz0S8K0jQjZG5ymXqLy7e8t
hNqJMN2hHmaCJvZue1+E7v45of/sExF4LhoReLuxv5aNPddErTcqci1+JkKx
89lM5R4iXHmt25SHljj3J5LQsxsOe2/uxb7tXrfTGHU66+5+b5AIjJQ1He/Q
pUd67cLfiOApWTq/Ez2pyPtgL1o9SGTLDBHBf3PGRS+0Yt+gwnV0tmjXcD3a
qOUyWPCTCK/1RLT1R4lw9GPvynj0kfcahtE4EeIvXdpjgnKaNeKOocz+jigH
Es71Fj3LCAoR1lkmtuajY/4/6mSpRDDe0eWriOYknNRRRWe/WZ16QMc8d4pH
aDKI0NVXHNjPxP3FU4IlWZjXuCuTz1Hpil5XMTYRqnQUfqxbJMK3G8ItG1G3
9WYmPmh5eu1S2z/cx4HRuVnUrSToGM8yErQrqVUscZNg8Jni9f08JCDVv+S7
jI5ejmTxrCZBSIIZdzJqXPw98CZqFG9eTxQkQafYQztBYRL83KybmoqeK2j9
qSKOzzVw0zMkSeAwPvcxB/VrfJ7nKEWCYf0VBeFoObn8ehMq9KJ5Sw8qYOVs
lydNgoSt9llNqIVA4ZbqdSRozB+2z5YnwQsttu00Whn9/O8hFRLk5i3dOo0G
FAg+CFhPAkawssnkBhKsLer9mKWKhrYRytFSuYBrG9RIoNifSilQJ8GTItUg
g40k2Gm5zXKDBgk+/Jy55Y+e1RKsuYayeoTmSjRJsC9WprwLfbzJrnCFFglE
P3pe27edBGrHP98+ilL1HX5ko1u3i9/x1SNBur6Uf5ABCVLvLk/JQoMEXqu2
G5GAc/z7GpYJCaRln/GuMyVBrZT481t7SJCYxzlVaIH7eaW8+TdaFqQ11mBD
gvu9WYUTdiQI9pTO3mOPefX8GNeGCl5KXa7pRAKp2NyouyjzxHD/ZlcSuFLP
xhzZj3kTHyZudyMBRLype+RDAj2vAxfVj5JA23SVpzlKbvY/4XmcBDxxJUcu
BuJ+Rdi2nidJoN8WHHYbLeZPCXM4RYL9x76fykSLa/epfw4iwZ6aH3+UgnGd
tzvPXUevKUudsjlNAuf3f8fYaC3L/MiJM5hXl7TionMkqHl2gGt3FAmmhPgO
26EfEy6HxVwjwXm3E0p56EhokNZndJ/JSGjedRKsD0m+kJaI9XlC8+hEIx2s
xgqTSUDZ+DOJg+5eEi9WuEkCD761YoZ3SbBN3d+gPBv7UOvI+DDK4z9150kO
Ccymg498yiXB5tQdd6motmfy3FwhCVR3c69Vf0iCpRBjKS30jcvh2I/o3Adh
9VF0eZK32epHJOjwGRw+/5QEcV2LPa1opHqMyWf0fnhkotMzEpxQMuNdX06C
TwUqX5zRQn9NZkQlCSI27Dx3sRrfR+szkXtBgraQ84dTa0jQelQi1qMO88FO
Y51EpRJWmRi8JsGfVwsyvm9IsCL5z0AkOl4plby1Cd9bk/iP2UyCeYe5Aybv
sO5OhuWNLSQQ39pkrtRKgh3NRf61qOqAeL/ZJ5ynR8oSc+iJCaatVxcJ+mP6
yt+hldYPX892k+C1jG6H3Gesc+/l0dNfMN8DP8TdvpJAvpWt6IlKFXK9zEa/
fYf7j/pIMG0feKMBTfDvPG87QAKt/X8tV38jwQ+bum8dKFdsdNryHyTQeT8n
YYM+GBA4dhptP7Hs3YoJEgyMFBy7ir6oG1cbQJdKpQRjJknQfD9JkXcK9zkv
bOGHdq7UDdjDwX737qrwnSFBzPQn7XCU1uahGD1LgpKlM/Ka8yQY831/0RB9
5rTB4PEi9lNpJIWO9i7oCFkskWChUOg2FzcZRMWM2uNWksHo8aHHTWjcmhMP
eHnxOot/heJqMqzUvE95iao5Bv3ewEeGVK5G/11oUbaH0A10wxpaDQl91ubx
AfjJ4BCTP1aFlkX/dV0lQAY+lcT9SoJkeG4zfuKoEBkSKmwFjqM5SvaxT9Bl
5E0p1ej6N7PmXKJkqP5TVxeHOupbWpwSIwM5+Fn8IsqcbeQakyDDrdrW0Jg1
ZCAYEF6lout6q9e7SJLhQcyY8TX0jNbHAgZavDubWiRFhr7EC3LG0hgvcaqz
R5UMOtW6VV1qZOBSYcSyUIVvtot66mToTmwufI6mLxzy7kZzX+okb9Ukw/nn
g6nHtMlAOjKsfBbVHlQ9oqNDhkXTT39ttpDh9sFWk+NoBOXLnM5WMoiEqGcS
dPF9ZgSv2G1kcPmWPp+8kwzciePZl3aRYRVTouMWWuM8FdhihO/rrzicupsM
jPIohVLUxGTlrCKQYUQ/NGyHMRm+1Xmtu4hqZe5cvGRGhq9+I4FvzclQKRsn
xLcH89Seej4NPXywbs/UXjKUGCa1y1uS4VCoiLCKIxl/F1zgtUCDQ6T07dEZ
1ysFdaiQuvWOv2htqBIs30cG5xIfN160eN1XGQM0c0j1o6ITGXZoFiSroscb
bJIkXMjQf9LjuT4qrVZLtkU/B5f4B6LjO3sUptGXHtvKV7hivRvuT+xGVRVD
XhujH9WYtaoHMK4LQiP27mTQvXef7YbOTlpfifQmg9VmruRG9M9697MCPmTQ
fPMrgoyKcQzXL6JruZ9G7D5KBuU9Vd8jUO+Bqnl+X8xrUG2mDCo4/bbA8xQZ
eBLWeqcGkeHGQoTvHXRL/q/k1WfIEOrYEi+KDj9z/WuIui/bXFt0lgxBrpa/
GtHJ5XpTyufI4GYTfHv7RTLYd0fdPIC+Xmhyu4k+8q0ULr6GddvqlfEENSFf
IM2iQrOCXv9Qnk15ioQEMtzZsWs9FT37e/8mq5tk6Hh8RO9GChnCJaYVstCR
GPrQskzsp6rerT13yPBi5jx7GKUb356Xz8W8md6ay0b1n67fUoq+rRy5GXeP
DCvKBs335JPBhk/9mTtK2Mw5alxJBjuv+/dPoqKHAzTT0HUbz67mqsU+OCe6
TLSODAKFKXRDdGPY/L/QZuwboyMXht6Toercm2W/UYutOz++bcPvY1dtHkLZ
9oUN46haarrl9R94HuRO/7s6jPnQXKPCRGOSFLYZUPD9WVOOp9CT3b58YWjs
TTt1KSp+Hu5e/xDNvX02rQ/dtKYzm4eG/dQsG+OBDvnXBvqg6ZWSPe/QQIee
rWfpWL+/p7enoQvskYiXf7BOqvMPelF1fmWzYdS7QjarZ5YMSQN5ORcWybD3
+GBz9hLGq62eNYheJ2rYDqH7VLqHlf6RYU+E0BoFbgq8e72lwJCPAmZ//okn
orZOhbWlaFlaxNIPdGT46om9/BT4++t1oQ3qsYvYO4V+rLw2vUKAAvGCrgUX
hCkQ8SPjegLqV5Fkm4Z6XlS4TBShgLSY86FhMQr8E803EhbH97RGeGqh0mpD
f2xRheqcpwz09EdLbScZCuTRVUqL0VPyv2dXyVJAZ9sD0TL0Sfyrn/5yFHBY
zD8VgX5een/MSI0CNi+3Dq9Wp0D2yrFcHVSKR9Rn3UYKHMlkGwVv/C+uijIW
OiHS8HJWgwKr7JpHI7UocKXX7/1NdOxEHXGLNgUSQp/uuq9DgZm4+vxW9Omg
Pnv9Fgo4neho+oD2nXRjd6KTy/f3LttKgVcVgoLGuhS4Om54IRyV00s+floP
39d/7GewPq73J3pTKHpoJXMyDn06/CD+MuqrcWf8Mdq3j3GgGa2ReB3zDeWw
mabeBrj+s7xrboYUuGuqe5lnNwXKD6r2iKO6yzqlDqIW3HUnL6Hn5PZcu42+
ctpr14dGXtou0m5MgceRkre+oPItijdsTDFvv41X3EGPbVeRoKEaoQZrbpth
3g537qxEpe5kn3iDKi2Gu/ubUyB3b7ft8j0UWCn+trQM3VyeGeNqQYE1JUtZ
qyzxOdvy5zEos7Lo5SZbrFOfjg23AwWEeVZKCaO7lpltOO1CganPGk/0XSmg
IpL50xq1TPJ2IrtTYLdXmVy/JwWqk7qf1XlRwOQwIfwXGr3yo6XeIQpYUz99
9UAXRNsee6LC7/f2BXtTYMX2kp0x6Kk3MjfdfClQuj/JehI96CaZR0SPJs9q
KJyiQAPPWQEausWI74dWEPZnrKi44mkKaB4+9FP3DAUGX+9uCEHr/1G5i85R
gMuyOUAsigIBV2QgEa0V3C36FJUasCrzj6YAIYerKQ0V7QOj7lgKWKkIbHGO
o8CPd0T7JDSpoL5wyyUKvFkhXBeAFhUIHLmIpqY/tyy4QYH+usJHM+hUgMin
VYkUOLuZxV+Mnr7OiiGh6pceq2xMosDNwYuTRijT4Ze9Haqr/PheczLWpXbl
/TZUujXmg8hNCuRrXZhTRS2ri80lUjBOm5+PtFDljveaEWhcwW/1vdkUELqx
PcYGVT1voOaKzjgrP4lAt4RZ9eTmUKB3l+zRUnQzoe2R0X0KaNv8SXZFXZoy
wj3Rt61DP18UYj7tnbhCH1HgZ0+GXz4qIPbC+dpTCtiLrZ2ZQ4/4eR0UfEYB
ieWHLzLLKNAR86DOohzr/DhnLgU9dHP9FqUaCpTM7x3TRqOvBDTvRCVUMh5x
v8Tr4ivVJdBB27tOauj7mMaCpv+uny+d6UPVuccHRtALsUJtDFS2w9Qwvo4C
dL/38fdR0w+uqa3vsZ5mWWqurRQYV2Yc2o9aEDaare2kQA8tvjMN7QwoDchE
z4RPPzL4RAH/84GqYV04Fz+F+j6glrfS39h9pkBawrnEsz14DsUd9X+AnjCw
Mtjdi3WrVE1U6sf4OyNvq6NtlCPKU99wXj6GlUp8x7w7G4tooE0pXP0fxnEe
D/57eHsCPwvF5lSj08+6a1b8okBOyNGYRnSiKya2H6Vsv/t+1W88P5wKxy6j
OfmbFlLR8lsvMp4SKCDjP6LzE137LUlUl4jxps/qO5Mo8EfRJ/8yus26I6Ia
fdb1IcSMgnMfK/5nNR37jux4zhA9aD5vEs3B/jrT59aCei99F+GZwf0v312a
i14+q821/A/2HZOXZYSeNsqUZ/zF92Tfa0mfpwCfM79lFtrHd37EYoECYb+o
hQ+W8Pq+9rgaNNDSZekHSnMviXj2D+OUGBcnoL+G4i9Q0KcZL5n7uaigHenl
fw/laEi8DeOlQiV5NPLFaip41u3JeYl+PeDqIyNChe9ZfSbhqEGvPacbXZ0X
cWRelAqyYcuadopRwTIkXugXuvZSyLypAhXW/55rzURvXmXWlaD2ptqacqpU
iAloTNmFVlbf2XYMTeGdvzxvSIWeI7ebFIyocG9Vl+lmVHDi87t9NlQYfz/a
UI+KPE+VWG5LhbefX63WRr3ezf/WQT+SdFQPoJmh4R/S0DDmn+NddlQ451K/
3sKeCsXnC85Vo/5n6rzFHajgtnpsWBU9d/6y9WpXKtSIb/5x/iDGOfcwMhu1
WWwxW+FBheTgGIu/nvj8+2uO8V54H8/be8rHqbCjL9vdLYAKk4JdR0+g+4sd
P99Fp6z7JIVOUPH3atxhGVSt3/XyjRAqcOU/H2xFzZZ9LuxCr4o55mwOpQJP
lF2PHrpnKnx/JFqsZrpm1xkq6BcES9dFUuHisXc3eM9SwXW9jNePC1RgxR4J
Lb2I+z1aeGEC3VXO+NMTS4V/uzUoveiDMycfqsXh91FV6Vqo+oPCDg/03GK0
pxeaktu05wY6wOJ/23qFCkrubfVj/3l50aboKtbH5nGQ8jUqfOmc6VZBjYNB
Z/tNKgBHYnII9WtVuD2J5trrMz+kUuHTKUPejFtU6L/Ap5OHyv7o7SkrwD6K
5F63/j4V8l5XSpxAY7o9bok9wvgWJXy2FFFBfOm6miG6OuLajYznVEhVc2o3
qsB6p9TezEEjN8GHWlS68taznEoqaInSsv+hm98eFP5dTYXaYI1lbS/wfY1m
oSPo9V2lgTOvqfDya9YMrZ4Kgyp/t7HRkpPvJ480UiF2h9XWqSYq8NXeaFzR
TIXbU17N69D0clrANfSo3mPlKpR1equfQD8Vtvh/1W9E+cJtxL+iBG+RuiOD
VJioXa1R9I0KkkPtPE3ojVtzylu+U6F7+ImZM1rKq/bLHY1Yn5pp/BPreTFi
/y00LilGas8wFXyq+LgC0MBLX4wjRqiQ5Sh37Ar6Trc8Iwl9kn7lYhfat6f9
Hg09OD1t+51Oxb/Lqmm7GVQQeJf3rh3lzvi95vcMFd5v8H9i+JcKzUfv5fjO
4vwdkVDPRA95NteS0DsmPo6zqMC9t97z6IEHfz+IzGH/r13mq4uKl85WG6I+
IDIpNo91v+V1MBz1iiClPeOlwRGW21Q56vLaNO8d+hD49rbz0WCNUo6fkQAN
0otufJtE14wK1bKFaPC2y0eaR5gGC9+Ti9ajD36vC+QRoUFSavSkAjq9PPzt
MzRuv5FEFdqblZzYg9ZbJRwaRdmLkWAsTYN7KrQRaxkarNDveHoAtc9IcvNa
R4OSjIkof7TY9IVjGFq4pB4kpUgDT/rPczZogqremTNohJq52U30e90xrnwl
Gpimf1QvRl0y7QVXb6DBD7UzHWHovbWkTDpqn+z2WEKdBqddt0W4oBEOO0Py
0N9f/3F9Q1W6Zu+Kb6TB1IbZKvYmGnQLlThxa9CAtUUyVxS9uE+Jfy3KXSJ6
RFSXBufOXPQTRx1Jwayj6Bv6v28WO2hQmWGYsFwP4zyz05QHlYqpMNE2wOuX
Jh8Go6Y/6KI/UcuDq6YpKMjkV/LtpEG7ynAkoJaE75EL6GeF7loZQxpY3U+5
rIoa/t6wKX0vDa4cSzY9Y0mDJ95tu2PRFPPOX4N2NPBr7AgytqfB34Iw4yjU
L2w2uNqJBuFcaSY2zvi88QnDg6hEoq3FG1caXG2iu/9EE5pbg8r3Y5zK5l8/
ortcSypvHqCBV7mc3FNUv5et7e5JgybfeME4Lxr+Ln8114LeCdXVNPfB9Um0
efOjNPizmOtPRcOSqQr2vjTYfUmgLgaVNpNbuIVePUq+bRZJg/38h9XuoyPS
35ReoEvUUedmVKN7h0/XWdx/2JX9v1Gu0QsnadE02NlZb9hyHp83WPdW4wL2
y6GXXx6hvdx6bTSUvCBZbxRDA0aih92PqzTYdmP3/N5r2G+zBm8vo3sfPDpe
iAbTT6V+RmsvPIsbQDV+pf8SvU6D/Ai7hyfR4OfhnDfoQ+uu1hOpNBjQ/n6a
gb538ndk3cJ9bx+Ltk2jwe1l6+pj0HJNnp+JaGLVivY0dMk3xT8fPSTpnS6f
ToNVjCY73Xs00Hw/FMRGz306nOOUT4MLxwffm92ngUD+nJUd2qU1YxWCXlj2
tTULPfZKfGIQjZFP0JhD8wfSXzQU0+B8lsrO0DIaDEq+zthRQYPRQc97buji
zJM+2UoaBDwVD96I8l+Vra+pokFp5Jfif2j6CUvfsGoaiB8RDI+ro8Hy+jhx
zVc0aOA3O22FsryO+5WgNA+dsxqvadAWFJ/rgkpNKMn4N9AgeejwwhBa3rP8
qHAj9rnZ2Ri7JhqUfRnZ9Q3NFq+SG0PHpLPNpT/QwPjutAwZldnrw5pHg6gF
WlwdNEilfPXx6qTB9jWx+R1oVuFQx44e7INwt8DVfTRQsj6muws9kLKVPjiA
83/W8cQ06u63wV18EOOz3MpvglaVdJz/if4lPzYs+0aDCd4U0h9U/OYf+V9D
OEdrEucEvtPgLL9MgyWJBsyVJefKULGSg5okVG306tXzFBrc3aX3YhjdWdtz
OZ6K69ICXy4waGBx6pH/aSYNqndEcprQ5aHfUvvRFxarB0VYWE/tFy/90Mae
LfTjqHHAzfwodOeLtXPR6L36Yd52Dg0+ZGuv7kV/iGdt6EfLn4Toi83SwG7m
c/k61GJfRUM0evFTw1X3Oezr1x/XBy3QgLePe0c4qhzUOpm3gg6lGsWKBLSt
/sXRlVx08NTKHXzPQ4cdKX18tSvpoDKpnfcKFRmvvnVxFR0sNJWePuSlw7LA
hX0jqEeqpRIJ9feNmfyHwsST62Kr6aDUeLPaQYwOfs5ywxEoHp3MveJ0+Oup
S8iSpsP2yhdcCzJ0WHer7J+WLB1ieSwGX8vT4XN44+F5tP9jcI2AAh2MGS28
HDTY2eLFlDLed+TcRVkVOpifPWp8D924ZblI23o6DDUEO/0n/XZz/0FtOpBI
VqXXUYOUe4qJaMWXx7pCOnTIbBEIPItqxXyNq0Q7t0XnLttMh8fkM2uE0CEe
Hrs8dPHu0lghKvdi4u88qvpTekJ4Kx0CJje+XalLh3i1N8bH0bW/PUgjaOOb
oTFJMzpsTegobEI38w5tH0SV9gwatlnSQTYOZhtt6DB/++2hFbZ0UJDx2ed5
gA6+/HHvD7rToYAxvfANvRbRdJr7IObxdMWtEXQ9xV97jQcdfkfc3519jA63
KkD/ih8dLkFY5W+U6v3j1Qp/jFPYrpZ4nA47FbopywLoYKcsyjsaRoeb6uZf
BMLpkPU45JQB6uT+abTrMh0eqrxw/IlmNrlHkdESYRvxrKu4r5/8NWS0QDTC
WvMaHcITEmb1Eujw6e7FuUJ026Xf22KvY/2lPbe+uYF9cVm6TjiJDrPSPevs
UKrdpayONDoUrvbinkXrzfnOyafTYdxs90xjBh2EDeW8+jIxLoWAFPzLCeXp
v76U5NBB8EG+yUAeHWZuO66mosHasvET9+iwKfxTAQfdoOxyWTSfDoku53Nn
0d2kFLHdBZgPc8+qeDSAb7A6roQOPH97OtrRSsfjYVdK6fBv6+P6m+jr4cd5
z1BxMdH5N2izMGvb2jI6GLnc6ddAH0jZvNqMtpw8pHK0nA5sYQmtogqMS7ax
4jV6yGEz9eQLrEudzUORGrx/Y/UjeTS6jav7TQMduCqcue820UGUa4dgDUoX
3Z22o5kOOd88dQH12967wg4V+qA1EdqOczQQTShEDx7jSXmIhncvMKQ+0sGh
N9zvJBpk8uVtCXrXZMt4bg/mnU8isQ5dJ6UqP4humkgUVxmgw9RNnTEnNIRg
ci4Qnda8LpeJivqNp82gZSEGevsH6UAWzq1KRB+ZZRncQ6cDhMs70CTufqHe
b3RYPrHD/Ml3Ong/Op1Xi67yiftdPkUHmyb3SzQ0/yDpLi+BDj+q2/TqOTj3
M61U5xnMt8mWWR90zftNjLRlDDi21//+G9R0CmK/ok+2+dpt4mdA6VTMtrso
/3pbviJ0yCxe2kSYAXnuqymZIgx47VMtegfVkWpruyfGgPY8KdYUyhqwX8ZC
X2x6JVu2hgG793mYrpXE923b7bAOrSyni8tIM+Den0fVLWhbw1a/drRMYbxo
lQwDyPYP6KLo3UfvfdejdSPuNH9FBrSSGCf2KzGgc9lV7auozsOu1CLUzkj0
YC86zHVaoB9tnJS8GLWJgf/39HNPovaH3xD+88Tz0KV5dNriw4Ml9LCFivJZ
DQYoq74d0tNkQHFTQLWaFgO2/G0wiUDFV64wm9BhgOvpVOU5dJWJbtnqzXj/
vgZrLxMGNEzcNCwwZYB5dOTVh+iWOPVrx80ZsPZl0eo8dHmkkDHXHgZMtSgI
/LFiwKOW4mF7awac1Q2SvIfGfQk2O2rPgLC8n/IZaO4Xj8e56O4w8ZBC9I5A
70FLBwZ48aYueqHxnSmvdB0ZMNGw30Z6HwOqFiKP70XdDK+tTnRiwK2UnK2T
qBxXQQ4T9R569nKFCwNqdkvtlUFbQuYfKqNLs7H+Ta6Y533Z7kRUe/pGCAPN
KlQQHDjCAEmHCqqjD753ZqX4IXTX7vTNTn4MGFD8s8YdvWCZmXURrVxyVLp/
ggHXK6P+/kS9biyJEdEdRwa5uEMYULQ2Zi2gDf5Lionor5kr7cWoQa7dTAn6
8RI/dxl6rve3YP8ZBrxN2kn7jqaWPHamoZ5tEz9sLzJAfVgg1B2tXWPfUo9a
/Hob9R59O1jkTUA786KsVWIZULLWl/9vPAP8TkoVO11iQE4VTfQc+tFvS1g7
eoA1JZ90mQEu0q2dj9CHSRGutlcYsPpj2Fof9FfQ099nUKUdDdTsNAbsN9i0
7yWqrbx4io6S0qv+LKAup5fn7UnHfnoZ89cavfO86m9HBgO6zDNGOajXiFOE
6G3s15rbr5dl4v2bzrjuQM9v3bRkjD58PgRT9xjgXiM+yJOPeQ5r012Flugb
+fDexzwLGwfVozbZH/1+o4XZG2oJ6KrkMz8kHzCAb5+BoTr65aFzwreHDBgP
tu6eRD8uEM8sotdvRv8jlzKA9wj5xZ/HDGgix+twPWEAT3nXLu2nOBcdg4uR
aHarm+0ttLIkbDN/GfbpipJjOuh5ytOM/6wo2dPkXM6AU7Wtk0bPGSByKk3J
E+VX7v95tooBczsKoxrQn71VlhLVGHf/ab1zNTjX4pc/xaJmt+9du4ImqFxP
u1DLgFgX3/BS1PvoC8PPaOPnGOOd9QzY0PD7Ui6q+OD5p//7vfqGYRMD7m/S
yb6LLpvrnapD9Zt278loxnNBbtmM6DvsE/77ylLoxotUqbMtmE9S+8on6OrV
rHdlqH/nyAOXNgZwmw6mH23HPIySPBJQD845MSIqxDgYQkNVwiLqF9Gv606e
S+lgwAh9IkikE88r/9x14ujx5Q2l8t14zkzts17/Gfsjdp+0GXrt1sppw17s
P8EHfO3opejjar/R4/ViS65fGDD5c+/IE5S1ml+pDH0U3JAkMcgAmelnCxro
QFuSKQPV3Hxiah5N3F+WtuUbA3wcz5zXRzMs/Fwmhxiw6ZQGnYH+if9IZ6L+
f/7Gf/qO3z+daxX4gXmuq8pfi4p7xLFshhnwt8admINWXtMTakBfjN+6VDqO
51b2nGgZyn1G2ZWE0tbL9M6gm9feqO+fYICu89ztITSye/eynb/wHAjXtpX7
zQBbvS9D21FVt6X+5Cl87uml56EEBsz7li5FobaDJhVnyFiHQ7dUr6MaX6Uq
76EXOtJCPek4p6tdhvLR7E/PTAvQ5mar6sw/DIgyOfLiN2o4020r9JcBr1yW
VpFQYVnL6bWzDHjM2vtIGX0ruJelMY/7ckwxuoNmNK6qLEDLD/TyFaK1+0rz
HqK8N33LVizgZwmFUNoixhV8Mc1siQE9q6QKEtFWsfrWnuVMkF/a18JC97kV
P5pG2c3m9cpcTOg7mkywQb8L7FlKQIPKx7r5BZgQUKHXk41eUykpb0S3dNTY
DqBJxRaxg2hzpc7YBGr7w75+lwwTNh3jlXdEP7W9F3BDo4qszb03MOHsZERz
Maod/ybzKZqTYfT7OSqy6te+VtRGtUP9M3ruy6GdJ7SYINZgOkdH5f71C4hr
M+Hex4MpMehhu/iTj9BY343JpWjzvNHuW9twvcKtwsrbmUC5apnpgraVG0/6
6DEhZK2LXRFqVC1t/QS1GN3vtsOACc7D3K9d0QfyzTsPoGTN3Y5h6NvS0R8R
aEBkg+1D1M5+JCvGlAl/QwWePEMLrHRufERleiS29aA94bFqPGZMWBTkceFH
U9XmIwUsmfC6sdEqFnUnbJiMRxWSD1cetGYCn8XHkvMoMWTzx6+o+3HRYQoq
Fm0rvtqWCVLMTAEJ9GFJ0e1xDyZ0rE+JP+nJBMPpqAPxqMSbRx9WeDFhVpjz
1P8QE/QfKs6/QxnDH0oMDmN97ZdqPFEVL72Hfuj84Sm6wBEmrJJlfHiJ3mGp
TX5DV/bwyc17M6GLb5PZCx8meG28vucTKtSrGzkYyITjU4N+609iHtQU0o7/
5/E+7x+nmPDzYFrAIjolxFulHsSEbUNlo27BTLi00VemATVoYrd3ou9lL53k
DWFC0e3ZrFto2+JJ5zw0IE3s871QzJNnJHd8GNZ/l+/hh+jxbSf0o09jPF+e
MXNQvSTX2Qr08fV1T1vOM0Gj59UB8wt4/avvJkt0QOs0vfsiE14EWYY/j2PC
daOfpC9oQO1bb654jOP7WidxdHv2j3QZtFpL9ox6IuZlsdhzO6phl6MZhnZy
nq57jpasVHfloE2BJ6xn0VV8OuS+JCaIyrzbwHOTCY9kHW9IoufP/2qOT2GC
Q9Bq0k10u72F30NUKJJL4mg6EzYUDr0pQVdanBqqQvNd3106mMEEdbMTZx0z
8XofKe0Oatv9ZeoBWi500KsE3XXHu7AU/fGacLXmP6WmnZpQ3glqRCvaEMZh
DqLPXvB7EFG5X5Hl/1l3Pf2C3x0mxG3vsH2FspQjmD/Qos1Hn/HlMKFYTVbW
Ga0JlGw5g8bV5KouohY6AebiudhfbU8bNqD3jzUJLtxjwjrN53fFC5iQILQ/
xwuN7eJJay9jQuHRxcTycuyTiZG4blTmyGTP4HMmBLY+DzatwHgyc/xs0D+P
+yJvvMH8rP786j7qVcuVUIxmB5+c+v0W52XPkyjZBpy/twn7N6Mb1Op3HHzH
BOs9FxdS0e11ns230D4b5Y9cLUwQ9vLMEEZ3xjn1uqGPX5qdUWrDPmw0f7im
nQlfO2ym7NCf4rTgDz14ftgseFPRTe/7BQV7maAjTb6sMcgEDufoZl3Uc3O4
yzZU8HeTQfwIE/i1GasyUGsjq+9l6NFjlxTeouQToloNaJD8Pm8Ces47p5Hv
FxNuhf1y2/ybCf6OERqmaIvZcv9rqPeG5ludaOi5kOpBVOpOyPVfFCZcuZEt
IErFvjqs4SqNBn1LkuCiYb7I2TYb0VSqato2dDpnJZWBbmgyFiqkM+HXjYGm
IlQ++E+yPgPjdS3270EL28zmx9D97B0+VnPY55qmKWHojS0/FGLRXfc0+wvR
Ms4T3zKU/qJe4hVKPCKbvGwBz3HNqNxz6LnR7SdfovqJU6s9l7HgmJ9fcilK
Osbv9RzNvBq/rwpd/zv5Bwd9RwqZVl7Owt+LmsLmPCxQSDG+EIj2Z1hHn0MJ
6cVzzuIsmHP2CFaVYEGjw7ehPWhRvNxjwXUsMN+QsM0I1ZyQdzRBFQ553lFS
YMHHGDe2CWr8fYEYjJZUxzgUabBg7O+O5k50LdfTpW9owYmJnwT0bsa1rlVa
LJgJe/f4IGr3QcnpKnrE0s+Sgzal6B7T02bBRecnzHodFmypyzeM2MyCMMHl
jNT/tCsUpm1jQbxEZeWm7SyY1RFK1kJjVzYeV9NjwejhRkYFemtqfL4b5bq+
X38G7VO2ZUvos+Doe9FsDfQ624VjaoH5avL0q0eHLDc97kKFOrQaauxYIHFe
Zc1bdLPkDc3/PHRXQ2PEgQWOWlXNUo4s6OUS8zNHdwjzrP3gwoJfiwG3fqCF
Z/41T6MCn4fvH3FjQdW3OVYQ6tF793MGOp6Wzf36AK4X2L2lxR3ju9iRQEKZ
pnc4VYdZMLVN3L8TLQ/I9WCie8+teHD6FAvufbq3vQllqfxU/IBqPB34nRaE
+7k6u1YqhAWXkmzcFFBZaUJhFtonoEefQoNEjrpohLJA8kmslh76O+VY2xl0
h4PsybOohYoeTSQc10udyglFK3oL1oajzdabnVTOsOBNRlV7Oqoq/az3P3sb
Rzazo1igw7O+RSeaBbSZvuPGaMje7QOv41lQMzgxa30J75O79jEYZZnnbFC5
xoKs0ul9o+j4e5/L/3nI7HvD1+uYf+HwDs8baE2tiDd6u3O9XWASC6SShc/0
oVY9CdIjKJf8wbjYZBYc4PnYtiKFBWsuxjqtRV/08X7ehrYcWk4oQC+8pJQ8
R8M7X6zXzsD+Uc0wdUEVdC+7uqMqyuojYrdZEHMyIjAgE/Pjsk72Nbrrvq1v
C0oyX9uod4cF4lkRiRVo1jE14ZdoBHC960DDLzv8EsnC/lt1RWH7XRbcT3cM
OIUWf+d/FoF+LqOWJ+Ww4PWRZtKGXIy3NHvEBCWbXRmwQ+PgpcEAStm3sGtN
HvZhmuwaWj4LDMYenRMpYMF+ozxjJTTT43hLPOq0S17tNqrvEB3zDD38cauv
aSELSqv0O6LQ5zPZY5dQL7c9Hp8eYZ1bbbZPoVM3dVeRUdqR86WfKrB/juY0
61WyQP5N5WoX1PaY3grhGhaknLLV469lwU7u5O9e6Db3woe1L1nwXThWdV0d
znfwhRJNNG59jcOX11g334ZTzvUsUBLdYHMc/RzEG97QgvP/d3HVyla8HhJX
pYxmeqcPvUTvr+W2b27DfhRN8X2HipSFU8bQ/vWMSyT0iFv5moR27LOFlDMD
X1gQPSggl/uVBVEC0WtL0flvUW6dfSxI4tlwz72fBVpnT+hFocorDt/a+40F
5ydcH8gO4TnHOMOyRau4ng4s/4Xzm/L3MS9qdXnxG6A/ln3yDJ/EOulyVSyg
dy0/DctNscBGXfFSECovyL7xDaWcFMhbQN8H3mbXkTCP9KqFLWQWnPjVKr0V
5fhaJ+xns2BlkOmNn+ixKLXaMbTEwdrwwjQL6jbUfNrKYcFllYIhY9R39Prf
x3MsSF/TUvwFfVkTa0ZF7yedEpnkZcNg1wUBvtVsUIngHxdFVw7kV+XwseHC
x/XB6/jZYOkR36mNxpcGNCwqsEGnbcpvvyIbHEeoPF2o9mP12Bm0QX+CbqXE
htIvVgne6Krvu/1aVNjAmHkZ5bSeDa7xifMH0AODidNtamywGxcTlFZng8kf
5UY9dJRZpGOK7n2xUBWPqjNPFTaiKs17JDU3smF8jt99HxrhnfbdGfU3k61o
3oLrHzYO4KC3VGWCZ1DmUtCo6lY2BM4LEwzRNudr6k7on2Uf2JK6bLjT+Pty
Jyrw2aSNgvqlU7YfMGYDXbczWtOEDWk/BXgN0aff36wxQzW/ND90QV+9kpkL
RF06fjRmoIbk3up+NGM1sX0ALV+fHrHflA0+LVs++aJ7GiP6QlAt0exLFPSY
8z6NeVTEMktkEXX7Et+XaM2GeuXRqHx0+n3Ek9eobrh0a4IDxv/k8yEJR4x3
0/68NajzS8Y3aSc2BCcqzeui7/JzxS+hysLxp7i92HDEqlntFDpT5nD1ORq5
sL1LyYcNT3wUknTQdb8pfVtR787HiV5H2RD7oo98HZ3sIEbeQv0CmC3qvmwQ
O6XeFoM+e9yllIay4trV64+zYXhXZ4ROABvi/kw2m6IS3ySv6pxgw6yY2Z5Y
9Pnay3+uormHDkf4nWQDoSadrwFNGxaSpKNZ2lEjrSGY19Soh7KhuH705T37
UceVvVMfwtlQqB4jworA/vn6RYaDOqwZZE9ewH1HibA0Y/C+yM9/zdEoV6kD
ClfZUJIm1m6AGhCi6Vaomc+eNT0JeN8kj7jIdby+bmxGBs35XkAYQDW7xo3V
b7DByfCgsTaa4NnAnYsaSWqJayeywdp2cuVe9O5A1vl96NSqFYpu6BqltHvu
6Mqg5MLDKF1t60Ad2jp2IakTHVxrX5CUjPEGPG7uRMO5dIv+ocsoAnJJt9jw
djj/y2d0vU+opnAa9nekYdZIJhse7eGM7brDhipCdFUBKs2x6OXcZcPi99f+
27LZQFSpHTRDK0o0fzLy2SA3+yOMgx7WceySKsD+a3KRmC5kA++/11dmUaXW
E6NLaOBsi49S0X/zAsW+KG14pPU0yk+1ly9Bc8cvFGsUs0HKZT37NNq+PV8w
7Ckbdl/7OPgGbej4eb4dtX45tqWtGuctT/yO5Atc9x9DWBpVv7w9VOkl9vMl
5h4nNMojn/c4mp6369irNjZEnxHK6kLD+gwdvqPSZt7LvT/hOvTvYTlo4+I1
0WeoxKsSq7/dbEjesvGbYA8bem45tEujQylp8e8HME9L5jxyg5hP6U2jiugD
eGnt/Y0NBxdqr3HQ0NbhPuEhnI8W/purhnGeuN5mWqHfpARFwlDdfueGkRFc
L+j6FM8o1hmkcvegO9bl7X85iedSzvA+iSk2pJQWhcmj8va5jjroI4Wl++5o
5M3jITFoKVWtPpDChhhPe+tJNNHMoZaD5oxatw7TMK87Z+eo6FZFcV8VOhs8
VL3salm4PxurRDI6eT1ANI3NhseqDwcmOWyQpO5q7frLhonXc+sX0FQeT7bi
Auaz4+vlE+j5zq1N9SjThHV+fMU0zCU9VN3BNQ2/jH8u7UVvWPDrlXBPgzu1
Qu0Vmh6m4NCOPuq6c1SGfxqm+m8rv0GrJTkrmtBV03y+umLTkDv89bma+DT8
du3g1UZVD1QZiEtMg3+pqUQO2hRjxmxAdQ89k9OQmoYDNiznXdLTsNtWy9gd
lZ6szeyXmQaHjsg+Z9lpyBRX3FyIeiluIdsq4PsduvuLUBVbHoOvqMm6O5E6
StPA2X+hahs6viL3UAQau/nj0A/039JAFB0VIJclMVDSOcWNWRtwH4oHPUpQ
FfFpkQ7U72GenZH6NITvIn79gvYMRV/8heaGnxty2DQNlX+POlxGE83Xjpeh
bw4sb8jSnIahA+H/utH2XxaSv9DZuy9UbLVwXz5iSx/QnQZ7u76i3h7Jx6e3
TkNz6AbZUN1poG1e9ScZ3dHB5utGdTeHgsy2acgOE9mkhd7OHIgO15+GAY1J
9fvo3S3Kg7XobFmHJNlgGpx1qcLGO6chOLZL3gvt9MjdTnKeBkOD+e22ntMw
cnK8Ohjl02Ymp6EuvvtC3qFyQ8nLZb2mQUo+W0MOPXCqbujOkWn4INFicReV
/nRh9jma+SLs/eOj07C/Rb63E11n+vwKFT1yrnsZTzDmqTrqqQ2q62svvA81
drrjG30a8yS1Iv09ymxaxfqCam65GCQWMw2DF480H0BzT2U4HUTFNRZe2l6Z
BvPBHZ+80Bzv5L216JZtJ6sXbmD+/cWJPYnTcF1STY6AHv0sJSmahX0Z4F70
FWXXhdSOolazNiPE7GkQ9lT/ZJ0zDZuGNEbOo5likm3X0DjTcWuf3GnQDnh6
OAQVep8QtL0O80969XonGpLn994DTRpJepf+ehq4GVtNheqnocuVwnsE7b7a
zwn9Ng2fCroTilADtwrfJ+j7U/o+ZkPTINnoZ3MU/Q7DxefR5Cr6xOLoNEzG
r3MQHpuG+Bc2rcoo0TRESAWt/y0/cQlNW2kn9gg1kH81LEzG/rVgX3NGt90+
xnUWdRmZeeZCwfdlU/TvovXH9/WWotNpDpRg9jSsjW1VeoUKvVns+oNKbGrL
t5qehqcmhe4+qNxU38NKVFw8wVrl3zScrjvpkoemPdTbeA99q3hQWnIVB9/z
xH4najxtlWKO3tEZviknxoFXHqQGf/TdkdQ/qeiHDYJkf2kO9PQtTcvJcEBT
l2C5DX0baEjVQ+Pe1zv6oVIJOZFhKKzYVfkBVfxhW6soy4Hg4gcnldAsb9nu
v+s40PSk40KdPAdCX0y7daP+73Y6nFHkwJy9YnsdGrtmof4VSlpY3xqqwoE1
A9ui9dZzIEzWjmWAvlnIcHZA1zw5cdgXtYnvCjqD+s1ad1WpcmDhiZXiUXW8
Lzf4VRAaq7/i8GtdDqy4e9FQfRsHJAzH2/egt+fM9UP0MR7v3BxdAw48kqnY
ZoDevbMQaLCbAwlpkRQj9MenrFFL9Nx7vgcE9J0gPx8DfS7ha8QLHLDTX/yj
YM4BZqaHhD7q2OzhWYpW6dwrOGTBgWEhzyu30KHMD6fvoGcNVpPb0IDW8zYi
eznQNRmRrId2LMb9uOHBgdnYmyEvUZUOc5xtDnwt7bJ85M8Bo6OGZnrHOdA4
X6GxG6Wd6r2Sg76RDLj6BL2vPajyCj1XnGL54CQH6kXWqL9CyxlWRvXomXq7
ZcqxeP9O3mgDVFF/xZt9qMDAJd1t8VifaCwGGijhaBiI7jm8XaDiMgcuFnWo
96Gx6knmAlc40PsxqYOZwAH+d/tKWOjTAyl7va5zwP3czLbjaPfloITLaHl5
n24y+jU36ibfTQ4o/bwrvg7Vibsb+Z/u1Qp+wbc40BxL+FGNCkG89g90+CtH
xCeXA48DNr6LzsP1Ln+SjEPzYjVLTcs4wN27ju8Kukn+7L02tCUjv+ZOBQd8
HMWo02jO3irCEnpyX+/tkA8cOPBU3qcSleWWD2Ki4g0tRVs/ceD7geCDHejm
7fJf/qDDwU+lF9BfJZcE33Rx4DJRz7YZXfXb1O1rL86HvIvFDNqUeatc6gsH
lhJYLX9G0M5TJTdGOTAWvPCxED18Kf+Z2wQHTFa9HcxEXfZ1ctWgWw7/r+M6
j6fy6QIA7i5cZBcie0XWLCVKZkq2RGQrZddCVEJRiFKKCCEkUiGVJRHZo0Il
Syk/S4td1pS74z29f30/M/PMmXPmmXvn8wQV1YPeRl8PvwaDkjVnPoAxGdsD
Qyfg99BffSQDdKVau5aBEfoMmzd/F9Fc/gN3Jjg2nfRIe3ERPVmpz89eRUVp
/Y+0B8A7cid9J8HHfNqmrvJUFFppkZTwz/u3eO6DJ5JijyevoyLyn0zxUtB0
H/+vLvDrlh1DmWpU9D5s6dJ9ULTl22QBqHm/e0F6ExXZY52Pj0HB/ln9p2CN
xMrROT0qep6+j38BDFYR8SBtpaLs3Yokc5AarW0XCz4ITfwSB27qb81cY0RF
cY8dp9aDkhZPT2mCj8ruDzHApzJCiyGIikoXFOtrwLQwTStnUyra8TWJEgyW
8LfGXwYHfX0G35lTUZWy8jtPCyqSECwW8Qf1xlbVLoLCkmt+6uyhoiNG5V1m
oHhy6TUPcMuk4O7X4F5brW8dYJaNQdEnsLxAjS5mSUW3rkppHwAT2Jsf6+yF
eDHpeu/A3Na0gvegl+GO87utqegb//RxyX1UxL7q91sVpMR2vNYFZ3ME5NPA
3ngTq7vg8WLbS/dBQxv/hmfgZHYOqxk0DbYebQMFfq36T9aGiuRb+V7tAvs4
Ltg57KcikSsJ+qOgQW9bkJ4dFd3fYbK1G1wtl9szaE9FDSNThnPgCe+VN/0+
VNQp8slqFuQZilLj9KWihZ0P568GUVFTg8PuMvBQnPvOStA64FRr0DkqUqLJ
6IWB3adPl0WBodKJN+1CqYiW+vt5D/jZiLv1Bxg+9qJe9AIV2VkHbokCDxvU
nLkMBr7JsrC8DO+TeWOzDWgT8fxtJ6iyMHZAJJqKJjZRGGvBJkHWBWMw/xtX
46EbVDTsvZbvHEjmfFHZCc6nWSu03aGiPbSB3aJ34Rw1jjZiUNJz1JA/F85f
+mkvc9DLe5vfKfDNcYn9vi+oKCrc0NKkkopyjnjXuICRFZ4u+2uoyCrhh2VD
LRXJXpqz7wRHqkZjTN9RUe2kdFEMOFWsM10IjjTIhtr1UZGWfLmDM+icXk0N
Abs9FBZCwfV5r7uawUregxptoGW20YG0b1TkKD66a/93eP+JWa524GmnEysj
01Tksa1SbAz0SVD0WASTBo/on56Fdj2/h+4cFe32JG+1B5WoqZxxC1R0UObu
fBvYaLf6ejt4Ie7Pp3g6FRESllrSwAtRQlVlYGqqVTI/C+pdFXtjPXjjbVYw
As8wcue9l6koRi5+MARM8gltvguqRPLZ7yXQkN5KQVoIkYa4jJhzUeBRg4jl
tRQayiyfvaQHDp4rHLUEDXp1XCZEaUjpcIfHATEaGq+Wm3QH918f4z8uTUO2
asEyieDNLANSPRhY26JwagMNeRM1wgyUaIjgHOZoBP5YnRq9sJuGZBqLIjab
0JBux6MreuDb/OiBSzY0dOlCsfk5Wxp6YrqRFAEqm3idLAXf3rpo1AbSUlwC
foOrDRrcLjvQUPC6uZEGMLRw7d9e0Fuj16XzIA29kzvGPQeabCT8lXaG8V09
/pfcaaiivPVbLnjs7VXdElDhjKCjwxEakjaz3JEJ7qJvGq0D5Y3FiY9O0tB7
/06fKlBwJeXhZ/A4g20+fxr6b3pk7A6gIdLNT7+Oghm/NG1YkTS0snXzSXIU
DamnqbhyghN/fszmJ9HQoT5nmw5w05T6Qg8oGrw1bwYU65JwdE2moc0C0vvD
wG8Lhio5d2iotFBYWD6LhsJb7JoUQCP0xSizEfqPmSRdekVDZ/34JZZAFa3Q
EHITDRGrE1vp72hItv9CzsR72GfevD3EDzQkvJamW9wFcQ6sLZDohvlE0v7t
oF7X2L0Nn2nI7QVBfiuoWa15959H5mQ6C0ZpaEDtIKfnGA3FZQQ6eINmqb7l
tHHYt5D7Q1oTNPR6R/hNbfCErgv/WSbsW6WhdByLhpL0nzr3g2E965hfxejI
pc2oQUScjn6tjATYgZ3VvB3/tPx8OcQRzLdud70J6u8yKm4D10TfWb9Wgo72
G2/00QZNDGhXHeTpqMy4ZN4d/FE8newDcnLR6/ZpwbyuGPFSsN7voXUdWL4+
p32zLh213DwnLLGFjs63+7tpgkV3m/sNjOlIcnEhNgss/NLw4SU4mrvkJWVK
R92zeufcwOXAbzqeYNWEUN2sOR1teNodbmdBR9MxY9sfgG9kro+pOdKRBjVX
KxMclVi3rgQ8J17Pd/k4HX05fFHkDpgZwm3yEtQz8bqp6kNHFTWlp3r96Ej3
JWEHDVTeVGNE8qcjm27V1+rgh25+v03g+8yeIAMw5W/Qgg1Yn7ivIhI8NsdF
toyiI8G5VrdU0NNii81tcI925NCmBDqK1+Cu1QEzIplDW8DTOgUGMll0NMyd
l/8ItAjhQB2gV/JvK8EmOppfNixsBSe/qXJ+Ad0aVO6Ogy73FteId9KRcPH2
B1vBmq0W5EBwdm0c4WsXHe2wEn8h0k1HUZcUlOVBgqC0pucIHQVcvkyMBTuv
J+rcBktL+yVa5uko+nGLzrHfdDTH29PgDzbbvGtO42Qgr6zX4b1cDCRkfNtl
EYwdjmDwURgoLJ7wTAnckzhhpALekegpn5FhoPiFECs9WRjn1q3cAb7sQhKG
qgxkes3k2XOwaKPWhXbw9ZmbTiu6DCRiEZG8djMDycRrFW0D4xQSap7sYSD7
INKRq5YM9FM6QyAdNC3otlxtz0DbTzc5JIBpPoq3c0GDhbQNNgcYCPmdT5kD
Z24nNQkcZCDB7DVDS84MNKGY89PuEAO9FTnrdgkUrec9J+rGQCYa7A2NYK4c
d9U/ewPHFjqOwXOaj6ZGQe5zAV2cxxloDb1zz3wwA7nfyQqigdsqj5whnmUg
8RSduGfRDNR4qxxvusJAw2vP7cwE1Ws9TxbGMRAtVtI78AYDlW6eDLwP6p9d
clxIZiDDMVtpuVtQ78C8qxZYnBFtfQuUEhX+9AxsbU72qgetLZgDq9IYyDE6
qU4R7JUsv7cFJHNyXZPKZ6BIrdTMTFBSyCPzC7inf0Lrv0IGuhRLFJ8G3aSc
JufBbbnFUwrFDNTw6+9NbVDa4lCWDagR5b9JsJGBbvRwPnIAe57L5gSAdrxe
j2++Z6A8bSkRgw8MNH6mx383WPd8emLHNAPJkmf+7ATdhQdH48EqefnDaaC3
sewuoxkGklOKyTQHbR+L6F5fZKAcVyUpCyoDbU7e22QJZtkaYEewvPHrvXgw
nKkrmQiqxjS3NC4z4B4RdXkL2onXBr8H2zo/qSUSmYjiGhGzg8RE8gL2N8zB
PW+kNPTJTJSseijfDCypJwu7g1j/7NpXEkykU5IvRwcVQvdJbl3DRGtuBV5h
SzNR6sgldpwME+57De4i8OpqlwLb7UwkEbSG+9Q/B0hqN8F3knxHbBATeUll
3wwFBctLlaJA+g7vyVhjJrpiKaGfD9Z3/fEpAit2NS2EWDBRpmmCehNIsdI9
9QbUSeE0+Ay6BIo9JVkykZXsZdJqMD3L2bFzP/S/G+SVtmMiC1f1jevAUQGr
5+JOTPT0a0jpHdC0vORIFiiRritpd4CJRrgdvXPBpM6Q2n9qSlSt8vNnonb/
kpQ6cNKsdPMv0Cf/gQv5JBNFDH/vUzjHRA0ifMddwBK9z41uoLXn/PtnCUzk
qTxaY32LiWRbPi1fB627RI7dBT1Ulu2l7jARzbkkZwLc/MhIawp8YKejnJPF
RGtn4r6UgBEkdLIW3FOge0L7HhOdDKqefwF+DKWF1IBuP3KG3xUxUZuKvuI0
yNt1cLVRMRNN72XIvXrGRFUdgo7pZUx0zFL89S9QU6zq9ttKJsrLS3pv+5KJ
xLtvzbqB08eeZ87UMlH5QmQmqQ7i7e0o5QfL9z0kC7cy0d+5kwa24KoLnAf9
wL2xbesCBpioumiv5Tyorrt8SHyQiYaOHogqHmMipuJLdZNxJorab8ZnBeq+
Fb/EYjFR9Kep4ng2E51QjWdkggI/nexaBFmI62Vc9CAofO7Sle+gvNllSo40
C+199TNzgwwLvpeq6fvBxwPCI4GaLJQwUKl+FfQ6S3h8G0xPWu/M1GMhtewN
47lbWSjTMHywGKyZ+6PWtouF0GUeq0WwqXC0mg5mZwhv07JmIc6yg6dCwSu9
O3bWggFSlfuPObAQrj3VGw6+l1PYehn0/MHMrgxnIet9fb39YMFAAN8gKPqd
m+ZxnYV6NB/ZMcEzl5I+ssFnPMzXubGQ56tmU7k4yOtJmulu0Mzr52HWPRZK
yk/rW5vLQoMqlQ5nQYv1FJraAxZ69eBIVDA4lMROuQ8ukfpW8+WxkEMCQVAZ
FKt0kjEAnS4Gzr96wkLbiH19656y0J/o/WYnQeOQq21hYOw2w2+l4MKZcWoV
KJi6axe5Hfbpd2n0VtBmyDQTgTEd/R3GX1morusFbwDooVenEg8mlutvEh5m
IdvJM5wB4LvP6ZvOgHI+2Z0bR1joTXJNuzpYnGL7TRe00zfPdWew0GzdVg1n
FsTZ+K62Enzo1KDUDpaLSvvcJbHR7VIZrqfgF5Ffcs9A7/fMZ6rKbCTVUUFP
0mcj0fHxiFawd9xwg7gBG62E3+ObNmQj5sTeL1I72Cj6hkOIAjhl/C0xCswu
qLq63YiNjpy8lnweNDaIk1TYyUb1uzJtssF4y8XkhyCrydPQz5qNZHWnZcLB
bSnr6lvAlEea5dm2bJTU7X/i/H42ojYLqteAWilFZBcPNro7sXmC6MVG+kcN
27zBuPhfkjng94HnDV3ebBTJw05xPcJGhDz+3+6goo/XmPxxNmo76eMVArpd
Z/mcB7UfVPqPnWajc9on65dBq9bCN+QANpq+u+VWaQzkGcVo2n4N4l2M03cE
L+h4k1blstGvwFv8PqAI/7UXF0C7SJf3/DVsJNeWVW8LruQV/ucPGt8v1XhW
x0bNDgoSveCCQGRvP7izYdMH1QZY79fuunQw/b7v+69g87qw5oIOyJtydz36
zEbfRMUmFXrYqC7IvkYNXJg45fDkC9S/S1FlBtQlv+GaB8+mFBTVDrGRzQ0B
foERNtph0OclDobdj9oRyWAjD9Yu4UwWG4kb810oBx/+qX4wR1xC2wqC01fA
+YOGe3hISyjf9zT7r/gSir1gdVBu/RIqekk7GQVymoRHJYMX4t7k6WosoZXb
jzYNg9FHI/R+g2GZ1GO/dJeQ4NX747/Bo9e3yEpsXkIH43hVL29dQlFmKem7
9JfQYbJyqBWYqWThfghk5dc+8wX97o01XwOVV2kvVO1eQmbJ2G4YNFhf9Fjd
ZAm9KL8x+MBjCX1WVM1cBpP3/RLT8VxCDFkd2+WjsL7OtUsdx5aQV3DJnwFw
aFvvyzCfJXRbv6CsBvwaV2/3CrQNtd52JmIJzUop9t1NWUIXxz8/1ktdQle0
LWf/uSmEfPBF+hIqHa83X5OxhETePGnXBLXM1jYn1ULdDjPi4jNLqATzNeyi
LKNentQr3TLLyC11pGQW5JvcR5CTXUbGLa5i6luXkTlxXPoYqBd1UCEBFOo8
LCbtA+P1DD8D8Kd6Vd8e8LTZkOd45DIa3v5Kd1fUMlp4KHTlAihqbj8oFr2M
Sn86iAtcWUaMsqYqaTB6/9Jpn5vL6HWitVgBeD2g7VQtSH62uVYqH+IumkxM
gD1lIpVLIGbcrCluhf59ug+N25bRK4vBuwfAx0M757Z0LSPTV9/MPMDSedEH
/zxj95sjf3QZbXPd+FCJuYz4fZQ9/4IFP7eUsEEb75kKnSVoa2t9uAbeoOns
vQdyb1/ePMy1gnwOuFcEUlbQAY/v18PBb4HdbeLSK2i7qjS/OkjLGGrbDZ7i
DfuvUnkFCSVYXKkHYxVq3v7T4yjNOs9qBZHVv74uOLWCTBev8OueXkEn/0Sd
cgaHzhUW+IFnrzYfl01YQTLPPsYapa+gp5GNlr1gFPGa9BDo6ByipH5vBc14
XttwDVzXy8OMA+MOhm/8+Rjim3wQ4nuygvL+/ugWBBuMjYfFnq4gW87YKWVQ
7BtltzboK1kRcK52BWlkS3vWg5+yTf36wTC/K4ZBLSso3OX0YDZ4hd1LfQra
PM/Lqv26gh7Muz5qB2VXB7kvgodeKh8/27uC8v8bcTHsW0EnnMpEbEBWYc8C
1/gKWjpkbiMP6k6XNRuAwpXkA1lEDjzjHaSyhsKBKUc3iZAEOHDkjO4mHTD0
Fm1gC/iHmegtIcyBudWmPymB8SZZ7ltA0Yrh46TVHDiR+eGwHCjzQ++MAein
xn8hZi0HrldLN58B++Yz++bB74p/rOyUOLCnA7Nx52YOvGvqcXj6Fg48bxwZ
VQ+ea32x2A6ufHY/mGLBgWtujZW/AafthVr+ORySnXbWnQOT9SPeRoGWN3TM
boF7Vu+2zAVlDxfN1oP9Z6YiG0HHy3mbgn05sNKByIdhoOoN+ZhwMFhyaeck
SPLUDzx7ggPfnr/sngtyP+uJbg3gwOf1ZRc7Qb8twrWD4OHjYSPscA78XKkd
c17kwC8NTJf5wKlvBe1vEzmwfNZH3jXPIC+eoOoMkCE6ubkI/MZO531Yz4Fj
x2JNJBo4cK9fhaIx6L603m7fBw7sb9LzPAPcap7ikw2qrf6xrmOAA8ck9pj/
GOTA1Nk77cHfODBzwI39z+EJweyW7xyYU+pkVS84u6r07E8woVjrgPAPDvxr
QbJfG3yU1hdlCOpxjE4sD3Hga6sr+aSGObDQ8cPYFAwcvJPjucKB82ZTn7aS
CFhrNOzwB7BFY6mqDxSrWfTjphBwmj9tvwy4fZSiIAs+SaXrZwoQsLdccfYY
KP85c/U0qD/QvWsR7JmeHDATJGCN7zdI9qCvYG3jxjUEfFSca8QPHBfyPH8b
TPgtpfFamoBtNlhlEGRgnQA+Y27w4VzcqzolAp7n/XmkDcx8bNzxDpQ8/XJy
nTI8F8yo1ASHpv7LNALF3mh93QeGTJqpkjfC+Ov//qwFFVLPuA6pEbAHnW0w
ASYc77u0CCqRyn64bibgkaYzdefBAM5rRYlg29jfEV8DAnYqun2ew4SA+w/Y
L64GHdps5RXAE3upQRw2BOwa5EjmAT/PBDqIg3rDfFQ7WwIm8UUFKu0nYOnd
Vw7pgysSyXmGIKNx9X0nJwLeaHp3tTPINDJbdAP7zQvWuLsRsNxq+pqvoP9L
rXujYN45Jbtd7lBXd7uIF7h570vCGXB72zz13lEC5jhYptkGRo4cfvkOrKnf
UNULOgQkt770JWCiaKcRG6xhsevWnCDg01LMFTk/AhY6pcKr4Q/5/BXi3Q4O
yHcvx50i4FUjt/9+AMtOJyQOgt7u+wI5oqAe5djBwssE/OmNbuEUeHbX1m10
8M/t0Lvpdwi4MMMvrwwUmj5h1AzyV6QrWGcRcNcPTm4bsLjI5ZMTaG3EWU/M
hbw46yvfPCTglBD0/jdYHfrkgnwenB8xgV/Piwh4+GXDaDl4IWextw5sHsMD
KsUwT144XhVUktQyUANJevnLO58R8C37pHu8ZQSs/vbA2XXgyDln4fONUJ9h
Y7bxZwJeOPpLPW4a9kEv0phKJOIM/c5zPCQiNr8hvWkV6MtdzanJScQnEumh
e8BFjesGzuBDvd9C04JEzHVN8GqsBBHTaq/9X02fgNgk8KOdc1GnJBG3esfI
r5MiYp0xtqISGJlAlOiTIeKhiZJDdqpg+LEcn61E7Jep2BFhSMSO8kWNS5ZE
HOP/ee6IDcT5LvshHezU6Yp/CSpt7d5p60jEHRuGg+LAPq7fDjfAx3srbj1w
IeIWj75nj8B1+6ocSsHLqcyxhyeJOFBJMbA1jIgHg6WffAd/nj+1fgp0sI56
JX+ViO+ohJz/lEXEmFUh15FNxOlN17YTc4j4wo6Svbwgv1PROlo+ETvvuzqr
XUDExJvqErog93Cc2senRPxf5orMKLhlpf38LCiwc6Vl+jkRy1DG04+VE7H7
4M+Fi6DK0N19Xi+I2JTwsrQL/NpmGtMLxm1PbD7RRMQhP2w1WB+IuETudv3a
diJObWqZ3AB2TG2mTv+EfaqteKEyRMRbQx87aoB/5XpUntKIeDw1VV2HTsT3
JuMe24IKsyWULDIJDycMvWsGr05e3tDxT89vycWiJHz7d061nhgJ+5Yc/agr
S8J+yYUNKWAtk2BxH0xcfahxVIGEf7nu07VRJGGe8xXzV8BARgbrpBIJ89dW
61wEnX3jDl4Fpxb031pokHD/f6Yl6zVJODSp8bQmqJ1vFSSgRcLUOvMGMbA3
ZrJjHXhYm0NKyZSE//haV28Et915Ia4K/my0idn8T1XaGgPwb9P88b2gTve+
YxJWJBx/kdq+E+yJ+E/bGFTxNzxd6E3CYk7PnGrAvVMqG1+B88yCqiaw3+NQ
a/FpElao/3SkGtScF5quAUf7i1heUVCv1V4u7ssknFynIbobXNHNYVmCewpT
WZdyoU4z35BYUHBc7Vf8v3bwPutfxSQsuadizQzYVD9weBl8nWh8dqb5Xx6H
LOgdJFzqZMWX2w3rV/+OWpgm4XXlS2vlZ0g4rsSHpgnuWJF0iJon4fwI2uw4
HxlXT2+wWwHX7A1KWsUP8ruaHJMnY6eA9N8UBTLmSjW+IwweukvLvq1IxuZq
PXYySmR8j7cgWgE0MBg6oAVqWZpqam4kY7r5SG8+OH78z/tysKs9xTVMi4xF
DWPOxIPi583t0sDgyE91RjvIOKCtTcEc5DW3ub4HFAze8H3lKBmfsf48r3SM
jNM7zK4og8IBp8rsT5JxKk9Mvj+oFNf+JxL8xq3qnB5ExlLj/ZdOx5IxYVNK
fBSoXDl34zpoOSbvePcmGY8NCHRVpJKxx+EaWeFMMjYTEYk5l0vG2wKdPE6W
kvHObTOcZl/I+Czzz6nOXjL+Wxbt9BP05F/oHwdjLxpTKvvJeFNEm1kr6KLd
eqUX3PO597nINBlnMcmHSFQyzgg3XEMG/2RuHOEGRQdSg+LA4AFJ4SGw8svr
/EnwXq2DphkXJ6ZtnfYNBe8WD7teBd1Hb13JBv9O9S3QtDnxiQ3HG2x1OLGg
Xna0C5ipYtzwfA8nVnpr0Kd8mBN3O1x9r+fLiekWwz+K4jnx2jtB7WV5nFjP
prL5BYj92d+rQC8XjtaNhZz41A891j+dPhU0qYAijgWqjtWceMtjepoPOPQ7
j3IevGtW+6qjlRPHc85uON7OifmvKq29Dr56coiQAqZXKdorfuLEhLzf3yz6
OLGzoM/Fa2BuXUJ5AngtqPkBPwvW4zqfYS7OhVsKHlUfABmv8urcwGQuiuJX
TS7M7dbkT9HjwkbDGYyOHVz4ScDbFmUTLkw0DK00NefCYpFDZj+9uXClvV5h
+wkuHPhe43loLRd2FuAWygEvx0YY5IKxDi6ZVV1cuItr/X+14NOqE7PNoGOT
LnvwMxeWjNdkKZIoWK3m5ZM7ohQcWOk2NS9BwfJpCZEOayhYq0xM2hdM3T2P
7khS8Ee1h0XR0hT8qd7VOVKegm0CK8NGtSl4wqlWdKMOBSu3tMpog5yCRfKS
2ylwbzOmNKwoeOqz1vQ9DwreV6Mm0O5PwQ0fkxmZQRS84BXOp1NNwUFXdMQG
aij46wx2q3hPwQ+3yddXgvwPPu9sBAnZnbqKgxQcG5dSz6PMjSO+htn7OHPD
/1xeldQhbizYmRErDyKBnvMax7ixKOfHC7rB3NhDoHWVaxY3/vJY0K4xhxsf
emCyehEUty3NoIKND2+36FRy45wioUsGoJC98qFtYAXrS3nHa25MSNyoveUD
N9YuX33QFPyh6rfeDmzbm+LxcIQb60YONRSALx5+7S0E10YWZnzl5cGfMK9H
hRQPJtln0q7Z8uDvb33rBD158H/BXD9mj/Fg07OLravSeLDSXGplQi4PNnux
l0DM58FqMnVlh9fwYpOQh2c3qPPi8Af2Wn838+K+wGHTT+a8uOXPxWtLVrz4
CMXa99dhXjxnr+hn782Lj43qvL0F1vzgeURK4cXWqcFmEeW8OPnIS/m5Gl4c
0bvraG0jL6Z2N1PcZFfh7R/aC5vBv+O05A6w4+eZtA2Gq/BzmaxYySOrMPWW
3k5O6irs21UUHDXGh03ZgqJpQvx4NqkimiHPj3dNSg/4UgTxpqSxsEaw8z35
1RLI7esYdGCVIH73KuG+N8ixc5vuEfBw90hliaog3vHk14s9hwXxTtcfHSVg
Z3e7ahm4zfbmUU8OIZxTOPCiFnTqpgjUg4+nnVdFXBTC0RGjrq/5hHFknMGe
3xuEMeHjmE1+oQieORFYFHlWFHco2e27CV4V/zl0G5Spb3QTvC2KK/xw5Vrw
5qcbmQrgFfWU7vP9kvh/1xjlBg==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 6, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 6}}, False, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.827283715753475*^9, 3.8272840341086674`*^9, 
  3.827343811864108*^9, 3.827344078408516*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"d994e61d-b79b-4ee5-b919-2ac40db56df5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
SvnjCuwzzzhGJ8bQNddPTh8UmYI9g5Xv4n/HpqAzSrsVpj3RruqsFbURuK9x
8kneScdeaRc2Tf+B1s79Q/OTnIb9TKXr64Ij09CPcTC+VV9BJ2rN9u6PwH3p
X3/etHrsqRIJbV9n0bMnfGhKYjOwd/JtED6tMgN9mu6c3xOJngkxGHGaRm9o
U/Lau20Wrt9a+596nfks9K6WWR6raLRLx9sLUUO4z5wSLy5Qn4PeTvAyNjFC
H5nv/I8/Zg5/HuP1AfVT2HdonXPMNJwHZ6bw8opGz8N+8+1n2wQ3/QTXMbjs
5R3QPJoRp2c5fuH+Z9ORCbdf+D5JW/iU67Bv6mSVebR/Abrw+4+LAU8WoN80
0l6r/w171qqFyrjA3+Cxor2yZr/RLIlck5YX/uC/x8rt5zYOoM+5ZUx3XvqL
fx9cqp0KHy2Cr96tsBZ+uAT2HVWU38VNIP97Hs6s1tsfXP6ZQFAY9KbUsbJA
d2G/lxasxAK9U5SxGOSEPnyfKL+GdQWY/DtXpDEWbR+SUhIqzArnFerrcXDe
YoW+0fOwcbgCG9itU4C3b44N9k4cnlGHN3JANyiQ4a53WAnurrItWme1Ckw4
qKJ4Yc068J2doQzPDgHw/wBYgL8N
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+9FFtomCpuU+k8kSbXSfR+FA0PRCCVWyVBTOBiZcyjcnN0WCpWJYr25Dzo/E
6lHbC2y9yKGRuLpiwYfV4WS7SPi02heyr5P1I/HEWeeTaxNZJhKnN14cP0Py
LdWPCHi2zdD/PpdcHoH3Cj5YaEGOiMAv2QHhm8Nkpwjc2WBTUxNEXhmBY+G2
saV3yZMjoD3W02nre3L3ZSgcefvh+/B3lPdlWC0NuPFQk5xwGS1fT+bwLcmu
l5GmelLe+BjZ7DL+EQ9lKcaSlS9DulDPJKOI/CMc376+9mx5Tq4NR7lyp0Jf
PzkjHOPmvbzAGv+e8g5HxI6cx2YLyZvCIb2Na8fbRFYLx8jKlKQKLzIrHNmR
j0/KpZEbL6H9KFfF4iaZewnut/859+Q12f8Stnd9tGENkG0uofZPkbti0E55
X4LsjNZBhQNkqUtIV1jbdzeJ3BqGZdqNT/tvkvPD8Nu4Xj+qjxwahoj+VqvV
yz5Q3mE45sUe+XgLeWkYBg5ub2efJ8uE4WQOLzhSSK69iI2e27YlNZI9L+KA
VWv/z0Gy2kXkslWdded8pPlewKeKAw429mTfC1A1GKaglkHWuoDiKQvvydeS
W8/j9ASHNCmpT4wDz+NhSEW6QI289DyuuE03HGJBbg3FNpbWFbYnOSwUomV2
J55XkhEKo++D40JGdlB9CsErh6IP2hrkmBCY2t7XExmRTULQWGxw3fUo+Ucw
+ixVct3jyCnBqPvsdz/8PnlDMJ5+2nBcv4vMCsa6FRrz5VU7qV4EQSJZ0Fjl
SrYKQmKxaLxDKlkqCO4zw6LwkiwIRFnN7smSYz9TPoE4ZTF9lMI8skwgltb3
amyzIV8NQIPGC4/usH9/H4Dbzn4Jm4rJkwNg9dnx6u9ucvk57LeUb3aX66Lz
cg5aUs8XNRqRlc+h0/xMzL1w8p2zkBBaDou9QfY8C8nl2j9395HVzsJB4Dbw
a2437Q9/FBpMMp6yiezrj3jxZ9njZ8ha/gi64D34KZvceAbbPt4ZnnuLHHgG
RkXiZIUm8tIz4FvVj0z/RW71g625n1OmxhfK2w/6X72s/GzI8ENOkCL3lg+5
/TSaJn3deCOKHHMai4psKi7dJJucxtf44Z3dn8ndvqg+ubV3+bQeytsX9RJy
+1duIG/44/IWrV4vcvcpuBtK3LwX/W/7KVS7nODMLyILTqLSMbK36COZdRLG
Bb/Ffmq9lNcJfK10zy1eSy73wYbh9e/vHiHL+CBz1bdXf0eTXb1R/k+ALO8B
udYLOaoZDe++kZW98G3LCbHO9K+0/sfh4lujtEOP3OqJ3iLXK60xZHjia/j6
DpdectgxTGjQ8V4y8xvN7yhm3FtpeH87ecNRND/+JrM7gZziAbcX1/bFtpNZ
HhD0qJQVG/bR/NzxnOVtuXkjWXAEa783rRyXSJY5gnLL8UEPesiuhzF71R5n
gcV3Wg83CLJlZZUTyMpumOwfP1N+0g+anyvu10s7aR4ip7hAxih6x7fhP+n5
zpj8o3ZttwdZ+RAytafK6d4ntzpiUpPEvIt/91N/ByjdfjQQdJlsd/DPfWc8
2vw9WdkewhH9lanBv+j99uNz6RJ1619k330Ykin9xW7fb+q/F8t0n++Z2EZW
3oM9HvzepgP/0PN3IcjtrkvJxQEazw5Hz920V7owSPnYwrdzoeaCMSww7TaQ
Ej7xv+NGhjW03vrY3JcYwphlBTfJQF6YDtl3M5qU6wdCXP5tt4RJqILmKImh
ZAvgV8G0h0n/eh2cwrOvRyhJUP81KDE3Gy515l+vxEQvE8sorWFkwKNpiuzr
PjJLFy7DvWJNJg4na2N98bwxDw79RZ6LliqH0rG7R5AVwFqut3DfqLFkGZyd
H1Hv9WIKmcX6DzlzbFs=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8/YOHU4eh/Nz/Gvcn48nczj/B9F63lk=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
3Z9PZzauxv8DS3XXFw==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdlXc41X/7wE8ZXw0y2o5ZicwTDRKfSAgJKaFIy8ooIlLSEBqSWSgy6xg5
Rid7Zq+IEDJK2Vsqfr/neo77/l6Pf7pe1+v1vt/353N0CFnY659fTiKRppaR
SP/5939/9mzYVj72UU75v8RGRFhVrlG5r8ngjURpzcNcpSxkQya9Byut9Rm8
leDU279qY6whg6WIRTfR2M7PxxksQdCbfdOJFBMG7yKqbdpWF58xZ/AegjvB
yVnY5gyDdxMrfU4vdpRZMng/EWJ0n1e3zBa4RcR277Gky/9lzwOE+k4vugKn
K8OrEdodf7oq+64zvDqh9lU52Gm5J8OrE/LMgqvZnLwYrEl8Nj538ZntHQZr
EJuStML8JO7BeYO+Qe8A/vvgGzLX624O9mF4TUJ84h8+a1M/8PLmVoM03ocM
PkTIEAYLaaqPGb0GsXnWOKnd0h/6yn0TsVTyE+ijRvkubypnsKca4RM0fDgh
IIDhDxIjz9ZZnXN/ymAVQsx5p/OYeiCDlYjnmeILytxBDN5H6Gn9EbbkCWbw
XuJp/bSG3lQwvH87FbXNLnqh8P4jxYwbhqhhDJYhwiTIOZzaz6DXFDdt6DN+
DvPirI4cjtYLZzCFeEphMUgxiGDwTmI5X77xpGEkzD+kI5b4g+sF+BEzc0MK
50v4/Snh7mexcEdWFPQa0Jp8Cef/Dl9j7tKOgvM6nDn5ralLLELIC1mziB+O
ht+/F0VlRVz+S7yDeBAUaLrI9gr4Ve2cFOX5KzjP3d/pWbMrBu5/QOPn7Upd
YlFiJozrSKZcLPz+33iwxmmRipyufO33ev04uN+KU6BzW0scnDe+P+GVbh/P
YEGCqsxhf44jAc7HnB19+CA8AfbRrN22IMadyGBhQnFNkM1FaiL4xz6+6jSm
17AvQSXPLb/8Gu6b7L2lYEl6A/e1Jo539EQt8VqizGPscqMxlcFkIrg7nEOq
hwr7ZMj8kOY8kwTn2flOc/DIJMP3gXuf8eT6X8kw78wdaUkB9xTohVxi5DxY
UuF9i2hHMR3fkgpe8v1H2+cmyK7SXhFfU5B3hKmWKzC9hf18Bdyy2fcg2y1j
LjXyfAv9kz3U5IJW9LW0xWL+bWmw7w72Z6c7XdLgfZqoB6hKDSwxJzH3+6/O
Iyka9JaCsh/pt2nQp9ZerbOqosF9/dSd1JRJ5IE8uzHpQ+kwTy0nmHw6LB18
neO2aJFv6fC+8hrU79gZZcC+m/wvccrnZsD919jPdc0MLTEbYR9ccfqFaiZw
AklMRiY+E/rJnC+CJrPI/Q5pK0I0smB+Ulvne/WgJSYRwqZBFXTKO9hHPee6
6ajlO5h/4La2akrIO3ielE/Zz6i92Je069qq7qbD8939tvNrymM69IPupT3k
Wjr0Eg+F9eo538P8d0oOMwl338N+7qf5FB+1voeelPyDlCKTDfsekRmebA/I
ht6fRzLYsC8bPh870tEiN94ceP6CurCMsFM5MC/twcKvOmoO7PehdmeZ6/pc
4HxfCetk31w4nx9IKztemwvPpxNApewdyoX7001FtFyU8uB8QmSDcmZyHvhj
hny7XNblg3ftMBnMO4rs46MofC0jH/b7svqkd+4/BcAGj50ymhSXeEz5QFaV
fKlHAbyPcrHPiW5J2LtsVTp0shZ93lBr+KkVhfA8Psm2+5+JFMK8mDMxhq5X
C+HzWNTp0Rx8XQjnr04M0BY/of+8bn7cc7YQ9m8/u2moXboIuMEo9KKWzRKT
SG3Lp+VPBxXBeaFTIux5JUWw7+p7LKs8+9D7/13ff2xlMdwvwO9o9k6uGN5/
zostHlN6xdBPXTGQv+lXDO/7yInRK28y8PzyQO8ezaZi2K+CV/62HEsJnE/V
31tpTSmBXmY4uMfbrAT2e6mSF1/8CH0pP7u/bksJvL/x/N9S+RylcL9lQa7f
eknkZ7lGB1p0S+G+ZNd0n2SXUthn4tyVAYdnyA4Kqnq+lcg17yMVfsyVwv0D
/FSTL0Jl+P+n+WOis1YZ9H6jSlm9NmXQiyZx7yyIRy9F518Yri6D/cs2XssN
2vUBPq/hTss/tJsfwBvxKX2b+4HsYelguka4HOZ7Ob4MuKRcDvPf9pMdK++U
Q39Be3TxTRP2YepGjZ3sFfj8jzSnpTQroE8UZD/G510BfVC68jpKCXJDMYcL
8yAwKZKX3UGQoxJ8/zNR3e3ylfD5qcSzLGs0Ak+qiZdeEepTCe/PT7UlTY22
xBsJ75RHwrZfKmGfI6amIjv4qmDe/Pl9YtxaVbB/vE5H3qQ1ckjv1EJocBXM
3z4xfKovF/mbrFzc+8EqmC8iefuw7PZq2J+ik337gmM1+Ce3UtqI0GqYn99q
E+lQVg37esq6hrb/qob5JonVh/M31gD//LDr+a59NTCvq59y1cpyiclEgZPN
ucH7NXC/wnDgolsJso5cc6QKay2cl6k7nBRoVgt+U5G721XvWrjvElPL8sY8
9LRceaNo1jrg+M2V/lYHkd/kfSw85FwHzyNrUGHmG4J+w5kNZUx1yJIzD9cN
rKgH7s5K5nDchryC8j3vrlo97MPhXx+kblwP+2v08Gr0udTD+1TNGav48hh7
uQTy0zsx2O/vC28Vy0Ou7faZ2NqB9+324TivNI/Mt71P8rhYA/TM7VLZlEMN
MF+8wzA4ywJZlVKyMiQB+3PLhkqcqtDfLa6pyx9BVvGfydJb3Qj7uyfK7a4g
N8L9l3QuUVoVkHe4n4oo1MTe/0/RFzUL8CQFTx725JuNcL/00ZqH2i/xvFlT
Ebd+Bvb9644nKdeiz/WOrcn4/q/5IvQ9v1k+ghccVelcEPsI85/EZZ4YJ5Dt
NY2dfeywz6h5WSjgjX48fI5mSEO+dUBw/5Uh6EkOB1RNJViawGttcU9/sAfZ
L75IodmgCfoyvw2v668gUyK5NY1fYD8S0M0tWASeSJLcsafuK/ZcdbotXP80
Qz8arb7h1rZm6N+y/Mp4bAVM4o9LfxR6H3v9Aholjore8YRd4+UG9JnRpo62
vchxNIGLZJZPwI1x09RLGz/B+e2fwvZGSQETvVsFjIRVkJnfia7iscWepGLv
0RqE83R2LItblYX+WHngrHnPErMRj5hmWHzZWqBvUyq6XSiMfGad/GdLdeTV
ZONk+9PIr1ydQ875tcB8lrMRGRavkI+8TzVmq8f+guLpRS2WVvy+l0puGhYB
JvFEG7G3Hm+FPqR4WesxV/TGdJ0I8xfId6zi6KM0nMe7ztnW5lMrPJ+mlk6n
TS/yz4Ld0bbz2H+NsjkQIPoZ/74ISX2dV/6Mz3+dFCtihn6uXbtI8wYwqZRp
2fXY19hnJlwfG6lFLnygK5U8i+clXBKGhza14fe1zdi8uCzy8fyDA006bdC3
tkZp0+3QFyipKaiGIA9Lmmt40LGnFVs6dQ2hb5CMcTJaRDZRF7hkL9QO+yfS
uWhKhu3gBWyyqpLc0deJCzlueAhMjKZ5M9uXYH+z4UbqfN8ScxKGd+rTlX+1
w/vmjz1u/1amA+ZJWb/29bXrgPOd9Zd5x3LQfx9p/TX/GX1IxVa7q3xf8O/1
7HzCmPYX2Cd2iDkg/Rr6rWtjBq4HIqdlR6aQM6An5RGfI9YOoT+UnrPCYWUn
fh89TYow3dIJvRmZZwtdtxOez3Lb3h1cjtiLnlS+0h+HvcmAnR+pBX2v+/oE
yT/IAUO7bMsUuqBn4+GxmbnSBd7Bl0vw0hNk6aIZ+9Nd2A/ZstC0/ukGn8R7
ROLh9m7wJ+ITRNT3ITOHOsbc08N+d8w9s3hz5M3LLfyzHv7Lf4i8HZaEPLxD
PYyj6F/3Teqena7H+Xtd1Sr1Z7rh8+4af56wZu1X6KWivq4Wkf4KvdzeE7y3
1NDv9r+308Ic+fm4hUrUFex7znv8qbiDnEhtqbr6AnstLedtR/LQFypu6f/+
Cf050e2bCybAEy8av1GvM/dA7+fkFXuIvwf2jzIfPn9LsQfOO60ca2fVh57o
aGy+4H0Jz3dzJefMemJvf57vvkk49l6TAvck36GPdo9JobQgS4o2hilNIPeW
OE184uqF+S3DKkw1Usgh0ps4MrWAiabsEa3mi+jPBlTd9ArrhXliFO7PK5LR
t9kPVPKUIHuaBtg0NOG8/aHj4nOj6KUNzmtsZOqDeRd9hDKZRJDv3g9/kq7T
B+dJwsqNkqboD60yyTBzQ36nsvPHoQDsr3dbZsblA5Oa7eQGHTqwv6X/eO0W
ln7oXfu2KM7uACZ9J18nZPX6of/NtfC29zL68qOmtbU+yC4BZmG5FdhT1rja
nviOnnyl/8cs6zfwRnu9C+ukkbumbrxOMfgG+0SL3OBVdwEm/aUtJ/GFYc+e
qaARQ0c/PdXj2tWGXCA4TJ6ZR+YR//KItPY7cOCp103assjsJ6nmSce+w/yV
JS8ji9zQJwY13eCORh64ShXWK8be6cPfe8096E1Gf5qSFpDrSQMRWUoDwFxb
uhfJF5FfkQ/PVEQi76e0fpovHoD5f9QbFYNn0AfOdxsd2v8DvItb3Mqm48gL
ViYDcQ9/QH/jdZJv0FtkfdeTJyNbsb9o1D3/axH9mzgRO3mxn8CDRRetTS1/
Qi+ixEwWjUGfvUm2irce+dY662g2tkHo6/yKXqWKDoLPchRSXqaH/iRJJivO
FTltv7lHWwn2qrOLPH4rh8B/tab/oEgha5lVK6SpDkHfmq2U73AVecZA+I3T
M+wbRryqA6rRfxo8ek1xFPmIipQEr8gw9EwvUlvLHIbBR2SnrbWOQnba6h9M
fME+r9ZiI8uaEfA39YRWkcWR9zZOSp00HYG+RardecwfPPHBziv8WDb2RiM2
7/6MYX/BgLfTiXsUvAxb265WVeRhnduhVQGjuP9bA+awQvQsByi/LGaQrVMd
F37vGAPOVNqgvukY8nPaCNe128g+j9wXBxPH8PP7Wc76phS9Kp32gtyBnGLU
uPLVb2QzHS/bWKlxYMUpNyMvU+TXPnzU0uvjML9jw5R+YTD6XXTToifFyFPP
WYfHRrCvvHFi8oDABPhGJu4LB4/+iwu6ZCbdJqB3UmYqrgpBX2nvkSBBRy6x
CZqk/8RePeMPzUt0Eu8vcXqTfRj5KGvj94ork9DHqk1/3ReCvuCvN1dSDfJr
kZiWb9PYTx/3oMkJTYG396zlP6WAPEl3yOoORZ4K0B2yn5yC8+ta5Nz3bJ0G
v6XqoHK1CXJn0zSnRfg09I7t78+HDaBPnRDOy1aewb9vJHcDQ/0Z6A/Pdhzk
iUBfYLDWp2YCebvaWbtUvVnoUxO5uATDZ8FvvPN8K++GOeDqRnZb6Utz0HOq
hpyaZv0FvHGu/vCYM3IsZTO3fPUvOL+hg0n88b55YP4PHxd8niLf0ldfrfMd
+e2K+ZIo398wbyR3j6Txb+Rlsezj5uf/4PexfNvZ9X3IZ51TJjsu/sX/D44V
9jmPF4Cv3iu25H+0COw5LCu9k+P//44zftjeNt8pd1ziMWWZ/uum1UzLwDuy
3E/yl0PuEGxc8LNfBr3GA7L0Kqbl4InfGQJ1kcvB2wYk5gfyM4HP0dFmZbvN
BH69m4ZBsAwzeOeOTVw9M8j2rG5hGutZodfNFueoufQP+K4y69w1FiuASQcU
ZM+vWgN8VyKw0a19E/D/Ac7DvCw=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4ED8UFSOdRxZm4OtBWyLsVXkvRwc1d4/Yihez9iPg2qVjNpuRXIwB1NizSXq
d5HTOAgVjqrf4U4u4cCCZxxldZf8moNLxxN5XzjkBg5kpp22t3tF/srBZkPj
Jrv35G4OPvNXxdoPkX9w8C7Gbn2g0mvGk7lon6fybkiXPJuLg2dFEhQPkJW4
+NFgJNh8nryci/uio84mpJINuchNPtvbU0nexUXZtW0qGd/Jrlwsc0vu7pr1
hvFlLprteoeWriDf5GJX6d8dtcbkW1zU18cY8RzICVzwdTZq6YWSK7joVrYy
OMcj13PBEdq4NHeRe7ioVo53MR8hD3L//B+ae8JxXgOdVzlI4UlxdHaSF+Rg
rl3ek3RPslYOni+d5zzjOnl9Dr5k+4g5lpPtc/BP9Xn2UBvZIwc7L1VxdX+S
L+RgTsIuxyy1RsZROVCxTb161YFcnoOmqpMyvUXkgRx87Kn/OfSaPJKD0EcL
HFzl3jJelIut34eSe43ImrlI6BIL5J4hb83FgqnxHWeDyIdykV0YnSmbQz6X
ixK8jpraRY7LxSZu0Tin8U2MM3Lx9XZ6lOV8MjsXB2SnzOdtIwtyYbNwzRIp
Z3J1LpT26J5qTyT35GJvh4O/SB35dy7ee05PVv5NHpeHwK6V9hVazVTvPIyd
MsVu8BTZOA9OV6XkT9wim+ZBVTDouL+Z7J6HLntxjuFfLYyv5SFdZuuy64vI
uXnYnZSsqL+WXJEHsTDn+Csm5Oo8rIq/ciDJityYh9mjrQPyrpNn52PVg+iL
4elktXx0L9EPlxSQN+UjvX/boW9VZON8rHHf+Nh0kHwyH81f7yRPmvqO8ZV8
qMS8m6ioSo7Nh8aa3TIXNpK5f+YLuLLc2opcn487X603xJwif8xH65Fzvx9d
Iv/IRwqr7onrXfI4HgwNTy/cWkKW46FMe377x1dkbR4OKy2aze8jb+fhbs0H
1lmxVjqPefB38U7YNIdsy0OMVfeRC9rk8zy4jO9tGGNKDuOhseblUZ8T5CQe
WqQyir57kYt5cDwi57s3kvyCB+/+uVeU88ktPMR6xmeq15EHeVBWqgnX6SNP
KMD7cpe+V1LvGS8pQF33BtFnKmSdAoSqzpLMNSSbFKC2sMfw5THy0QIcCnzy
j3c4OawAi9WlX4/LICcX4I1jx+Mp5eT8AnhZBtpV15LLC7Au7OvSH1/IDQVQ
NTtiMFO0jXFnAY75zcsVVSSPLcRl38hbXGPywkKIKOjWKFuSlxRi04S9OQc8
yBqFyN+w/NOmQPLaQpxtsclNLCXvKcRLB41Op0bysUJcML05db54O62nQri3
zdf+voTMKsRH2bNYYUJ+VIhfUsNZ70+SmwvxcLtlZaUfuacQboEHwosfkRcU
QX2Su/3uj+TVRZA91f7p+5gPjI2KYL7Gp+y5KvlkEZoHzqdmmpGvFCFW8byM
vhs5rAj/ckaLyIWTs4ogkatlEM8jVxfh20Cre/Mbcn0R+PLdsoND5PdFmLL0
7Q2RqR8Z9xUhaF9qrdEK8sRiSOxhWaXvIC8oxvjye9ECD/LKYqQE156XjiUb
FaPDlaVgIiTvLobLg3+vvGwl2xRj75fPliLD5JPFqBLpiMrT6WAcUQyp+S0j
ssfIucWIk90y+Cia/LgY69TrXw0JyU3F+K1fox0ySB4qRtBQi/mmdZ8Yy5fA
zSNxfO0u8tISDB/f25F4nWxWgvOp6VeDs8iHSmDqvmdPdD3ZtQTHzFuGfo6Q
L5cgLVHRQXPxZ3reEnQKjtla2pALS6CoIyarFE9+XYLCWSueyFSRO0twYZpt
7NixnYzFS/HcXxDHViJPLUWe8zzdUSbkRaXYI6KWl+hOXlmK7HVW596Uk21L
ofd9ZIr/+C46n0vxzpb3SV2FHF4KwwNPtbL1yKGlqC/UKXVyJWeXYtBMIc0l
gny/FNU93k8Dn5LflOJV5/Yz2l/ILaXYukFlmYxiN50npRC9y66vcCJP4COq
MHuqbQxjr6l8uCwICMFbyufzUVJpPVN8Ug9jZT7+MZk3QXYpYy9VPtbU9Kvs
saR8NR91Kg2newMo1+PjgYN35I5CyjfxYd5jl/+7l7yVj6NmMk0u0l8Y7+JD
beyblfV6ZGs+uo0vhj0JZOx1mg/RLDOx8DLyGT7E16v/tB4kX+LDlu08/GtJ
L+NAPnJ1ZujP2tFL9zkfdzg9UmcuUl7Eh98Nz5HOFMor+Njz+eGYtPuUP+FD
j8e5K9tIruUj07xmfNwvat/MxwFjb/sEla9M3s2H9oCHubclY5GffKT6ybHu
n6VcvAyNMwZMy0IoH1+GlTxLwS0hWb4MA3fGdPf2UHv1Mjw+v7t//dw+xmvL
UCMqffTv7WTDP+Y3q/V79NH+KIOLrqjwSSjle/70dzyXvIxH+b4ylNsF9/M+
k4+XQT/nN8dbqZ+x55/5y13SCreQvcuwfUzNx0enGHv5lSFh47d3a0PJN8rA
/9dHKv0ZtY8vQ6pifN2Hb5RnluHbrnMcjXkDTF5UBkevyjn7tAao/mXo5znl
tYRRXvdn/sBtXY79lHeUYVqdhufqBd8YD5Rh/pO/dZ/uJY8WoKn222TrSLKE
AM4NBUfCO8hyArD7FEoKdQfpPBHgjYin2U5TsrIAW743/j0lirGXpgB8s6l+
z/ooNxBg0cZDDmyT77Q+/4yXIiUlH8nYy1KAmZfuLJCZ8YPJXQR4WiNhr3qC
sddFASbrhe77NuYn4/A/7X9Ubek9/ZPWowAJ6rOlNZ+S0wSY0Si69ObaIcYc
AeY8eDHsd5tcJvhz3+lPNP7I2OuBAFnjhspjrv6i/S9AT/FqZYtfjL1aBRiV
IPHV6shvJu8VYJ3mm0PT2xh7/RTg0OnM/sZj/zIWE8LP+ZFj0c1hxjJCuF4R
2sy5MUL1EsKre4XqckkR/E++UoixWS8vPXRmLKIthFr7WcunoqMYbxLCWdw3
PUCD/LcQjfI1w/6OjL0MhDC4Jqs6QXQ0YxMh8Ctn7vNospUQ9oEppUFzRJn+
R4UoMjYaM/YiY68/nu5hYBaiJsbkx4U43ThLqnWQ7CiE4xiPcIPpY5j2p4TY
VrhU8tmJv5jcQ4jmCtviSdbjmPycECLrtVYcmTCJyX2EuLwsqMajYRZjXyH+
C+Rhn3s=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time [s]\"", TraditionalForm], 
       FormBox["\"Molecular Count\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Maximum Computation with BTL\"", TraditionalForm], 
     PlotRange -> {{0., 2.1139383436643184`}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"k", "x1", "x2", "y", "z1", "z2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.827283715753475*^9, 3.8272840341086674`*^9, 
  3.827343811864108*^9, 3.8273440811088533`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"d012b405-7a31-44de-bdd0-6156195a35e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys2", ",", 
   RowBox[{"statesOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"finalOnly", "\[Rule]", "True"}], ",", 
   RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetRuntimeInfo", "[", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimulateBoundedTauLeaping", "[", 
   RowBox[{"rxnsys2", ",", 
    RowBox[{"finalOnly", "\[Rule]", "True"}], ",", 
    RowBox[{"outputTS", "\[Rule]", "False"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetRuntimeInfo", "[", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys2", "]"}]}], "Input",
 CellChangeTimes->{{3.8242488638879766`*^9, 3.824248884624015*^9}, 
   3.826674956321907*^9, 3.826821314887678*^9, {3.827283532638116*^9, 
   3.8272835662948046`*^9}, {3.8273438589580193`*^9, 3.827343884494444*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"34f1c9c9-0c1a-4eff-9222-d09615b7440d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "15000", ",", "0", ",", "10000"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049458296*^9, {
   3.8273438547260084`*^9, 3.8273438853168035`*^9}, 3.8273440812462997`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"504842b7-867c-441d-9743-39f412239190"],

Cell[BoxData["0.0556958`"], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049458296*^9, {
   3.8273438547260084`*^9, 3.8273438853168035`*^9}, 3.82734408124929*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"7a7e0946-99cb-43ff-8822-be09863c6f3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "15000", ",", "0", ",", "10000"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049458296*^9, {
   3.8273438547260084`*^9, 3.8273438853168035`*^9}, 3.8273440814886513`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f083c6db-8ce6-49a7-98f8-e61ae3115b55"],

Cell[BoxData["0.2403586`"], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049458296*^9, {
   3.8273438547260084`*^9, 3.8273438853168035`*^9}, 3.82734408149264*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"2c36d4ce-56cf-4f0a-ad14-6909b43c517b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", ",", "x1", ",", "x2", ",", "y", ",", "z1", ",", "z2"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.824248873654071*^9, 3.8242488850508795`*^9}, 
   3.8242491978531756`*^9, 3.8266752569682813`*^9, 3.82667859752637*^9, 
   3.826824543007248*^9, 3.8268246356886873`*^9, 3.8268247121147594`*^9, 
   3.8272835216778336`*^9, {3.827283554010537*^9, 3.8272835675567694`*^9}, 
   3.827283640069783*^9, 3.827283771114601*^9, 3.827284049458296*^9, {
   3.8273438547260084`*^9, 3.8273438853168035`*^9}, 3.827344081494635*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"bc240078-1c61-4c5a-9943-b5e07d1486c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reaction System 3: Demonstrating erroneous input handling", "Subtitle",
 CellChangeTimes->{{3.814729544657347*^9, 3.8147295560648165`*^9}, {
  3.8147323846177015`*^9, 
  3.8147323855292654`*^9}},ExpressionUUID->"a94da052-b5f9-4bc7-a8af-\
06681168a31e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rxnsys3", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"a", ",", "b", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxn", "[", 
     RowBox[{"c", ",", "d", ",", "2", ",", "3"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"rxxn", "[", 
     RowBox[{"e", ",", "f", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"reaction", "[", 
     RowBox[{"g", ",", "h", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"revrxn", "[", 
     RowBox[{"i", ",", "j", ",", "6", ",", "7"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"revrxn", "[", 
     RowBox[{"k", ",", "l", ",", "8"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxnl", "[", 
     RowBox[{
      RowBox[{"{", "m", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "9"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rxnl", "[", 
     RowBox[{"o", ",", "p", ",", "10"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", " ", "e", ",", " ", "f", ",", 
        " ", "g", ",", " ", "h"}], "}"}], ",", "20"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"concs", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", " ", "j", ",", " ", "k", ",", " ", "l", ",", " ", "m", ",", 
        " ", "o", " ", ",", " ", "p"}], "}"}], ",", "30"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"SpeciesInRxnsys", "[", "rxnsys3", "]"}]}], "Input",
 CellChangeTimes->{{3.8147273669393797`*^9, 3.814727548120801*^9}, {
   3.814728356098337*^9, 3.8147283806253023`*^9}, {3.814728423009989*^9, 
   3.8147284230977907`*^9}, {3.814730632763997*^9, 3.8147307464500284`*^9}, {
   3.816379330367965*^9, 3.816379332927121*^9}, {3.8224113878035955`*^9, 
   3.822411388903293*^9}, {3.8266752654594564`*^9, 3.826675333282188*^9}, {
   3.826675395796424*^9, 3.8266753979710703`*^9}, {3.8266756276521783`*^9, 
   3.826675644641883*^9}, {3.8266773522912235`*^9, 3.8266773547223177`*^9}, {
   3.8268213148950825`*^9, 3.826821326254178*^9}, 3.8268246809734745`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"9abb1f7f-8a2b-4bba-9e64-c50d159e10c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "b"}], " ", ",", 
   RowBox[{"rxn", "[", 
    RowBox[{"c", ",", "d", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"rxxn", "[", 
    RowBox[{"e", ",", "f", ",", "4"}], "]"}], ",", 
   RowBox[{"reaction", "[", 
    RowBox[{"g", ",", "h", ",", "5"}], "]"}], ",", 
   RowBox[{"i", " ", 
    UnderoverscriptBox["\[RightArrowLeftArrow]", "7", "6"], " ", "j"}], " ", 
   ",", 
   RowBox[{"revrxn", "[", 
    RowBox[{"k", ",", "l", ",", "8"}], "]"}], ",", 
   RowBox[{"rxnl", "[", 
    RowBox[{
     RowBox[{"{", "m", "}"}], ",", 
     RowBox[{"{", "}"}], ",", "9"}], "]"}], ",", 
   RowBox[{"rxnl", "[", 
    RowBox[{"o", ",", "p", ",", "10"}], "]"}], ",", 
   RowBox[{"conc", "[", "10", "]"}], ",", 
   RowBox[{"conc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
       "h"}], "}"}], ",", "20"}], "]"}], ",", 
   RowBox[{"concs", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "k", ",", "l", ",", "m", ",", "o", ",", "p"}], 
      "}"}], ",", "30"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814727553060592*^9, 3.8147277475973887`*^9, {3.814728358332364*^9, 
   3.814728382169203*^9}, 3.8147284238009043`*^9, 3.8147287784837065`*^9, 
   3.8147299420004463`*^9, 3.8147301129239264`*^9, 3.81473016534527*^9, 
   3.8147303755079713`*^9, 3.8147305797158546`*^9, 3.814730748188409*^9, 
   3.814730805467269*^9, 3.8147323871130314`*^9, 3.8147354456199408`*^9, 
   3.814750672514909*^9, 3.81637928684542*^9, 3.816379338163118*^9, 
   3.8163793981066675`*^9, 3.8209422901585464`*^9, 3.820942401642186*^9, 
   3.821206508214243*^9, 3.8212885367665243`*^9, 3.8224114734402657`*^9, 
   3.822436315381395*^9, 3.8236340261835213`*^9, 3.824248895757517*^9, 
   3.8242491994708867`*^9, 3.826675259089215*^9, {3.826675306456874*^9, 
   3.8266753583240385`*^9}, 3.826675398468398*^9, 3.826675430905013*^9, 
   3.826675544363984*^9, 3.826675587092024*^9, 3.826675656701229*^9, 
   3.826677185740246*^9, 3.826677322803172*^9, 3.8266773703077426`*^9, 
   3.82667860001132*^9, 3.826824552999225*^9, 3.8268246372077193`*^9, 
   3.82682468139244*^9, 3.826824713788515*^9, 3.827283774227352*^9, 
   3.8272840513327913`*^9, 3.8273439007223525`*^9, 3.82734408156844*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"bc65979c-5842-44cb-9fe4-10bf052f76f3"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "rxnargs", 
   "\"\\!\\(\\*RowBox[{\\\"rxn\\\", \\\"[\\\", RowBox[{\\\"c\\\", \\\",\\\", \
\\\"d\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"]\\\"}]\\) is \
invalid as 3 arguments are expected\"", 2, 30, 1, 18373927649477558454, 
   "Local", "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.827284051395494*^9, 3.8273439007725506`*^9, 
  3.8273440815888824`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"0b57fc7b-dba4-4df0-b922-453d3ee245ef"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "revrxnargs", 
   "\"\\!\\(\\*RowBox[{\\\"revrxn\\\", \\\"[\\\", RowBox[{\\\"k\\\", \
\\\",\\\", \\\"l\\\", \\\",\\\", \\\"8\\\"}], \\\"]\\\"}]\\) is invalid as 4 \
arguments are expected\"", 2, 30, 2, 18373927649477558454, "Local", 
   "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.827284051395494*^9, 3.8273439007725506`*^9, 
  3.8273440816059966`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"cfbaa53b-06ca-4b9e-a8e6-2aa0e1df035d"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "concargs", 
   "\"\\!\\(\\*RowBox[{\\\"conc\\\", \\\"[\\\", \\\"10\\\", \\\"]\\\"}]\\) is \
invalid as 2 arguments are expected\"", 2, 30, 3, 18373927649477558454, 
   "Local", "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.827284051395494*^9, 3.8273439007725506`*^9, 
  3.8273440816169667`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"2a2783db-3596-40b2-9ff1-20d6d6d55f75"],

Cell[BoxData[
 TemplateBox[{
  "RxnsysToOdesys", "rxnllists", 
   "\"\\!\\(\\*RowBox[{\\\"rxnl\\\", \\\"[\\\", RowBox[{\\\"o\\\", \\\",\\\", \
\\\"p\\\", \\\",\\\", \\\"10\\\"}], \\\"]\\\"}]\\) is invalid as lists are \
expected for the first and second arguments\"", 2, 30, 4, 
   18373927649477558454, "Local", "CRNSimulator`RxnsysToOdesys"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8266771857272797`*^9, 3.8266773227921987`*^9, 
  3.826677370303752*^9, 3.8266785999983864`*^9, 3.8268245529324045`*^9, 
  3.826824637139271*^9, 3.8268246814004183`*^9, 3.8268247138594513`*^9, 
  3.827283774232339*^9, 3.827284051395494*^9, 3.8273439007725506`*^9, 
  3.8273440816245155`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"efa6cc4d-2ade-4bb3-b940-f03cc01e705a"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.814727553060592*^9, 3.8147277475973887`*^9, {3.814728358332364*^9, 
   3.814728382169203*^9}, 3.8147284238009043`*^9, 3.8147287784837065`*^9, 
   3.8147299420004463`*^9, 3.8147301129239264`*^9, 3.81473016534527*^9, 
   3.8147303755079713`*^9, 3.8147305797158546`*^9, 3.814730748188409*^9, 
   3.814730805467269*^9, 3.8147323871130314`*^9, 3.8147354456199408`*^9, 
   3.814750672514909*^9, 3.81637928684542*^9, 3.816379338163118*^9, 
   3.8163793981066675`*^9, 3.8209422901585464`*^9, 3.820942401642186*^9, 
   3.821206508214243*^9, 3.8212885367665243`*^9, 3.8224114734402657`*^9, 
   3.822436315381395*^9, 3.8236340261835213`*^9, 3.824248895757517*^9, 
   3.8242491994708867`*^9, 3.826675259089215*^9, {3.826675306456874*^9, 
   3.8266753583240385`*^9}, 3.826675398468398*^9, 3.826675430905013*^9, 
   3.826675544363984*^9, 3.826675587092024*^9, 3.826675656701229*^9, 
   3.826677185740246*^9, 3.826677322803172*^9, 3.8266773703077426`*^9, 
   3.82667860001132*^9, 3.826824552999225*^9, 3.8268246372077193`*^9, 
   3.82682468139244*^9, 3.826824713788515*^9, 3.827283774227352*^9, 
   3.8272840513327913`*^9, 3.8273439007223525`*^9, 3.827344081635488*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"59f2d0e4-b2f5-4a9c-a7d5-95e582f75ccc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SimulateDirectSSA", "[", 
  RowBox[{"rxnsys3", ",", 
   RowBox[{"finalOnly", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotLastSimulation", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.814727554850992*^9, 3.81472756962504*^9}, {
   3.8147296561704426`*^9, 3.814729659057314*^9}, {3.814729937049659*^9, 
   3.814729937210195*^9}, {3.814745424335478*^9, 3.8147454257816133`*^9}, {
   3.816379354423208*^9, 3.8163793620064096`*^9}, {3.8209420683128357`*^9, 
   3.8209420740032263`*^9}, {3.820942320308769*^9, 3.820942322386283*^9}, {
   3.8212884239178905`*^9, 3.821288424085413*^9}, {3.82241137784033*^9, 
   3.8224113969016104`*^9}, {3.822435911582708*^9, 3.822435935683201*^9}, {
   3.822435989581008*^9, 3.822435990036787*^9}, {3.82243605409142*^9, 
   3.822436072496183*^9}, {3.8242488994407654`*^9, 3.8242489382260175`*^9}, {
   3.8242489687391896`*^9, 3.8242489785222726`*^9}, {3.82424903478922*^9, 
   3.8242490391406937`*^9}, {3.8242490811756105`*^9, 
   3.8242490815176783`*^9}, {3.824249114423749*^9, 3.824249137486657*^9}, 
   3.8266749578742857`*^9, {3.826677213571082*^9, 3.826677217297842*^9}, {
   3.826677328979368*^9, 3.826677329786335*^9}, {3.8272838739592257`*^9, 
   3.8272838751583276`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"68cdc8e7-1037-4072-a876-28eae94d6ab4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8266786007288046`*^9, 3.826824563307689*^9, 
  3.826824638156846*^9, 3.826824715192755*^9, 3.827283789254285*^9, 
  3.827284053675598*^9, 3.827343903109276*^9, 3.8273440817003503`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"46dc5bdd-6f73-4be5-85fa-5c2083ca8143"],

Cell[BoxData[
 TemplateBox[{
  "PlotLastSimulation", "finalonlyerr", 
   "\"Error: Cannot plot when finalOnly = True\"", 2, 32, 5, 
   18373927649477558454, "Local", "CRNSSA`PlotLastSimulation"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.826677323575782*^9, 3.8266773322396584`*^9}, 
   3.826678600701871*^9, 3.826824563312677*^9, 3.826824638163825*^9, 
   3.826824715195747*^9, 3.827283789259271*^9, 3.827284053678591*^9, 
   3.827343903113301*^9, 3.827344081703309*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"d005f15e-c81b-432d-9fc4-aa1a9c33ba3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateBoundedTauLeaping", "[", 
   RowBox[{"rxnsys2", ",", 
    RowBox[{"iterEnd", "\[Rule]", "0.5"}], ",", 
    RowBox[{"useIter", "\[Rule]", "True"}], ",", 
    RowBox[{"epsilon", "\[Rule]", "1.5"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8272838544342904`*^9, 3.8272839110474677`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"dc26e5b5-f843-4430-8ca2-1b20569a2acb"],

Cell[BoxData[
 TemplateBox[{
  "SimulateBoundedTauLeaping", "iterenderr", 
   "\"Error: iterEnd (\\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\)) must be an integer \
greater than zero\"", 2, 33, 6, 18373927649477558454, "Local", 
   "CRNSSA`SimulateBoundedTauLeaping"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.827283906546582*^9, 3.8272839116572876`*^9}, 
   3.827284060334919*^9, 3.8273439044647803`*^9, 3.827344081775116*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"8217ed27-7f95-44e0-ba95-33bbef53cc07"],

Cell[BoxData[
 TemplateBox[{
  "SimulateBoundedTauLeaping", "epsilonerr", 
   "\"Error: epsilon (\\!\\(\\*RowBox[{\\\"1.5`\\\"}]\\)) must be a real \
number between 0 and 1\"", 2, 33, 7, 18373927649477558454, "Local", 
   "CRNSSA`SimulateBoundedTauLeaping"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.827283906546582*^9, 3.8272839116572876`*^9}, 
   3.827284060334919*^9, 3.8273439044647803`*^9, 3.827344082014551*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"a7f1fb6e-beba-4dbf-93b8-976fe52f0cfb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{Automatic, 957}, {Automatic, -6}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "tue" -> OverscriptBox["\[UndirectedEdge]", "\[Placeholder]"], "tde" -> 
  OverscriptBox["\[DirectedEdge]", "\[Placeholder]"], "notation" -> 
  RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8a9966d4-13ea-4f76-9a73-3ff830b13d05"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 209, 4, 117, "Title",ExpressionUUID->"99313edb-9280-4a33-9415-fe73f5350fe5"],
Cell[CellGroupData[{
Cell[814, 30, 397, 7, 57, "Input",ExpressionUUID->"8acb8700-aa44-4b5e-a852-0474740d5f06"],
Cell[1214, 39, 4855, 112, 113, "Output",ExpressionUUID->"68481b4f-2b09-41f7-b3b7-8e58e58b028c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6106, 156, 226, 4, 62, "Subtitle",ExpressionUUID->"52ad3c2d-9e9e-48e6-8d6d-8ea980b00547"],
Cell[CellGroupData[{
Cell[6357, 164, 1605, 31, 147, "Input",ExpressionUUID->"8b417677-a446-4ab6-80dd-94d45d2a2df6"],
Cell[7965, 197, 1512, 23, 38, "Output",ExpressionUUID->"5dbfa8e6-48b6-4923-8554-6bdc2554d8a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9514, 225, 985, 16, 57, "Input",ExpressionUUID->"e01cb462-3bf6-45d3-aeb7-66e85bb61022"],
Cell[10502, 243, 2434, 57, 61, "Output",ExpressionUUID->"05ccab6c-b17a-4d7d-81ed-fd2bc0e4cc44"],
Cell[12939, 302, 13572, 276, 290, "Output",ExpressionUUID->"496c69fd-f8e2-44dc-a703-40bd9cf85be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26548, 583, 580, 11, 57, "Input",ExpressionUUID->"f6d49b94-9e8b-4a36-ae44-e2b1dcfd3145"],
Cell[27131, 596, 1485, 40, 38, "Output",ExpressionUUID->"867fb2d4-2e71-4f40-8f1b-3af5f7b09b02"],
Cell[28619, 638, 12666, 263, 287, "Output",ExpressionUUID->"835ffc82-8667-4cdb-ad21-b896d3f7073b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41322, 906, 877, 14, 57, "Input",ExpressionUUID->"30b5d26f-07c3-4eda-8fd7-31726095345b"],
Cell[42202, 922, 1734, 40, 61, "Output",ExpressionUUID->"353d6456-0789-4017-871e-651175332634"],
Cell[43939, 964, 13045, 268, 290, "Output",ExpressionUUID->"250f8362-1c85-4367-95ad-02936f7f234c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57033, 1238, 611, 8, 62, "Subtitle",ExpressionUUID->"26cee006-515b-4511-9df5-a84f93ecb4e8"],
Cell[CellGroupData[{
Cell[57669, 1250, 3384, 76, 214, "Input",ExpressionUUID->"4ac59a20-336b-40bd-8b3f-f93ee47e266c"],
Cell[61056, 1328, 3592, 81, 91, "Output",ExpressionUUID->"2941659b-857f-4710-bc80-809745eeb8c6"],
Cell[64651, 1411, 2278, 37, 38, "Output",ExpressionUUID->"17e1deca-084f-4ffd-9a79-711a43bfc7c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66966, 1453, 535, 9, 34, "Input",ExpressionUUID->"6b802521-abe5-46a6-a500-e567ba56f44a"],
Cell[67504, 1464, 1495, 27, 38, "Output",ExpressionUUID->"fde014e0-108f-493f-a9fb-f6bc1f38034a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69036, 1496, 1024, 16, 33, "Input",ExpressionUUID->"77c1fb6b-12dc-4da7-a958-5c5a4452f187"],
Cell[70063, 1514, 3351, 84, 106, "Output",ExpressionUUID->"ead1ac67-daa9-4da3-a071-b31f86e0828d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73451, 1603, 519, 9, 33, "Input",ExpressionUUID->"727dc939-bc19-45b3-a825-77595faf5284"],
Cell[73973, 1614, 3222, 85, 174, "Output",ExpressionUUID->"a77876f8-d2ff-43e4-a40d-0de6e444faad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77244, 1705, 298, 4, 62, "Subtitle",ExpressionUUID->"cac518be-760f-4e04-892e-7b19f51723f0"],
Cell[CellGroupData[{
Cell[77567, 1713, 1594, 32, 214, "Input",ExpressionUUID->"9fe609a4-5ad6-46db-842b-92f8411dd608"],
Cell[79164, 1747, 1320, 33, 52, "Output",ExpressionUUID->"cd4c59b6-116e-4773-b802-934689f73f2f"],
Cell[80487, 1782, 694, 14, 38, "Output",ExpressionUUID->"f6187ae9-d9b6-4dfc-9d5a-a9210cc7ddb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81218, 1801, 1268, 19, 57, "Input",ExpressionUUID->"b6268b37-be13-4b8c-a833-d45a91bc13ff"],
Cell[82489, 1822, 12830, 247, 99, "Output",ExpressionUUID->"991feb91-2818-4b5e-a24e-c3b9748dcf3a"],
Cell[95322, 2071, 67196, 1233, 290, "Output",ExpressionUUID->"a853fa45-6da7-47be-8c84-e407f608958f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162555, 3309, 473, 10, 57, "Input",ExpressionUUID->"9a3e4e57-79bb-40b2-aee2-7bd46ea02ae9"],
Cell[163031, 3321, 12373, 241, 99, "Output",ExpressionUUID->"6b531596-8836-49de-837d-3460eb830f61"],
Cell[175407, 3564, 45423, 876, 287, "Output",ExpressionUUID->"05a103e2-a725-4f95-abe2-d31da118c79a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220867, 4445, 385, 7, 57, "Input",ExpressionUUID->"be71b19d-cc4d-4d67-b562-c1e6cc4e2114"],
Cell[221255, 4454, 272271, 4501, 76, "Output",ExpressionUUID->"d994e61d-b79b-4ee5-b919-2ac40db56df5"],
Cell[493529, 8957, 66700, 1226, 290, "Output",ExpressionUUID->"d012b405-7a31-44de-bdd0-6156195a35e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560266, 10188, 1281, 30, 124, "Input",ExpressionUUID->"34f1c9c9-0c1a-4eff-9222-d09615b7440d"],
Cell[561550, 10220, 667, 11, 38, "Output",ExpressionUUID->"504842b7-867c-441d-9743-39f412239190"],
Cell[562220, 10233, 552, 7, 38, "Output",ExpressionUUID->"7a7e0946-99cb-43ff-8822-be09863c6f3e"],
Cell[562775, 10242, 667, 11, 38, "Output",ExpressionUUID->"f083c6db-8ce6-49a7-98f8-e61ae3115b55"],
Cell[563445, 10255, 552, 7, 38, "Output",ExpressionUUID->"2c36d4ce-56cf-4f0a-ad14-6909b43c517b"],
Cell[564000, 10264, 636, 10, 38, "Output",ExpressionUUID->"bc240078-1c61-4c5a-9943-b5e07d1486c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564685, 10280, 258, 4, 62, "Subtitle",ExpressionUUID->"a94da052-b5f9-4bc7-a8af-06681168a31e"],
Cell[CellGroupData[{
Cell[564968, 10288, 2335, 48, 327, "Input",ExpressionUUID->"9abb1f7f-8a2b-4bba-9e64-c50d159e10c2"],
Cell[567306, 10338, 2481, 53, 91, "Output",ExpressionUUID->"bc65979c-5842-44cb-9fe4-10bf052f76f3"],
Cell[569790, 10393, 792, 15, 28, "Message",ExpressionUUID->"0b57fc7b-dba4-4df0-b922-453d3ee245ef"],
Cell[570585, 10410, 776, 15, 28, "Message",ExpressionUUID->"cfbaa53b-06ca-4b9e-a8e6-2aa0e1df035d"],
Cell[571364, 10427, 717, 14, 28, "Message",ExpressionUUID->"2a2783db-3596-40b2-9ff1-20d6d6d55f75"],
Cell[572084, 10443, 803, 15, 28, "Message",ExpressionUUID->"efa6cc4d-2ade-4bb3-b940-f03cc01e705a"],
Cell[572890, 10460, 1293, 18, 38, "Output",ExpressionUUID->"59f2d0e4-b2f5-4a9c-a7d5-95e582f75ccc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574220, 10483, 1336, 20, 57, "Input",ExpressionUUID->"68cdc8e7-1037-4072-a876-28eae94d6ab4"],
Cell[575559, 10505, 320, 4, 38, "Output",ExpressionUUID->"46dc5bdd-6f73-4be5-85fa-5c2083ca8143"],
Cell[575882, 10511, 598, 12, 28, "Message",ExpressionUUID->"d005f15e-c81b-432d-9fc4-aa1a9c33ba3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576517, 10528, 413, 8, 33, "Input",ExpressionUUID->"dc26e5b5-f843-4430-8ca2-1b20569a2acb"],
Cell[576933, 10538, 544, 11, 28, "Message",ExpressionUUID->"8217ed27-7f95-44e0-ba95-33bbef53cc07"],
Cell[577480, 10551, 545, 11, 28, "Message",ExpressionUUID->"a7f1fb6e-beba-4dbf-93b8-976fe52f0cfb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

