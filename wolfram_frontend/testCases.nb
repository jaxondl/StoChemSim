(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     57950,       1284]
NotebookOptionsPosition[     54182,       1206]
NotebookOutlinePosition[     54985,       1231]
CellTagsIndexPosition[     54880,       1226]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CRN SSA Deterministic Test Cases", "Title",
 CellChangeTimes->{{3.8147292785447936`*^9, 3.8147292854487743`*^9}, {
  3.8151519816904817`*^9, 
  3.8151519845736976`*^9}},ExpressionUUID->"99313edb-9280-4a33-9415-\
fe73f5350fe5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "path", " ", "=", " ", 
   "\"\<C:\\\\Users\\\\jaxon\\\\Documents\\\\crn-ssa-wolfram-pkg\\\\interface\
\\\\interface.cpp\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"library", " ", "=", " ", 
  RowBox[{"CreateLibrary", "[", 
   RowBox[{
    RowBox[{"{", "path", "}"}], ",", " ", "\"\<interface\>\""}], 
   "]"}]}]}], "Input",ExpressionUUID->"e7a7664c-981c-41b9-b2ad-3bcf7543d26c"],

Cell[BoxData[
 RowBox[{"<<", "CRNSSA`"}]], "Input",
 CellChangeTimes->{{3.8121561693612485`*^9, 3.812156171593361*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8acb8700-aa44-4b5e-a852-0474740d5f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CRNSSA`*"}]], "Input",
 CellChangeTimes->{{3.812155997941104*^9, 3.8121560104359426`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0fa98d4e-a4fe-4b94-816c-fe5c54aeef97"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["CRNSSA`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{11., {3., 8.}}], " ", 
              StyleBox["CRNSSA`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["DirectSSA", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0", {
                   "DirectSSA", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetSpecies", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0", {
                   "GetSpecies", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["init", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0", {
                   "init", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["revrxn", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0", {
                   "revrxn", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rxn", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0", {
                   "rxn", "CRNSSA`"}, False},
                 ButtonNote->"CRNSSA`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{{3.8121560035236673`*^9, 3.8121560110471077`*^9}, {
   3.812156060964754*^9, 3.8121561280096674`*^9}, {3.8121561752116547`*^9, 
   3.812156192006146*^9}, 3.812156362266014*^9, {3.8121568915442147`*^9, 
   3.8121569251702175`*^9}, 3.8121606249889083`*^9, 3.81216082350089*^9, 
   3.8121609273329906`*^9, 3.8136902220488367`*^9, 3.8137779836512413`*^9, 
   3.813779262977682*^9, 3.8137820899989653`*^9, 3.8139441034395447`*^9, 
   3.814402834533102*^9, 3.8144080650319524`*^9, 3.8144082738240337`*^9, 
   3.814409312044092*^9, 3.8144097600363445`*^9, 3.814457945420768*^9, 
   3.814458695913362*^9, 3.814459117702781*^9, 3.814724627526862*^9, 
   3.8147300939159737`*^9, 3.814730569235258*^9, 3.8147307998747406`*^9, 
   3.8147323767782764`*^9, 3.814735011200433*^9, 3.814735441820671*^9, 
   3.8147506653311124`*^9, 3.8151522163150253`*^9, 3.815164485845916*^9, 
   3.8151648858897715`*^9, 3.815171973797851*^9, 3.8151720223714066`*^9, {
   3.8212033295508657`*^9, 3.8212033503397827`*^9}, 3.8212035559423313`*^9, 
   3.8212062175396996`*^9, 3.821288614430803*^9, 3.822410470150005*^9, 
   3.8224106842612095`*^9, 3.8224155095732803`*^9, 3.8224320593105097`*^9, 
   3.8224329491865034`*^9, 3.8224347290554433`*^9, 3.822435032247174*^9, 
   3.822435069555363*^9, 3.822435482973343*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"2c5cb87f-2f0f-4890-b27d-8208b34b62ba"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"{states, times} = DirectSSA[{rxn1, rxn2, ..., \
init1, init2, ...}, Options]\\nSimulates the given reaction system via \
Gillespie Direct SSA\\nBackend is optimized in C++ for computational \
efficiency\\nOptions include timeEnd (Real), iterEnd (Integer),\\nuseIter \
(Boolean), statesOnly (Boolean), finalOnly (Boolean)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DirectSSA", "[", 
                    RowBox[{"CRNSSA`Private`rxnsys_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`inits", "=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"CRNSSA`Private`rxnsys", ",", 
                    RowBox[{"init", "[", 
                    RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"CRNSSA`Private`rxns", "=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"CRNSSA`Private`rxnsys", ",", 
                    RowBox[{"rxn", "[", 
                    RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"CRNSSA`Private`spcs", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"GetSpecies", "[", "CRNSSA`Private`rxnsys", "]"}],
                     "]"}]}], ",", 
                    RowBox[{"CRNSSA`Private`timeEnd", "=", 
                    RowBox[{"OptionValue", "[", "\<\"timeEnd\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"CRNSSA`Private`iterEnd", "=", 
                    RowBox[{"OptionValue", "[", "\<\"iterEnd\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"CRNSSA`Private`useIter", "=", 
                    RowBox[{"OptionValue", "[", "\<\"useIter\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"CRNSSA`Private`statesOnly", "=", 
                    RowBox[{"OptionValue", "[", "\<\"statesOnly\"\>", "]"}]}],
                     ",", 
                    RowBox[{"CRNSSA`Private`finalOnly", "=", 
                    RowBox[{"OptionValue", "[", "\<\"finalOnly\"\>", "]"}]}], 
                    ",", "CRNSSA`Private`initCounts", ",", 
                    "CRNSSA`Private`reactCounts", ",", 
                    "CRNSSA`Private`prodCounts", ",", "CRNSSA`Private`rates", 
                    ",", "CRNSSA`Private`initCountsNA", ",", 
                    "CRNSSA`Private`reactCountsNA", ",", 
                    "CRNSSA`Private`prodCountsNA", ",", 
                    "CRNSSA`Private`ratesNA", ",", "CRNSSA`Private`timeEndR", 
                    ",", "CRNSSA`Private`iterEndI", ",", 
                    "CRNSSA`Private`infTime", ",", "CRNSSA`Private`infIter", 
                    ",", "CRNSSA`Private`inf", ",", 
                    RowBox[{"CRNSSA`Private`unkObjs", "=", 
                    RowBox[{
                    "CRNSSA`Private`GetUnkObjs", "[", "CRNSSA`Private`rxnsys",
                     "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "CRNSSA`Private`unkObjs", "]"}], "=!=",
                     "0"}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DirectSSA", "::", "rxnsyswarn"}], "MessageName"],
                     ",", "CRNSSA`Private`unkObjs"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CRNSSA`Private`timeEnd", "===", "\[Infinity]"}], 
                    "||", 
                    RowBox[{"CRNSSA`Private`timeEnd", "\[LessEqual]", "0"}], "||", 
                    RowBox[{"!", 
                    RowBox[{
                    "NumericQ", "[", "CRNSSA`Private`timeEnd", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`timeEndR", "=", "1.`*^6"}], ";", 
                    RowBox[{"CRNSSA`Private`infTime", "=", "True"}]}], ",", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`timeEndR", "=", 
                    RowBox[{"N", "[", "CRNSSA`Private`timeEnd", "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`infTime", "=", "False"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`timeEnd", "=!=", "\[Infinity]"}], 
                    "&&", 
                    RowBox[{"!", 
                    RowBox[{
                    "NumericQ", "[", "CRNSSA`Private`timeEnd", "]"}]}]}], 
                    ")"}], "||", 
                    RowBox[{
                    "CRNSSA`Private`timeEnd", "\[LessEqual]", "0.`"}]}], 
                    ")"}], "&&", 
                    RowBox[{"CRNSSA`Private`useIter", "===", "False"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DirectSSA", "::", "timeenderr"}], "MessageName"],
                     ",", "CRNSSA`Private`timeEnd"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CRNSSA`Private`iterEnd", "===", "\[Infinity]"}], 
                    "||", 
                    RowBox[{"CRNSSA`Private`iterEnd", "\[LessEqual]", "0"}], "||", 
                    RowBox[{"!", 
                    RowBox[{
                    "IntegerQ", "[", "CRNSSA`Private`iterEnd", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`iterEndI", "=", "1000000"}], ";", 
                    RowBox[{"CRNSSA`Private`infIter", "=", "True"}]}], ",", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`iterEndI", "=", 
                    RowBox[{"Round", "[", "CRNSSA`Private`iterEnd", "]"}]}], 
                    ";", 
                    RowBox[{"CRNSSA`Private`infIter", "=", "False"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`iterEnd", "=!=", "\[Infinity]"}], 
                    "&&", 
                    RowBox[{"!", 
                    RowBox[{
                    "IntegerQ", "[", "CRNSSA`Private`iterEnd", "]"}]}]}], 
                    ")"}], "||", 
                    RowBox[{"CRNSSA`Private`iterEnd", "\[LessEqual]", "0"}]}],
                     ")"}], "&&", 
                    RowBox[{"CRNSSA`Private`useIter", "===", "True"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DirectSSA", "::", "iterenderr"}], "MessageName"],
                     ",", "CRNSSA`Private`iterEnd"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`infTime", "===", "True"}], "&&", 
                    RowBox[{"CRNSSA`Private`useIter", "===", "False"}]}], 
                    ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`infIter", "===", "True"}], "&&", 
                    RowBox[{"CRNSSA`Private`useIter", "===", "True"}]}], 
                    ")"}]}], ",", 
                    RowBox[{"CRNSSA`Private`inf", "=", "True"}], ",", 
                    RowBox[{"CRNSSA`Private`inf", "=", "False"}]}], "]"}], 
                    ";", 
                    RowBox[{"CRNSSA`Private`initCounts", "=", 
                    RowBox[{"CRNSSA`Private`GetInitCounts", "[", 
                    RowBox[{
                    "CRNSSA`Private`inits", ",", "CRNSSA`Private`spcs"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`reactCounts", "=", 
                    RowBox[{"CRNSSA`Private`GetReactCounts", "[", 
                    RowBox[{
                    "CRNSSA`Private`rxns", ",", "CRNSSA`Private`spcs"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`prodCounts", "=", 
                    RowBox[{"CRNSSA`Private`GetProdCounts", "[", 
                    RowBox[{
                    "CRNSSA`Private`rxns", ",", "CRNSSA`Private`spcs"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`rates", "=", 
                    RowBox[{
                    "CRNSSA`Private`GetRates", "[", "CRNSSA`Private`rxns", 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`initCountsNA", "=", 
                    RowBox[{"NumericArray", "[", 
                    RowBox[{
                    "CRNSSA`Private`initCounts", ",", "\<\"Integer32\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`reactCountsNA", "=", 
                    RowBox[{"NumericArray", "[", 
                    RowBox[{
                    "CRNSSA`Private`reactCounts", ",", "\<\"Integer64\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`prodCountsNA", "=", 
                    RowBox[{"NumericArray", "[", 
                    RowBox[{
                    "CRNSSA`Private`prodCounts", ",", "\<\"Integer64\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`ratesNA", "=", 
                    RowBox[{"NumericArray", "[", 
                    RowBox[{"CRNSSA`Private`rates", ",", "\<\"Real64\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"CRNSSA`Private`DirectBackend", "[", 
                    RowBox[{
                    "CRNSSA`Private`initCountsNA", ",", 
                    "CRNSSA`Private`reactCountsNA", ",", 
                    "CRNSSA`Private`prodCountsNA", ",", 
                    "CRNSSA`Private`ratesNA", ",", 
                    "CRNSSA`Private`timeEndR"}], "]"}], ";", "Null", ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CRNSSA`Private`GetStates", "[", "]"}], ",", 
                    RowBox[{"CRNSSA`Private`GetTimes", "[", "]"}]}], 
                    "}"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"timeEnd\"\>", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"\<\"iterEnd\"\>", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"\<\"useIter\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"\<\"statesOnly\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"\<\"finalOnly\"\>", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"timeEnd\"\>", "\[Rule]", "\[Infinity]"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"CRNSSA`DirectSSA\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"{states, times} = DirectSSA[{rxn1, rxn2, ..., \
init1, init2, ...}, Options]\\nSimulates the given reaction system via \
Gillespie Direct SSA\\nBackend is optimized in C++ for computational \
efficiency\\nOptions include timeEnd (Real), iterEnd (Integer),\\nuseIter \
(Boolean), statesOnly (Boolean), finalOnly (Boolean)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{11., {4., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{11., {4., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "{states, times} = DirectSSA[{rxn1, rxn2, ..., init1, init2, ...}, \
Options]\nSimulates the given reaction system via Gillespie Direct SSA\n\
Backend is optimized in C++ for computational efficiency\nOptions include \
timeEnd (Real), iterEnd (Integer),\nuseIter (Boolean), statesOnly (Boolean), \
finalOnly (Boolean)", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, CRNSSA`DirectSSA, {CRNSSA`DirectSSA[
         Pattern[CRNSSA`Private`rxnsys, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{CRNSSA`Private`inits = Cases[CRNSSA`Private`rxnsys, 
            CRNSSA`init[
             Blank[], 
             Blank[]]], CRNSSA`Private`rxns = Cases[CRNSSA`Private`rxnsys, 
            CRNSSA`rxn[
             Blank[], 
             Blank[], 
             Blank[]]], CRNSSA`Private`spcs = Quiet[
            CRNSSA`GetSpecies[CRNSSA`Private`rxnsys]], CRNSSA`Private`timeEnd = 
          OptionValue["timeEnd"], CRNSSA`Private`iterEnd = 
          OptionValue["iterEnd"], CRNSSA`Private`useIter = 
          OptionValue["useIter"], CRNSSA`Private`statesOnly = 
          OptionValue["statesOnly"], CRNSSA`Private`finalOnly = 
          OptionValue["finalOnly"], CRNSSA`Private`initCounts, 
          CRNSSA`Private`reactCounts, CRNSSA`Private`prodCounts, 
          CRNSSA`Private`rates, CRNSSA`Private`initCountsNA, 
          CRNSSA`Private`reactCountsNA, CRNSSA`Private`prodCountsNA, 
          CRNSSA`Private`ratesNA, CRNSSA`Private`timeEndR, 
          CRNSSA`Private`iterEndI, CRNSSA`Private`infTime, 
          CRNSSA`Private`infIter, CRNSSA`Private`inf, CRNSSA`Private`unkObjs = 
          CRNSSA`Private`GetUnkObjs[CRNSSA`Private`rxnsys]}, 
         If[Length[CRNSSA`Private`unkObjs] =!= 0, 
           Message[
            MessageName[CRNSSA`DirectSSA, "rxnsyswarn"], 
            CRNSSA`Private`unkObjs]]; If[
           Or[
           CRNSSA`Private`timeEnd === Infinity, CRNSSA`Private`timeEnd <= 0, 
            Not[
             NumericQ[CRNSSA`Private`timeEnd]]], 
           CRNSSA`Private`timeEndR = 1.*^6; CRNSSA`Private`infTime = True, 
           CRNSSA`Private`timeEndR = N[CRNSSA`Private`timeEnd]; 
           CRNSSA`Private`infTime = False]; If[
           And[
            Or[
             And[CRNSSA`Private`timeEnd =!= Infinity, 
              Not[
               NumericQ[CRNSSA`Private`timeEnd]]], CRNSSA`Private`timeEnd <= 
             0.], CRNSSA`Private`useIter === False], 
           Message[
            MessageName[CRNSSA`DirectSSA, "timeenderr"], 
            CRNSSA`Private`timeEnd]]; If[
           Or[
           CRNSSA`Private`iterEnd === Infinity, CRNSSA`Private`iterEnd <= 0, 
            Not[
             IntegerQ[CRNSSA`Private`iterEnd]]], 
           CRNSSA`Private`iterEndI = 1000000; CRNSSA`Private`infIter = True, 
           CRNSSA`Private`iterEndI = Round[CRNSSA`Private`iterEnd]; 
           CRNSSA`Private`infIter = False]; If[
           And[
            Or[
             And[CRNSSA`Private`iterEnd =!= Infinity, 
              Not[
               IntegerQ[CRNSSA`Private`iterEnd]]], CRNSSA`Private`iterEnd <= 
             0], CRNSSA`Private`useIter === True], 
           Message[
            MessageName[CRNSSA`DirectSSA, "iterenderr"], 
            CRNSSA`Private`iterEnd]]; If[
           Or[
            And[
            CRNSSA`Private`infTime === True, CRNSSA`Private`useIter === 
             False], 
            And[
            CRNSSA`Private`infIter === True, CRNSSA`Private`useIter === 
             True]], CRNSSA`Private`inf = True, CRNSSA`Private`inf = False]; 
         CRNSSA`Private`initCounts = 
          CRNSSA`Private`GetInitCounts[
           CRNSSA`Private`inits, CRNSSA`Private`spcs]; 
         CRNSSA`Private`reactCounts = 
          CRNSSA`Private`GetReactCounts[
           CRNSSA`Private`rxns, CRNSSA`Private`spcs]; 
         CRNSSA`Private`prodCounts = 
          CRNSSA`Private`GetProdCounts[
           CRNSSA`Private`rxns, CRNSSA`Private`spcs]; 
         CRNSSA`Private`rates = CRNSSA`Private`GetRates[CRNSSA`Private`rxns]; 
         CRNSSA`Private`initCountsNA = 
          NumericArray[CRNSSA`Private`initCounts, "Integer32"]; 
         CRNSSA`Private`reactCountsNA = 
          NumericArray[CRNSSA`Private`reactCounts, "Integer64"]; 
         CRNSSA`Private`prodCountsNA = 
          NumericArray[CRNSSA`Private`prodCounts, "Integer64"]; 
         CRNSSA`Private`ratesNA = 
          NumericArray[CRNSSA`Private`rates, "Real64"]; 
         CRNSSA`Private`DirectBackend[
          CRNSSA`Private`initCountsNA, CRNSSA`Private`reactCountsNA, 
           CRNSSA`Private`prodCountsNA, CRNSSA`Private`ratesNA, 
           CRNSSA`Private`timeEndR]; Null; {
           CRNSSA`Private`GetStates[], 
           CRNSSA`Private`GetTimes[]}]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "timeEnd" -> DirectedInfinity[1], "iterEnd" -> DirectedInfinity[1], 
      "useIter" -> False, "statesOnly" -> False, "finalOnly" -> False}, 
    "Attributes" -> {}, "FullName" -> "CRNSSA`DirectSSA"], False]]], "Print",
 CellTags->
  "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0",ExpressionUUID->"868fe9d9-0fe8-\
455b-9f73-b4176176f6ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Case 1:  Simple deterministic network", "Subtitle",
 CellChangeTimes->{{3.8147293084016476`*^9, 3.8147293236251154`*^9}, {
  3.8147294485535164`*^9, 3.8147294551377077`*^9}, {3.8147294940728483`*^9, 
  3.8147294946413283`*^9}, {3.8147300945293055`*^9, 3.8147300953690586`*^9}, {
  3.8147305699453588`*^9, 3.8147305706335526`*^9}, {3.8151519927289705`*^9, 
  3.8151520005506277`*^9}, {3.81516381722474*^9, 3.8151638277605734`*^9}, {
  3.8151644862727733`*^9, 3.8151644893117924`*^9}, {3.815164526800023*^9, 
  3.8151645283289356`*^9}},ExpressionUUID->"26cee006-515b-4511-9df5-\
a84f93ecb4e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxnsys1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rxn", "[", 
      RowBox[{"x", ",", 
       RowBox[{"2", "z"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rxn", "[", 
      RowBox[{
       RowBox[{"4", "z"}], ",", 
       RowBox[{"3", "y"}], ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"init", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"4", "n"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetSpecies", "[", "rxnsys1", "]"}]}], "Input",
 CellChangeTimes->{{3.812156221317891*^9, 3.8121562223571997`*^9}, {
   3.8121565321899853`*^9, 3.812156636184914*^9}, {3.812158087830205*^9, 
   3.812158090086171*^9}, {3.8121582194104958`*^9, 3.8121582195062714`*^9}, {
   3.8121586616070833`*^9, 3.812158662749466*^9}, {3.812158724346055*^9, 
   3.8121587491227446`*^9}, {3.8136902494857635`*^9, 3.813690293866238*^9}, {
   3.813690325675309*^9, 3.8136903534044065`*^9}, {3.8136904686793365`*^9, 
   3.8136905470523114`*^9}, {3.813690759774906*^9, 3.8136907808301764`*^9}, {
   3.81369180465316*^9, 3.8136918059147563`*^9}, {3.8136958192970276`*^9, 
   3.8136958287362013`*^9}, 3.814408563951381*^9, {3.814408598103632*^9, 
   3.8144086220944853`*^9}, {3.8147258847932034`*^9, 
   3.8147259087758307`*^9}, {3.814729346482357*^9, 3.814729374177208*^9}, {
   3.8147294727465734`*^9, 3.814729479738203*^9}, {3.8151520992945943`*^9, 
   3.8151521803901787`*^9}, 3.8151524649685187`*^9, 3.8151526511679187`*^9, {
   3.815164676233562*^9, 3.8151646775131454`*^9}, {3.815164853384704*^9, 
   3.815164861904892*^9}, {3.822410493232013*^9, 3.82241050004828*^9}, {
   3.822415554186577*^9, 3.8224155551280203`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4ac59a20-336b-40bd-8b3f-f93ee47e266c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.8224106878080006`*^9, 3.822415523360089*^9, 
  3.8224155567565975`*^9, 3.8224320615904107`*^9, 3.822432950311461*^9, 
  3.8224347311947165`*^9, 3.822435033496831*^9, 3.822435070810006*^9, 
  3.8224354965938997`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ae7f76ce-922f-4bce-8b45-c5071249650f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctResult1", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"13", "n"}], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.815152034252166*^9, 3.8151520508546915`*^9}, {
   3.8151522413188753`*^9, 3.815152243686548*^9}, {3.815152311109864*^9, 
   3.815152316518403*^9}, 3.8151523613598285`*^9, {3.8151526029429626`*^9, 
   3.8151526069033747`*^9}, {3.8151646363806343`*^9, 
   3.8151646718811665`*^9}, {3.8151647258891797`*^9, 3.815164726168432*^9}, {
   3.8151648666731806`*^9, 3.8151648745929713`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5e11963f-61a3-4efc-a463-60c5b3d560c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "650", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.815152091898631*^9, 3.815152319768712*^9, 3.815152363384424*^9, {
   3.8151526097587395`*^9, 3.8151526143734045`*^9}, 3.8151645083543835`*^9, {
   3.8151645927896376`*^9, 3.8151646062621098`*^9}, 3.8151647339228897`*^9, 
   3.8151647819809732`*^9, 3.81516484283656*^9, 3.815164887227393*^9, 
   3.8151719768529797`*^9, 3.8151720253374777`*^9, {3.8212033343287177`*^9, 
   3.8212033512570457`*^9}, 3.821203556590396*^9, 3.821206217990493*^9, 
   3.8212886167017274`*^9, 3.822410688092696*^9, 3.822415557709005*^9, 
   3.8224320630016675`*^9, 3.822432950886922*^9, 3.822434733034799*^9, 
   3.8224350342548027`*^9, 3.8224350715290823`*^9, 3.822435497556326*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b791cd2e-ef58-4332-824f-16397ccc057f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"states1", ",", " ", "times1"}], "}"}], " ", "=", " ", 
   RowBox[{"DirectSSA", "[", "rxnsys1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"states1", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "]"}], " ", "===", " ", 
  "correctResult1"}]}], "Input",
 CellChangeTimes->{{3.81472914943776*^9, 3.8147291765769897`*^9}, {
  3.81515205459922*^9, 3.815152078406739*^9}, {3.815171982356272*^9, 
  3.815171982563717*^9}, {3.8212033531342363`*^9, 3.8212033845648108`*^9}, {
  3.8217981911583867`*^9, 3.8217981924698024`*^9}, {3.8224105205309443`*^9, 
  3.8224105290332623`*^9}, {3.822415527985489*^9, 3.822415543639947*^9}, {
  3.822415573647689*^9, 3.822415583074106*^9}, {3.8224320688939047`*^9, 
  3.8224320720863314`*^9}, {3.822432960693721*^9, 3.822432963457307*^9}, {
  3.8224347448900785`*^9, 3.8224347649593887`*^9}, {3.8224349243997383`*^9, 
  3.822434958864498*^9}, {3.822435076789012*^9, 3.8224350818634696`*^9}, {
  3.8224351179070077`*^9, 3.822435209447111*^9}, {3.8224355004565663`*^9, 
  3.8224355033229*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"77c1fb6b-12dc-4da7-a958-5c5a4452f187"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8224329735891857`*^9, {3.8224347396540875`*^9, 3.822434762020251*^9}, {
   3.8224349256373906`*^9, 3.8224349607185354`*^9}, 3.822435035232188*^9, {
   3.822435072325982*^9, 3.822435082275366*^9}, {3.8224351185363245`*^9, 
   3.8224352129437547`*^9}, 3.822435504739111*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"db5b5d4d-e860-430d-825e-9fd9c8dcb545"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Case 2: Minimum computer", "Subtitle",
 CellChangeTimes->{{3.814729544657347*^9, 3.8147295560648165`*^9}, {
  3.8147323846177015`*^9, 3.8147323855292654`*^9}, {3.815152008630013*^9, 
  3.8151520108057847`*^9}, {3.8151638108399563`*^9, 3.815163863880005*^9}, {
  3.815172053116638*^9, 
  3.8151720536601863`*^9}},ExpressionUUID->"a94da052-b5f9-4bc7-a8af-\
06681168a31e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1n", "=", "500"}], ";", 
  RowBox[{"x2n", "=", "750"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxnsys2", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rxn", "[", 
      RowBox[{
       RowBox[{"x1", "+", "x2"}], ",", "y", ",", "1"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"init", "[", 
      RowBox[{"x1", ",", "x1n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"init", "[", 
      RowBox[{"x2", ",", "x2n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetSpecies", "[", "rxnsys2", "]"}]}], "Input",
 CellChangeTimes->{{3.8147273669393797`*^9, 3.814727548120801*^9}, {
   3.814728356098337*^9, 3.8147283806253023`*^9}, {3.814728423009989*^9, 
   3.8147284230977907`*^9}, {3.814730632763997*^9, 3.8147307464500284`*^9}, {
   3.8151534540387955`*^9, 3.8151534549742966`*^9}, {3.8151638763847265`*^9, 
   3.8151638972325783`*^9}, 3.8151640289859858`*^9, {3.8151642376572676`*^9, 
   3.8151642377450333`*^9}, {3.8224105461808476`*^9, 3.8224105512884283`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"9abb1f7f-8a2b-4bba-9e64-c50d159e10c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2", ",", "y"}], "}"}]], "Output",
 CellChangeTimes->{3.822410691700859*^9, 3.8224352220913105`*^9, 
  3.822435509011679*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"bfb206dd-be4e-4191-8e9c-85171a614a93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctResult2", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"0", ",", 
      RowBox[{"x1n", "-", "x2n"}]}], "]"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"0", ",", 
      RowBox[{"x2n", "-", "x1n"}]}], "]"}], ",", 
    RowBox[{"Min", "[", 
     RowBox[{"x1n", ",", "x2n"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.815164044048854*^9, 3.815164065728702*^9}, {
  3.8151642430492935`*^9, 3.8151642431370573`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3834eb3a-3752-4ce7-95d2-d728d425aa38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "250", ",", "500"}], "}"}]], "Output",
 CellChangeTimes->{3.8212062222371597`*^9, 3.8212886213512955`*^9, 
  3.8224106926531363`*^9, 3.8224352231225224`*^9, 3.8224355097297583`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"3ee81119-4415-4124-89bd-12ded50bd088"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"states2", ",", " ", "times2"}], "}"}], " ", "=", " ", 
   RowBox[{"DirectSSA", "[", "rxnsys2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"states2", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "]"}], " ", "===", " ", 
  "correctResult2"}]}], "Input",
 CellChangeTimes->{{3.814727554850992*^9, 3.81472756962504*^9}, {
  3.8147296561704426`*^9, 3.814729659057314*^9}, {3.814729937049659*^9, 
  3.814729937210195*^9}, {3.814745424335478*^9, 3.8147454257816133`*^9}, {
  3.8151534593825464`*^9, 3.8151534609194007`*^9}, {3.8151642455137043`*^9, 
  3.8151642456005144`*^9}, {3.815171986564534*^9, 3.815171986915563*^9}, {
  3.8212034543170433`*^9, 3.8212034696368375`*^9}, {3.8212035105545745`*^9, 
  3.82120351670812*^9}, {3.8217982061258345`*^9, 3.821798207308633*^9}, {
  3.822410578678011*^9, 3.8224105792619867`*^9}, {3.822435512874345*^9, 
  3.822435513491729*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"68cdc8e7-1037-4072-a876-28eae94d6ab4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8147275704149265`*^9, 3.814727656114341*^9, 3.8147277514601655`*^9, {
   3.814728360691059*^9, 3.814728384808117*^9}, 3.8147284264189024`*^9, 
   3.8147287851170053`*^9, 3.8147299447269616`*^9, 3.8147301189263067`*^9, 
   3.814730167371466*^9, 3.8147303767871265`*^9, 3.814730581423626*^9, 
   3.814730758524288*^9, 3.8147308065044394`*^9, 3.814732389055471*^9, 
   3.8147352726604767`*^9, 3.814735447048485*^9, 3.8147454263301487`*^9, 
   3.8147455261361866`*^9, 3.8147506736428933`*^9, 3.8151641147762785`*^9, 
   3.815164251128344*^9, 3.815164513041199*^9, 3.8151648910006747`*^9, 
   3.8151719872616367`*^9, 3.815172028196259*^9, 3.8212034777829742`*^9, 
   3.8212035598255663`*^9, 3.821206223238789*^9, 3.821288622499786*^9, 
   3.8224106936225395`*^9, 3.8224352239483147`*^9, 3.8224355138926215`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0c4d90e1-a213-46f9-9a6c-cf35885832d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Case 3: Maximum computer", "Subtitle",
 CellChangeTimes->{{3.814729433809305*^9, 3.8147294355456643`*^9}, {
  3.81472950289729*^9, 3.814729513665765*^9}, {3.815152003589881*^9, 
  3.815152005574268*^9}, {3.815163852576223*^9, 3.8151638663523903`*^9}, {
  3.81517205871567*^9, 3.815172059243261*^9}, {3.821203560211543*^9, 
  3.8212035825159783`*^9}},ExpressionUUID->"cac518be-760f-4e04-892e-\
7b19f51723f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1n", "=", "1000"}], ";", 
  RowBox[{"x2n", "=", "999"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxnsys3", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rxn", "[", 
      RowBox[{"x1", ",", 
       RowBox[{"z1", "+", "y"}], ",", "1"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"rxn", "[", 
      RowBox[{"x2", ",", 
       RowBox[{"z2", "+", "y"}], ",", "1"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"rxn", "[", 
      RowBox[{
       RowBox[{"z1", "+", "z2", "+", "y"}], ",", "0", ",", "1"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"init", "[", 
      RowBox[{"x1", ",", "x1n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"init", "[", 
      RowBox[{"x2", ",", "x2n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetSpecies", "[", "rxnsys3", "]"}]}], "Input",
 CellChangeTimes->{{3.8144085881445637`*^9, 3.8144085949750285`*^9}, {
   3.8144086415345135`*^9, 3.814408773526466*^9}, {3.8144579679866905`*^9, 
   3.8144579724018903`*^9}, {3.814458753761915*^9, 3.8144587621056166`*^9}, {
   3.8147258972328653`*^9, 3.8147259108556476`*^9}, {3.814729528665941*^9, 
   3.8147295295857563`*^9}, {3.8151526620318785`*^9, 
   3.8151526649829865`*^9}, {3.81515274999076*^9, 3.8151527527902803`*^9}, 
   3.815152970502967*^9, {3.8151639034738913`*^9, 3.815163906353207*^9}, {
   3.815164300272455*^9, 3.815164306208584*^9}, {3.8151643393765936`*^9, 
   3.8151643453526173`*^9}, {3.815164465793594*^9, 3.815164465872384*^9}, {
   3.8224105896790795`*^9, 3.822410595128146*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9fe609a4-5ad6-46db-842b-92f8411dd608"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2", ",", "y", ",", "z1", ",", "z2"}], "}"}]], "Output",
 CellChangeTimes->{3.8224106952527637`*^9, 3.822435516653268*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"bd1dc6ae-4dea-4a87-a3df-32c3795f76cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctResult3", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{"Max", "[", 
     RowBox[{"x1n", ",", "x2n"}], "]"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"0", ",", 
      RowBox[{"x1n", "-", "x2n"}]}], "]"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"0", ",", 
      RowBox[{"x2n", "-", "x1n"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8151523668481617`*^9, 3.8151524314944134`*^9}, {
   3.8151528757345624`*^9, 3.815152880542447*^9}, {3.815152930590873*^9, 
   3.8151529878548255`*^9}, {3.815163928138424*^9, 3.8151639281933126`*^9}, {
   3.815164398969242*^9, 3.8151643991447744`*^9}, 3.8212035242452865`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"f92615d0-9019-478c-b222-a80eb17baabc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1000", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.815152953978963*^9, 3.8151529761784987`*^9}, 
   3.8151530118258724`*^9, 3.815164401967228*^9, 3.8151645163326516`*^9, 
   3.8151648936775227`*^9, 3.815172030672635*^9, 3.8212035649471893`*^9, 
   3.8212036553416553`*^9, 3.8212062275292473`*^9, 3.8212886259614687`*^9, 
   3.8224106962249193`*^9, 3.822435518291853*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ffdd9ada-fa34-4e7f-9f8d-cc8aeb12c43d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"states3", ",", " ", "times3"}], "}"}], " ", "=", " ", 
   RowBox[{"DirectSSA", "[", "rxnsys3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"states3", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "]"}], " ", "===", " ", 
  "correctResult3"}]}], "Input",
 CellChangeTimes->{{3.8121608648864627`*^9, 3.812160882763273*^9}, {
   3.8144084175118294`*^9, 3.8144084184224854`*^9}, 3.8144085678788805`*^9, {
   3.814409394391098*^9, 3.814409394766097*^9}, {3.814409814502433*^9, 
   3.814409816717512*^9}, {3.81445878639508*^9, 3.8144587884096975`*^9}, {
   3.8144588828344636`*^9, 3.8144588829052424`*^9}, {3.814725928632921*^9, 
   3.8147259288562293`*^9}, {3.815152340599249*^9, 3.815152341590205*^9}, {
   3.815164470338443*^9, 3.815164470416237*^9}, {3.815171990045226*^9, 
   3.815172011707431*^9}, {3.821203497485325*^9, 3.821203498428014*^9}, {
   3.8212035317816176`*^9, 3.8212035447004104`*^9}, {3.821798210189833*^9, 
   3.8217982121405516`*^9}, {3.822410640741945*^9, 3.822410641158665*^9}, {
   3.822435521549177*^9, 3.8224355218503675`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b6268b37-be13-4b8c-a833-d45a91bc13ff"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8136958408556876`*^9, 3.8136966010738564`*^9, 3.813777990258041*^9, 
   3.8137792659293594`*^9, 3.813782093866074*^9, 3.8139441051698823`*^9, 
   3.8144028506674657`*^9, 3.8144081164474936`*^9, 3.8144082812801294`*^9, {
   3.8144084130258255`*^9, 3.8144084200152583`*^9}, 3.8144085756778975`*^9, 
   3.814409318472169*^9, {3.8144093911324778`*^9, 3.8144093956008635`*^9}, 
   3.8144097625473037`*^9, 3.814457948271171*^9, 3.8144579822725086`*^9, 
   3.814458699053134*^9, {3.814458776234236*^9, 3.8144587889103575`*^9}, 
   3.814458885123316*^9, 3.814459120924247*^9, 3.814724630039251*^9, 
   3.814727363300116*^9, 3.81473010522451*^9, 3.8147305778638067`*^9, 
   3.814730804510827*^9, 3.8147323842476645`*^9, 3.8147354441564064`*^9, 
   3.8147506711934404`*^9, 3.8151530709743214`*^9, 3.8151645170706806`*^9, 
   3.8151648942361727`*^9, {3.81517199070144*^9, 3.8151720312610607`*^9}, 
   3.821203590754567*^9, 3.8212036567732644`*^9, 3.8212062281286464`*^9, 
   3.8212886265170355`*^9, 3.8224106970666037`*^9, 3.8224355223131266`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"32462897-9836-4576-a86d-6cad48f8eb8e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960., 478.5},
WindowMargins->{{-4.875, Automatic}, {Automatic, -4.875}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8a9966d4-13ea-4f76-9a73-3ff830b13d05"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-12c82221-d4fb-43e0-8884-1bde8115f5c0"->{
  Cell[7356, 182, 29449, 640, 200, "Print",ExpressionUUID->"868fe9d9-0fe8-455b-9f73-b4176176f6ea",
   CellTags->"Info-12c82221-d4fb-43e0-8884-1bde8115f5c0"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-12c82221-d4fb-43e0-8884-1bde8115f5c0", 54698, 1220}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 107, "Title",ExpressionUUID->"99313edb-9280-4a33-9415-fe73f5350fe5"],
Cell[815, 28, 525, 13, 74, "Input",ExpressionUUID->"e7a7664c-981c-41b9-b2ad-3bcf7543d26c"],
Cell[1343, 43, 197, 3, 31, "Input",ExpressionUUID->"8acb8700-aa44-4b5e-a852-0474740d5f06"],
Cell[CellGroupData[{
Cell[1565, 50, 197, 3, 31, "Input",ExpressionUUID->"0fa98d4e-a4fe-4b94-816c-fe5c54aeef97"],
Cell[1765, 55, 5588, 125, 104, "Output",ExpressionUUID->"2c5cb87f-2f0f-4890-b27d-8208b34b62ba"],
Cell[7356, 182, 29449, 640, 200, "Print",ExpressionUUID->"868fe9d9-0fe8-455b-9f73-b4176176f6ea",
 CellTags->"Info-12c82221-d4fb-43e0-8884-1bde8115f5c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36842, 827, 602, 8, 58, "Subtitle",ExpressionUUID->"26cee006-515b-4511-9df5-a84f93ecb4e8"],
Cell[CellGroupData[{
Cell[37469, 839, 1964, 37, 158, "Input",ExpressionUUID->"4ac59a20-336b-40bd-8b3f-f93ee47e266c"],
Cell[39436, 878, 398, 7, 35, "Output",ExpressionUUID->"ae7f76ce-922f-4bce-8b45-c5071249650f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39871, 890, 632, 11, 31, "Input",ExpressionUUID->"5e11963f-61a3-4efc-a463-60c5b3d560c0"],
Cell[40506, 903, 847, 13, 35, "Output",ExpressionUUID->"b791cd2e-ef58-4332-824f-16397ccc057f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41390, 921, 1223, 23, 53, "Input",ExpressionUUID->"77c1fb6b-12dc-4da7-a958-5c5a4452f187"],
Cell[42616, 946, 406, 6, 35, "Output",ExpressionUUID->"db5b5d4d-e860-430d-825e-9fd9c8dcb545"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43071, 958, 380, 6, 58, "Subtitle",ExpressionUUID->"a94da052-b5f9-4bc7-a8af-06681168a31e"],
Cell[CellGroupData[{
Cell[43476, 968, 1176, 24, 158, "Input",ExpressionUUID->"9abb1f7f-8a2b-4bba-9e64-c50d159e10c2"],
Cell[44655, 994, 255, 5, 35, "Output",ExpressionUUID->"bfb206dd-be4e-4191-8e9c-85171a614a93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44947, 1004, 567, 14, 31, "Input",ExpressionUUID->"3834eb3a-3752-4ce7-95d2-d728d425aa38"],
Cell[45517, 1020, 309, 5, 35, "Output",ExpressionUUID->"3ee81119-4415-4124-89bd-12ded50bd088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45863, 1030, 1074, 21, 53, "Input",ExpressionUUID->"68cdc8e7-1037-4072-a876-28eae94d6ab4"],
Cell[46940, 1053, 941, 13, 35, "Output",ExpressionUUID->"0c4d90e1-a213-46f9-9a6c-cf35885832d9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47930, 1072, 418, 6, 58, "Subtitle",ExpressionUUID->"cac518be-760f-4e04-892e-7b19f51723f0"],
Cell[CellGroupData[{
Cell[48373, 1082, 1717, 36, 200, "Input",ExpressionUUID->"9fe609a4-5ad6-46db-842b-92f8411dd608"],
Cell[50093, 1120, 252, 4, 35, "Output",ExpressionUUID->"bd1dc6ae-4dea-4a87-a3df-32c3795f76cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50382, 1129, 766, 16, 31, "Input",ExpressionUUID->"f92615d0-9019-478c-b222-a80eb17baabc"],
Cell[51151, 1147, 527, 8, 35, "Output",ExpressionUUID->"ffdd9ada-fa34-4e7f-9f8d-cc8aeb12c43d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51715, 1160, 1253, 23, 53, "Input",ExpressionUUID->"b6268b37-be13-4b8c-a833-d45a91bc13ff"],
Cell[52971, 1185, 1171, 16, 35, "Output",ExpressionUUID->"32462897-9836-4576-a86d-6cad48f8eb8e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

